{"version":3,"file":"static/js/89.57e0c6e9.chunk.js","mappings":"0TAWA,SAASA,IACL,OACI,SAAC,MAAD,WACI,SAAC,MAAD,MA2GZ,UAtGA,WACI,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,CACvCG,gBAAiB,KADrB,eAAOC,EAAP,KAAkBC,EAAlB,KAGA,GAAoCL,EAAAA,EAAAA,WAAS,GAA7C,eAAOM,EAAP,KAAmBC,EAAnB,KACMC,GAAUC,EAAAA,EAAAA,cANQ,wCAQxB,WAA4BC,GAA5B,4EACIL,GAAa,kBAAKD,GAAN,IAAiBD,gBAAiBO,EAAEC,OAAOC,SAE1B,GAAzBF,EAAEC,OAAOC,MAAMC,QAA+C,OAAhCH,EAAEC,OAAOC,MAAME,cAHrD,uBAIYC,OAAMC,EAJlB,UAKoBC,EAAAA,EAAAA,GAAQ,mCAAoC,CAAEd,gBAAiBO,EAAEC,OAAOC,OAAS,QALrG,OAOQ,QAAWI,IAFXD,EALR,QAO8B,CAIlB,IAFAG,QAAQC,IAAIJ,EAAG,MAENK,EAAI,EAAGA,EAAIL,EAAG,KAASF,OAAQO,IACpCL,EAAG,KAASK,GAAZ,GAAuBA,EAE3BF,QAAQC,IAAIJ,EAAG,MACfb,EAAkBa,EAAG,MACrBR,GAAc,GAhB1B,4CARwB,sBA6BxB,IAAIc,EAAU,GAERC,EAAU,CACZ,CAAEC,MAAO,KAAMC,WAAY,KAAMC,MAAM,GACvC,CAAEF,MAAO,aAAcC,WAAY,aAAcC,MAAM,GACvD,CAAEF,MAAO,eAAgBC,WAAY,eAAgBE,MAAO,IAAKC,UAAU,GAC3E,CAAEJ,MAAO,gBAAiBC,WAAY,kBAAmBE,MAAO,IAAKC,UAAU,GAC/E,CACIJ,MAAO,OACPC,WAAY,OACZI,UAAU,EACVF,MAAO,IACPG,2BAA2B,EAC3BC,YAAa,SAACC,GACVV,EAAUU,EAAOC,IAAIC,YAEzBC,WAAY,SAACC,GACT,OACI,SAAC,IAAD,CACIC,QAAQ,YACRC,QAAS,WACL7B,EAAQ8B,KAAK,mCAAqCjB,EAAU,IAAMjB,EAAS,kBAE/EmC,MAAM,UACNC,WAAW,SAAC,MAAD,IANf,6BAgBhB,OACI,UAAC,IAAD,CAAUC,MAAM,oDAAhB,WACI,SAAC,IAAD,CACIC,WAAS,EAETC,MAAM,kBACNR,GAAG,YACHS,WAAW,wBACXC,QAAS,SAACnC,IAvEE,oCAwERoC,CAAapC,OAQrB,mBACA,kBACEJ,GAEE,+BACI,gBAAKyC,MAAO,CAAEC,OAAQ,IAAKtB,MAAO,QAAlC,UACI,SAAC,MAAD,CACIuB,mBAAiB,EACjBC,KAAMjD,EACNqB,QAASA,EACT6B,WAAY,CACRC,QAASrD,SATd","sources":["views/Report/GetReportCompany.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MainCard from '../../ui-component/cards/MainCard';\nimport { TextField, Button } from '@material-ui/core';\nimport UsePost from '../../Utilities/UsePost';\nimport { DataGrid, RowsProp, ColDef, GridToolbarContainer, GridToolbarExport } from '@material-ui/data-grid';\nimport { useHistory } from 'react-router';\nimport responsePipelineHandler from '../../Utilities/ResponsePipelineHandler';\nimport HandleToast from '../../Utilities/HandleToast';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { IconDashboard, IconCirclePlus, IconDeviceAnalytics, IconSpeakerphone, IconEye } from '@tabler/icons';\n\nfunction CustomToolbar() {\n    return (\n        <GridToolbarContainer>\n            <GridToolbarExport />\n        </GridToolbarContainer>\n    );\n}\n\nfunction GetReportCompany() {\n    const [companyDetails, setCompanyDetails] = useState([]);\n    const [batchYear, setBatchYear] = useState({\n        Passed_out_year: ''\n    });\n    const [tableExist, setTableExist] = useState(false);\n    const history = useHistory();\n\n    async function handleChange(e) {\n        setBatchYear({ ...batchYear, Passed_out_year: e.target.value });\n\n        if (e.target.value.length == 4 || e.target.value.toLowerCase() == \"all\") {\n            let res = undefined;\n            res = await UsePost('/reports/placedStudentsByCompany', { Passed_out_year: e.target.value }, 'POST');\n\n            if (res != undefined) {\n\n                console.log(res[\"data\"])\n\n                for (let i = 0; i < res['data'].length; i++) {\n                    res['data'][i]['id'] = i;\n                }\n                console.log(res[\"data\"])\n                setCompanyDetails(res['data']);\n                setTableExist(true);\n            }\n        }\n    }\n\n    let temp_id = '';\n\n    const columns = [\n        { field: 'id', headerName: 'ID', hide: true },\n        { field: 'Company_ID', headerName: 'Company ID', hide: true },\n        { field: 'Company_name', headerName: 'Company Name', width: 220, editable: false },\n        { field: 'Student_Count', headerName: 'Placed Students', width: 220, editable: false },\n        {\n            field: 'View',\n            headerName: 'View',\n            sortable: false,\n            width: 200,\n            disableClickEventBubbling: true,\n            valueGetter: (params) => {\n                temp_id = params.row.Company_ID;\n            },\n            renderCell: (id) => {\n                return (\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => {\n                            history.push('/reports/single_company_details/' + temp_id + \"/\" + batchYear[\"Passed_out_year\"]);\n                        }}\n                        color=\"primary\"\n                        startIcon={<IconEye />}\n                    >\n                        View Details\n                    </Button>\n\n                );\n            }\n        },\n    ];\n\n    return (\n        <MainCard title=\"View / Download Placed Students By Company Report\">\n            <TextField\n                fullWidth\n                // required\n                label=\"Passed Out Year\"\n                id=\"fullWidth\"\n                helperText=\"Enter passed out year\"\n                onInput={(e) => {\n                    handleChange(e);\n                }}\n            // value={batchYear['Passed_out_year']}\n            // onChange={(e) => {\n            //     setBatchYear({ ...batchYear, Passed_out_year: e.target.value });\n            // }}\n            />\n\n            <br />\n            <br />\n            {!tableExist ? \"\"\n                :\n                <>\n                    <div style={{ height: 400, width: '100%' }}>\n                        <DataGrid\n                            checkboxSelection\n                            rows={companyDetails}\n                            columns={columns}\n                            components={{\n                                Toolbar: CustomToolbar\n                            }}\n                        />\n                    </div>\n                </>\n\n            }\n        </MainCard>\n    );\n}\n\nexport default GetReportCompany;\n"],"names":["CustomToolbar","useState","companyDetails","setCompanyDetails","Passed_out_year","batchYear","setBatchYear","tableExist","setTableExist","history","useHistory","e","target","value","length","toLowerCase","res","undefined","UsePost","console","log","i","temp_id","columns","field","headerName","hide","width","editable","sortable","disableClickEventBubbling","valueGetter","params","row","Company_ID","renderCell","id","variant","onClick","push","color","startIcon","title","fullWidth","label","helperText","onInput","handleChange","style","height","checkboxSelection","rows","components","Toolbar"],"sourceRoot":""}