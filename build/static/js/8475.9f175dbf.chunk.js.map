{"version":3,"file":"static/js/8475.9f175dbf.chunk.js","mappings":"kLAEMA,G,SAAW,mCAAG,WAAOC,EAAKC,GAAZ,6FAIZ,IAASC,KAJqBC,EAAlB,+BAA2B,OAA3B,SAENC,EAAW,IAAIC,SACjBC,EAAWC,OAAOC,KAAKP,GAIvBG,EAASK,OAAOH,EAASJ,GAAMD,EAAKK,EAASJ,KAPrC,OAWZQ,QAAQC,IAAI,CACRR,OAAQA,EACRS,QAAS,CACL,OAAU,oBAGdC,KAAMT,IAjBE,SAmBSU,MACjBd,EACA,CACIG,OAAQA,EACRS,QAAS,CACL,OAAU,oBAGdC,KAAMT,IA3BF,cAmBRW,EAnBQ,iBA8BKA,EAASC,OA9Bd,eA8BRC,EA9BQ,yBA+BLA,GA/BK,kCAmCZP,QAAQC,IAAI,KAAIO,YAnCJ,0DAAH,yDAuCjB,O,mKCpBcC,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CAC1BC,QAAS,SAKE,SAASC,IAEpB,OACI,iCACI,iBAAKC,MAAM,UAAX,WACI,gBAAKA,MAAM,MAAX,gBACA,cAAGA,MAAM,oCACT,gBAAKA,MAAM,OAAX,mBAEJ,SAACC,EAAA,EAAD,CAAKC,UAAU,SAAf,UACI,SAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAK,QAAQC,MAAM,QAAQC,KAAK,qBAA3D,oC,wKCnCVC,EAAY,CAAC,YAAa,a,eCM1BP,EDES,WAAiC,IAAdQ,EAAc,uDAAJ,GAExCC,EAGED,EAHFC,aADF,EAIID,EAFFE,iBAAAA,OAFF,MAEqB,cAFrB,EAGEC,EACEH,EADFG,kBAEIC,GAAUhB,EAAAA,EAAAA,IAAO,MAAPA,CAAciB,EAAAA,GACxBb,EAAmBc,EAAAA,YAAiB,SAAaC,EAASC,GAC9D,IAAMC,GAAQC,EAAAA,EAAAA,GAAST,GAEjBU,GAAgBC,EAAAA,EAAAA,GAAaL,GAEjCM,EAEEF,EAFFE,UAFI,EAIFF,EADFG,UAAAA,OAHI,MAGQ,MAHR,EAKAC,GAAQC,EAAAA,EAAAA,GAA8BL,EAAeZ,GAE3D,OAAoBkB,EAAAA,EAAAA,KAAKb,GAASc,EAAAA,EAAAA,GAAS,CACzCC,GAAIL,EACJN,IAAKA,EACLK,WAAWO,EAAAA,EAAAA,GAAKP,EAAWV,EAAoBA,EAAkBD,GAAoBA,GACrFO,MAAOA,GACNM,OA0BL,OAAOvB,EClDG6B,CAAU,CACpBpB,cANmBqB,E,SAAAA,KAOnBpB,iBAAkB,cAClBC,kBAAmBoB,EAAAA,EAAAA,WAErB,K,iHCXMxB,EAAY,CAAC,MAmBJ,SAASa,EAAaY,GAC7B,IASFC,EAREC,EACFF,EADFG,GAIF,EArBiB,SAAAH,GACjB,IAAMI,EAAS,CACbC,YAAa,GACbC,WAAY,IASd,OAPAtD,OAAOC,KAAK+C,GAAOO,SAAQ,SAAAC,GACrBC,EAAAA,EAAoBD,GACtBJ,EAAOC,YAAYG,GAAQR,EAAMQ,GAEjCJ,EAAOE,WAAWE,GAAQR,EAAMQ,MAG7BJ,EAYHM,EALUlB,EAAAA,EAAAA,GAA8BQ,EAAOzB,IAGjD8B,EADF,EACEA,YACAC,EAFF,EAEEA,WAoBF,OAfEL,EADEU,MAAMC,QAAQV,GACN,CAACG,GAAJ,eAAoBH,IACF,oBAATA,EACN,WACR,IAAME,EAASF,EAAI,WAAJ,aAEf,OAAKW,EAAAA,EAAAA,GAAcT,IAIZV,EAAAA,EAAAA,GAAS,GAAIW,EAAaD,GAHxBC,IAMDX,EAAAA,EAAAA,GAAS,GAAIW,EAAaH,IAG/BR,EAAAA,EAAAA,GAAS,GAAIY,EAAY,CAC9BH,GAAIF","sources":["Utilities/UsePostFile.js","views/Error/ErrorPage.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nconst UsePostFile = async (url, data, method = \"POST\") => {\n    try {\n        const formData = new FormData();\n        let all_keys = Object.keys(data)\n        for (let key in all_keys) {\n            // console.log(all_keys[key])\n            // formData[all_keys[key]] = data[all_keys[key]]\n            formData.append(all_keys[key], data[all_keys[key]])\n        }\n        // console.log(formData)\n        // formData.append('File', selectedFile);\n        console.log({\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                // 'Content-Type': 'multipart/form-data'\n            },\n            body: formData\n        })\n        let response = await fetch(\n            url,\n            {\n                method: method,\n                headers: {\n                    'Accept': 'application/json',\n                    // 'Content-Type': 'multipart/form-data'\n                },\n                body: formData\n            }\n        );\n        let res1 = await response.json();\n        return res1;\n    }\n\n    catch (err) {\n        console.log(err.toString())\n    }\n}\n\nexport default UsePostFile","import React, { useState, useEffect } from 'react'\n\n// material-ui\nimport { Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from '../../ui-component/cards/MainCard';\n\nimport { Button } from '@material-ui/core'\n\nimport { styled } from '@mui/material/styles';\n\nimport UsePostFile from '../../Utilities/UsePostFile'\nimport HandleToast from '../../Utilities/HandleToast'\nimport { ToastContainer, toast } from 'react-toastify';\nimport responsePipelineHandler from '../../Utilities/ResponsePipelineHandler';\nimport UseFetch from '../../Utilities/UseFetch';\nimport Box from '@mui/material/Box';\n\nimport './ErrorPage.css'\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\n\n\nexport default function ErrorPage() {\n\n    return (\n        <>\n            <div class=\"mainbox\">\n                <div class=\"err\">4</div>\n                <i class=\"far fa-question-circle fa-spin\"></i>\n                <div class=\"err2\">4</div>\n            </div>\n            <Box textAlign='center'>\n                <Button variant=\"outlined\" size=\"large\" color=\"error\" href=\"/dashboard/default\">\n                    GO TO HOME PAGE\n                </Button>\n            </Box>\n        </>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div')(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  process.env.NODE_ENV !== \"production\" ? Box.propTypes\n  /* remove-proptypes */\n  = {\n    // ----------------------------- Warning --------------------------------\n    // | These PropTypes are generated from the TypeScript type definitions |\n    // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n    // ----------------------------------------------------------------------\n\n    /**\n     * @ignore\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component used for the root node.\n     * Either a string to use a HTML element or a component.\n     */\n    component: PropTypes.elementType,\n\n    /**\n     * @ignore\n     */\n    sx: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.func])\n  } : void 0;\n  return Box;\n}","import { createBox } from '@mui/system';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../utils';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\n/**\n * @ignore - do not document.\n */\n\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nexport default Box;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport { propToStyleFunction } from '../getThemeValue';\n\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  Object.keys(props).forEach(prop => {\n    if (propToStyleFunction[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\n\nexport default function extendSxProp(props) {\n  const {\n    sx: inSx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}"],"names":["UsePostFile","url","data","key","method","formData","FormData","all_keys","Object","keys","append","console","log","headers","body","fetch","response","json","res1","toString","styled","display","ErrorPage","class","Box","textAlign","Button","variant","size","color","href","_excluded","options","defaultTheme","defaultClassName","generateClassName","BoxRoot","styleFunctionSx","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","className","component","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","clsx","createBox","createTheme","ClassNameGenerator","props","finalSx","inSx","sx","result","systemProps","otherProps","forEach","prop","propToStyleFunction","splitProps","Array","isArray","isPlainObject"],"sourceRoot":""}