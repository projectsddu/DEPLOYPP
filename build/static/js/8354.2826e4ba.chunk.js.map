{"version":3,"file":"static/js/8354.2826e4ba.chunk.js","mappings":"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","sources":["Utilities/HandleToast.js","Utilities/RedirectHandler.js","Utilities/ResponsePipelineHandler.js","Utilities/UsePostFile.js","ui-component/cards/GenericCards/ChipCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/Student_Views/Project/S_ProjectCard.js","views/Student_Views/Project/S_AddProject.js"],"sourcesContent":["const handleToast = function (params) {\n\n    const toast = params.HandleToast.toast\n    const data = params.data\n    const flag = params.HandleToast.flag\n    const customMessage = params.HandleToast.customMessage\n    let message = \"not defined\"\n    if (!flag) {\n        message = data[\"data\"]\n    }\n    else {\n        message = customMessage\n    }\n    if (data[\"status\"]) {\n        toast.success(message)\n    }\n    else {\n        toast.error(message)\n    }\n}\nexport default handleToast","import { useHistory } from \"react-router\"\nconst RedirectHandler = function (props) {\n    const history = useHistory()\n    const data = props.data\n    if (data[\"redirect\"]) {\n        history.push(data[\"redirectUrl\"])\n    }\n}\nexport default RedirectHandler","import handleToast from \"./HandleToast\"\nimport RedirectHandler from \"./RedirectHandler\"\nconst responsePipelineHandler = function (data, seq_no = 0) {\n    const executionSequence = [[RedirectHandler, handleToast], [handleToast]]\n    executionSequence[seq_no].forEach((func) => {\n        func(data)\n    })\n}\nexport default responsePipelineHandler\n","import { useState, useEffect } from 'react'\n\nconst UsePostFile = async (url, data, method = \"POST\") => {\n    try {\n        const formData = new FormData();\n        let all_keys = Object.keys(data)\n        for (let key in all_keys) {\n            // console.log(all_keys[key])\n            // formData[all_keys[key]] = data[all_keys[key]]\n            formData.append(all_keys[key], data[all_keys[key]])\n        }\n        // console.log(formData)\n        // formData.append('File', selectedFile);\n        console.log({\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                // 'Content-Type': 'multipart/form-data'\n            },\n            body: formData\n        })\n        let response = await fetch(\n            url,\n            {\n                method: method,\n                headers: {\n                    'Accept': 'application/json',\n                    // 'Content-Type': 'multipart/form-data'\n                },\n                body: formData\n            }\n        );\n        let res1 = await response.json();\n        return res1;\n    }\n\n    catch (err) {\n        console.log(err.toString())\n    }\n}\n\nexport default UsePostFile","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\n// import MainCard from './../../../ui-component/cards/MainCard';\nimport MainCard from '../MainCard';\n// import TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\nimport TotalIncomeCard from '../Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\n\n\n//-----------------------|| DASHBOARD - TOTAL INCOME DARK CARD ||-----------------------//\n\nconst ChipCard = (props) => {\n    const type = props.type\n    // if (type === undefined) {\n    //     // type = theme.palette.primary.dark\n    // }\n    // else {\n    //     type = \"error\"\n    // }\n    // style constant\n    const useStyles = makeStyles((theme) => ({\n        card: {\n            backgroundColor: props.type === undefined ? theme.palette.primary.main : theme.palette.error.main,\n            color: theme.palette.primary.light,\n            overflow: 'hidden',\n            position: 'relative',\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                width: '210px',\n                height: '210px',\n                background: 'linear-gradient(210.04deg, ' + theme.palette.primary[200] + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n                borderRadius: '50%',\n                top: '-30px',\n                right: '-180px'\n            },\n            '&:before': {\n                content: '\"\"',\n                position: 'absolute',\n                width: '210px',\n                height: '210px',\n                background: 'linear-gradient(140.9deg, ' + theme.palette.primary[200] + ' -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n                borderRadius: '50%',\n                top: '-160px',\n                right: '-130px'\n            }\n        },\n        content: {\n            padding: '16px !important'\n        },\n        avatar: {\n            ...theme.typography.commonAvatar,\n            ...theme.typography.largeAvatar,\n            backgroundColor: theme.palette.primary[800],\n            color: '#fff'\n        },\n        primary: {\n            color: '#fff'\n        },\n        secondary: {\n            color: theme.palette.primary.light,\n            marginTop: '5px'\n        },\n        padding: {\n            paddingTop: 0,\n            paddingBottom: 0\n        }\n    }));\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {props.isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            {props.data}\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nChipCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default ChipCard;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    content: {\n        padding: '16px !important'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n});\n\n//-----------------------|| SKELETON - TOTAL INCOME DARK/LIGHT Card ||-----------------------//\n\nconst TotalIncomeCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Skeleton variant=\"rect\" width={44} height={44} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={<Skeleton variant=\"rect\" height={20} />}\n                            secondary={<Skeleton variant=\"text\" />}\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomeCard;\n","import { Typography, MenuItem, Button, Checkbox } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { TextField } from '@material-ui/core';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport UseFetch from '../../../Utilities/UseFetch';\nimport { Select } from '@mui/material';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport UsePostFile from '../../../Utilities/UsePostFile';\nimport UsePost from '../../../Utilities/UsePost';\nimport responsePipelineHandler from '../../../Utilities/ResponsePipelineHandler';\nimport HandleToast from '../../../Utilities/HandleToast';\nimport { ToastContainer, toast } from 'react-toastify';\nconst axios = require(\"axios\")\nconst Input = styled('input')({\n    display: 'none'\n});\n\nfunction S_ProjectCard(props) {\n\n\n    let [studentProjectDetails, setstudentProjectDetails] = useState({\n        Project_Title: null,\n        Brief_Description: null,\n        Project_Link: null,\n        Technologies: null\n    });\n\n    let [studentProjectStateDetails, setstudentProjectStateDetails] = useState(\n        props.details\n    );\n\n\n\n    async function onAddProject() {\n        let updated_details = studentProjectStateDetails;\n        console.log(updated_details)\n        const res = await UsePost('/studentproject/createStudentProject', updated_details, 'POST');\n        const params1 = {\n            data: res,\n            HandleToast: {\n                toast: toast,\n                flag: false\n            }\n        };\n        console.log(res);\n        responsePipelineHandler(params1, 1);\n        props.onChangeFunc()\n    }\n\n    async function onUpdateProject() {\n        let updated_details = studentProjectStateDetails;\n        console.log(updated_details.Project_ID)\n        console.log(updated_details)\n        const res = await UsePost('/studentproject/updateStudentProject/' + updated_details.Project_ID, updated_details, 'POST');\n        const params1 = {\n            data: res,\n            HandleToast: {\n                toast: toast,\n                flag: false\n            }\n        };\n        console.log(res);\n        responsePipelineHandler(params1, 1);\n        props.onChangeFunc()\n    }\n\n    async function onDeleteProject() {\n\n        let Resp = await axios({\n            method: 'post',\n            url: \"/studentproject/deleteStudentProject/\" + studentProjectStateDetails.Project_ID,\n        });\n\n        console.log(Resp)\n        const params1 = {\n            data: Resp.data,\n            HandleToast: {\n                toast: toast,\n                flag: false\n            }\n        };\n        responsePipelineHandler(params1, 1);\n        handleClose()\n        console.log(props)\n        // props.callerFunc(props.seed, \"delete\")\n        props.onChangeFunc()\n\n    }\n\n    function onButtonClick(event) {\n        // required fields validations\n        const keys = Object.keys(studentProjectStateDetails);\n        // console.log(keys)\n        let count = 0;\n        for (let i = 0; i < keys.length; i++) {\n            let key = keys[i];\n            console.log(studentProjectStateDetails[key]);\n            if (studentProjectStateDetails[key] == null) {\n                // alert(\"Please fill all fields.\")\n                count++;\n            }\n        }\n        // console.log(\"Count: \", count)\n        if (count != 0) {\n            toast.error(\"To add project all fields are required\")\n        }\n\n        // Updations Here\n\n        if (event == \"add\") {\n            onAddProject()\n        }\n        else if (event == \"update\") {\n            onUpdateProject()\n        }\n        else if (event == \"delete\") {\n            onDeleteProject()\n        }\n    }\n\n\n\n\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        // border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n\n        console.log(props)\n        setstudentProjectStateDetails(props.details)\n    }, [])\n\n    return (\n        <>\n\n            <SubCard>\n                {/* <Button onClick={() => {\n                    console.log(studentProjectStateDetails)\n                }} >View State</Button> */}\n\n                <TextField\n                    fullWidth\n                    value={(studentProjectStateDetails.Project_Title)}\n                    id=\"title\"\n                    onChange={(e) => { setstudentProjectStateDetails({ ...studentProjectStateDetails, Project_Title: e.target.value }) }}\n                    label=\"Enter Project Title\"\n                >\n                </TextField>\n\n\n                <br />\n                <br />\n\n                <TextField\n                    value={studentProjectStateDetails.Brief_Description}\n                    onChange={(e) => {\n                        setstudentProjectStateDetails({ ...studentProjectStateDetails, Brief_Description: e.target.value });\n                    }}\n                    fullWidth\n                    multiline\n                    rows={5}\n                    maxRows={4}\n                    label=\"Enter Project Description\"\n                >\n\n                </TextField>\n                <br /><br />\n                <TextField\n                    onChange={(e) => {\n                        setstudentProjectStateDetails({ ...studentProjectStateDetails, Project_Link: e.target.value });\n                    }}\n                    value={studentProjectStateDetails.Project_Link}\n                    fullWidth\n                    label=\"Enter Project Link\"></TextField>\n                <br /><br />\n                <TextField\n                    onChange={(e) => {\n                        setstudentProjectStateDetails({ ...studentProjectStateDetails, Technologies: e.target.value });\n                    }}\n                    value={studentProjectStateDetails.Technologies}\n                    fullWidth\n                    label=\"Enter Technologies used in Project (comma separated)\"></TextField>\n                <br />\n                <br />\n                <Grid style={{ \"padding-top\": \"1%\" }} container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\n\n                    <Grid container md={12} xs={12} justifyContent=\"flex-end\">\n                        { props.source != \"server\" ? (\n                            <Grid item>\n                                <Button\n                                    onClick={() => onButtonClick(\"add\")}\n                                    variant=\"contained\" style={{ 'margin-top': '15%' }} size=\"medium\" component=\"span\">\n                                    Add Project\n                                    {/* Submit */}\n                                </Button>\n                            </Grid>\n                        ) : (\n                            <Grid container justifyContent=\"flex-end\" spacing={2}>\n\n                                <Grid item>\n                                    <Button\n                                        color=\"error\"\n                                        variant=\"contained\"\n                                        style={{ 'margin-top': '15%' }}\n                                        size=\"medium\"\n                                        component=\"span\"\n                                        onClick={handleOpen}\n                                    >\n                                        Delele Project\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        color=\"warning\"\n                                        variant=\"contained\"\n                                        style={{ 'margin-top': '15%', \"color\": \"white\", \"background\": \"#FFC107\" }}\n                                        size=\"medium\"\n                                        component=\"span\"\n                                        onClick={() => onButtonClick(\"update\")}\n                                    // onClick={handleOpen}\n                                    >\n                                        Update Project\n                                    </Button>\n\n                                </Grid>\n                            </Grid>\n                        )}\n\n                        {/* <Button onClick={handleOpen}>Open modal</Button> */}\n                        <Modal\n                            open={open}\n                            onClose={handleClose}\n                            aria-labelledby=\"modal-modal-title\"\n                            aria-describedby=\"modal-modal-description\"\n                        >\n                            <Box sx={style}>\n                                <Typography style={{ \"color\": \"#616161\" }} id=\"modal-modal-title\" variant=\"h3\" component=\"h1\">\n                                    Are, you really sure want to delete this project?\n                                </Typography><br />\n                                <Grid container spacing={2} justifyContent={\"\"}>\n                                    <Grid md={6} item>\n                                        <Button fullWidth style={{ color: \"white\", backgroundColor: \"#00C853\" }} variant=\"contained\"\n                                            onClick={() => onButtonClick(\"delete\")}\n                                        >\n                                            Confirm\n                                        </Button>\n                                    </Grid>\n                                    <Grid md={6} item>\n                                        <Button fullWidth color='error' variant=\"contained\" onClick={handleClose}>\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n\n                            </Box>\n                        </Modal>\n\n                    </Grid>\n                </Grid>\n            </SubCard>\n            <br />\n        </>\n    );\n}\n\nexport default S_ProjectCard;\n","import React, { useState, useEffect } from 'react';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { TextField } from '@material-ui/core';\nimport { ToastContainer, toast } from 'react-toastify';\nimport responsePipelineHandler from '../../../Utilities/ResponsePipelineHandler';\nimport UseFetch from '../../../Utilities/UseFetch';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { IconCirclePlus } from '@tabler/icons';\nimport Grid from '@mui/material/Grid';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { Typography } from '@material-ui/core';\nimport { ParseDate } from '../../../Utilities/ParseDate';\nimport ChipCard from \"../../../ui-component/cards/GenericCards/ChipCard\"\nimport S_ProjectCard from './S_ProjectCard';\n\nfunction S_AddProject() {\n\n    const [studentData, setStudentData] = useState('');\n    const [StudentDetails, setStudentDetails] = useState(undefined);\n    const [studentProject, setStudentProject] = useState(undefined)\n    const [projectCard, setProjectCard] = useState([]);\n\n    useEffect(async () => {\n        await handleChange()\n    }, [])\n\n    async function handleChange()\n    {\n        let response = undefined\n        response = await fetch(\"/studentproject/getOneStudentProject/\")\n        if (response != undefined) {\n            let data = undefined\n            data = await response.json()\n            console.log(data)\n            setStudentProject(data)\n\n            let project_card_copy = []\n\n            if (data.data != \"Student project record not found\" && data != undefined) {\n                for (let i = 0; i < data.data.length; i++) {\n                    console.log(data.data[i])\n                    let x = Math.random();\n                    project_card_copy.unshift(\n                        <S_ProjectCard\n                            onChangeFunc={handleProjectChange}\n                            callerFunc={changeStateFromChild}\n                            source={\"server\"}\n                            seed={x}\n                            from={\"line 86\"}\n                            details={data.data[i]}\n                            idx={i}\n                        />\n                    )\n\n                }\n                setProjectCard([].concat(project_card_copy))\n            }\n        }\n    }\n\n    async function handleProjectChange()\n    {\n        setProjectCard([])\n        await handleChange()\n    }\n\n    function changeStateFromChild(seed, operation) {\n        let project_card_copy = projectCard\n        if (operation == \"delete\") {\n            // for (let i = 0; i < projectCard.length; i++) {\n            //     let propDetails = projectCard[i].props.seed\n            //     if(seed==propDetails)\n            //     {\n\n            //     }\n            // }\n            let filteredList = project_card_copy.filter((elem) => {\n                return elem.props.seed != seed\n            })\n            console.log(filteredList)\n\n            setProjectCard(filteredList)\n        }\n    }\n\n    // const [jsonData, setjsonData] = useState(undefined)\n\n\n    function handleClick() {\n        // console.log(\"rikin here line number 80\")\n        let project_card_copy = projectCard;\n        project_card_copy.push(\n            <S_ProjectCard\n            onChangeFunc={handleProjectChange}\n            callerFunc={changeStateFromChild}\n            seed={Math.random()}\n            from={\"line 123\"}\n            details={{\n                Project_Title: null,\n                Brief_Description: null,\n                Project_Link: null,\n                Technologies: null\n            }}\n        />);\n        setProjectCard([].concat(project_card_copy));\n    }\n\n    const [first, setfirst] = useState(\"\")\n    useEffect(() => {\n        console.log(first)\n    }, [first])\n\n    return (\n        <>\n            <MainCard title=\"Add Project\">\n                {projectCard.map((elem) => {\n                    return (<>\n                        {elem}\n                    </>)\n                })}\n                <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n                    <LoadingButton\n                        color=\"primary\"\n                        onClick={handleClick}\n                        loading={false}\n                        loadingPosition=\"start\"\n                        startIcon={<IconCirclePlus />}\n                        variant=\"contained\"\n                    >\n                        Add\n                    </LoadingButton>\n                </Grid>\n            </MainCard>\n        </>\n    );\n}\n\nexport default S_AddProject;\n"],"names":["params","toast","HandleToast","data","flag","customMessage","message","success","error","props","history","useHistory","push","seq_no","executionSequence","RedirectHandler","handleToast","forEach","func","UsePostFile","url","key","method","formData","FormData","all_keys","Object","keys","append","console","log","headers","body","fetch","response","json","res1","toString","type","classes","makeStyles","theme","card","backgroundColor","undefined","palette","primary","main","color","light","overflow","position","content","width","height","background","borderRadius","top","right","padding","avatar","typography","commonAvatar","largeAvatar","secondary","marginTop","paddingTop","paddingBottom","useStyles","isLoading","border","className","contentClass","alignItems","disableGutters","variant","axios","require","styled","display","useState","Project_Title","Brief_Description","Project_Link","Technologies","details","studentProjectStateDetails","setstudentProjectStateDetails","updated_details","UsePost","res","params1","responsePipelineHandler","onChangeFunc","Project_ID","Resp","handleClose","onButtonClick","event","count","i","length","onAddProject","onUpdateProject","onDeleteProject","React","open","setOpen","useEffect","SubCard","TextField","fullWidth","value","id","onChange","e","target","label","multiline","rows","maxRows","Grid","style","container","direction","justifyContent","spacing","md","xs","source","item","Button","onClick","size","component","Modal","onClose","Box","sx","left","transform","bgcolor","boxShadow","p","Typography","setStudentProject","projectCard","setProjectCard","handleChange","project_card_copy","x","Math","random","unshift","handleProjectChange","callerFunc","changeStateFromChild","seed","from","idx","concat","operation","filteredList","filter","elem","first","MainCard","title","map","LoadingButton","loading","loadingPosition","startIcon"],"sourceRoot":""}