{"version":3,"file":"static/js/4562.d4981ee8.chunk.js","mappings":"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","sources":["views/Student_Views/Login/FirstTimeLogin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// material-ui\nimport { Button, TextField } from '@material-ui/core';\nimport { ToastContainer, toast } from 'react-toastify';\nimport responsePipelineHandler from '../../../Utilities/ResponsePipelineHandler'\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from './AuthWrapper1';\n// import Logo from './../../../../ui-component/Logo';\nimport Logo from './../../../layout/MainLayout/LogoSection/index';\nimport AuthCardWrapper from './AuthCardWrapper';\nimport RestLogin from './RestLogin';\nimport AuthFooter from './../../../ui-component/cards/AuthFooter';\nimport UsePost from \"../../../Utilities/UsePost\"\nimport { useHistory } from \"react-router-dom\"\n\n// assets\n\n//================================|| LOGIN MAIN ||================================//\n\nconst FirstTimeLogin = () => {\n    const history = useHistory()\n    const handleSubmit = async () => {\n        console.log(password)\n        const res = await UsePost(\"/studentLogin/changePasswordFirstTime\", password, \"POST\")\n        console.log(res)\n        const data = res.data\n        const params1 = {\n            data: res,\n            HandleToast: {\n                toast: toast,\n                flag: false,\n            }\n        }\n        responsePipelineHandler(params1, 1)\n        if (data == \"Password updated successfully\") {\n            history.push(\"/_student/login\")\n        }\n\n    }\n    const [password, setpassword] = useState({\n        oldPassword: \"\",\n        newPassword: \"\",\n        confirmNewPassword: \"\"\n    })\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n    const [showPassword, setShow] = useState(false)\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '95vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid style={{ marginLeft: \"-8%\" }} item sx={{ mb: 3 }} >\n                                        <RouterLink to=\"#\">\n                                            <Logo />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.grey}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Dharmsinh Desai University\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Change your password make sure it is not same as the first time password                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n\n                                        <TextField\n                                            type={showPassword ? \"text\" : \"password\"}\n                                            onKeyPress={(e) => {\n                                                if (e.key === \"Enter\") {\n                                                    handleSubmit(e)\n                                                }\n                                            }}\n                                            fullWidth\n                                            value={password.oldPassword}\n                                            onChange={(e) => {\n                                                setpassword({ ...password, oldPassword: e.target.value });\n                                            }}\n                                            label=\"Enter First Time Password\" />\n                                        <br />\n                                        <br />\n                                        <TextField\n                                            type={showPassword ? \"text\" : \"password\"}\n                                            onKeyPress={(e) => {\n                                                if (e.key === \"Enter\") {\n                                                    handleSubmit(e)\n                                                }\n                                            }}\n                                            onChange={(e) => {\n                                                setpassword({ ...password, newPassword: e.target.value });\n                                            }}\n                                            value={password.newPassword}\n                                            fullWidth label=\"Enter  New Password\" />\n                                        <br />\n                                        <br />\n                                        <TextField\n                                            type={showPassword ? \"text\" : \"password\"}\n                                            onKeyPress={(e) => {\n                                                if (e.key === \"Enter\") {\n                                                    handleSubmit(e)\n                                                }\n                                            }}\n                                            onChange={(e) => {\n                                                setpassword({ ...password, confirmNewPassword: e.target.value });\n                                            }}\n                                            value={password.confirmNewPassword}\n                                            fullWidth label=\"Confirm New Password\" /><br />\n                                        <br />\n                                        {/* <br /> */}\n                                        <Button\n                                            onClick={() => handleSubmit()}\n                                            fullWidth variant=\"contained\" size=\"large\">Change Password</Button>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    {/* <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/register\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Don't have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid> */}\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                {/* <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid> */}\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default FirstTimeLogin;\n"],"names":["history","useHistory","handleSubmit","console","log","password","UsePost","res","data","params1","HandleToast","toast","flag","responsePipelineHandler","push","useState","oldPassword","newPassword","confirmNewPassword","setpassword","theme","useTheme","matchDownSM","useMediaQuery","breakpoints","down","showPassword","container","direction","justifyContent","sx","minHeight","item","xs","alignItems","m","sm","mb","spacing","style","marginLeft","to","color","palette","grey","gutterBottom","variant","fontSize","textAlign","type","onKeyPress","e","key","fullWidth","value","onChange","target","label","onClick","size"],"sourceRoot":""}