{"version":3,"file":"static/js/774.5cc03aaf.chunk.js","mappings":"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","sources":["assets/images/icons/social-google.svg","Config/domainConfig.js","Utilities/HandleToast.js","Utilities/RedirectHandler.js","Utilities/ResponsePipelineHandler.js","Utilities/UsePostFile.js","ui-component/cards/Skeleton/EarningCard.js","ui-component/cards/Skeleton/PopularCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/Student_Views/Dashboard/NameCard.js","views/Student_Views/Dashboard/BajajAreaChartCard.js","views/Student_Views/Dashboard/PopularCard.js","views/Student_Views/Dashboard/TotalSubscriptionsCard.js","views/Student_Views/Dashboard/TotalIncomeDarkCard.js","views/Student_Views/Dashboard/TotalIncomeLightCard.js","views/Student_Views/Dashboard/StudentDataBarChart.js","views/Student_Views/Dashboard/UploadCVCard.js","views/Student_Views/Dashboard/UploadPhotoCard.js","views/Student_Views/Dashboard/index.js","../node_modules/@mui/base/composeClasses/composeClasses.js","../node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js","../node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/material/styles/useThemeProps.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../node_modules/@mui/material/utils/capitalize.js","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../node_modules/@mui/utils/esm/resolveProps.js"],"sourcesContent":["var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSocialGoogle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.06129 13.2253L4.31871 15.9975L1.60458 16.0549C0.793457 14.5504 0.333374 12.8292 0.333374 11C0.333374 9.23119 0.763541 7.56319 1.52604 6.09448H1.52662L3.94296 6.53748L5.00146 8.93932C4.77992 9.58519 4.65917 10.2785 4.65917 11C4.65925 11.783 4.80108 12.5332 5.06129 13.2253Z\",\n    fill: \"#FBBB00\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.4804 9.00732C21.6029 9.65257 21.6668 10.3189 21.6668 11C21.6668 11.7637 21.5865 12.5086 21.4335 13.2271C20.9143 15.6722 19.5575 17.8073 17.678 19.3182L17.6774 19.3177L14.6339 19.1624L14.2031 16.4734C15.4503 15.742 16.425 14.5974 16.9384 13.2271H11.2346V9.00732H17.0216H21.4804Z\",\n    fill: \"#518EF8\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.6772 19.3176L17.6777 19.3182C15.8498 20.7875 13.5277 21.6666 11 21.6666C6.93783 21.6666 3.40612 19.3962 1.60449 16.0549L5.0612 13.2253C5.96199 15.6294 8.28112 17.3408 11 17.3408C12.1686 17.3408 13.2634 17.0249 14.2029 16.4734L17.6772 19.3176Z\",\n    fill: \"#28B446\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8085 2.78892L14.353 5.61792C13.3807 5.01017 12.2313 4.65908 11 4.65908C8.21963 4.65908 5.85713 6.44896 5.00146 8.93925L1.52658 6.09442H1.526C3.30125 2.67171 6.8775 0.333252 11 0.333252C13.5881 0.333252 15.9612 1.25517 17.8085 2.78892Z\",\n    fill: \"#F14336\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSocialGoogle);\nexport default __webpack_public_path__ + \"static/media/social-google.9887eb8eb43729cb99f402cfa0de3c44.svg\";\nexport { ForwardRef as ReactComponent };","const domainConfig = {\n    // \"domain\": process.env.React_App_DOMAIN\n    \"domain\": \"http://placement.ceddu.in\"\n}\n\nexport default domainConfig","const handleToast = function (params) {\n\n    const toast = params.HandleToast.toast\n    const data = params.data\n    const flag = params.HandleToast.flag\n    const customMessage = params.HandleToast.customMessage\n    let message = \"not defined\"\n    if (!flag) {\n        message = data[\"data\"]\n    }\n    else {\n        message = customMessage\n    }\n    if (data[\"status\"]) {\n        toast.success(message)\n    }\n    else {\n        toast.error(message)\n    }\n}\nexport default handleToast","import { useHistory } from \"react-router\"\nconst RedirectHandler = function (props) {\n    const history = useHistory()\n    const data = props.data\n    if (data[\"redirect\"]) {\n        history.push(data[\"redirectUrl\"])\n    }\n}\nexport default RedirectHandler","import handleToast from \"./HandleToast\"\nimport RedirectHandler from \"./RedirectHandler\"\nconst responsePipelineHandler = function (data, seq_no = 0) {\n    const executionSequence = [[RedirectHandler, handleToast], [handleToast]]\n    executionSequence[seq_no].forEach((func) => {\n        func(data)\n    })\n}\nexport default responsePipelineHandler\n","import { useState, useEffect } from 'react'\n\nconst UsePostFile = async (url, data, method = \"POST\") => {\n    try {\n        const formData = new FormData();\n        let all_keys = Object.keys(data)\n        for (let key in all_keys) {\n            // console.log(all_keys[key])\n            // formData[all_keys[key]] = data[all_keys[key]]\n            formData.append(all_keys[key], data[all_keys[key]])\n        }\n        // console.log(formData)\n        // formData.append('File', selectedFile);\n        console.log({\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                // 'Content-Type': 'multipart/form-data'\n            },\n            body: formData\n        })\n        let response = await fetch(\n            url,\n            {\n                method: method,\n                headers: {\n                    'Accept': 'application/json',\n                    // 'Content-Type': 'multipart/form-data'\n                },\n                body: formData\n            }\n        );\n        let res1 = await response.json();\n        return res1;\n    }\n\n    catch (err) {\n        console.log(err.toString())\n    }\n}\n\nexport default UsePostFile","import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    cardHeading: {\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '14px'\n    }\n});\n\n//-----------------------|| SKELETON EARNING CARD ||-----------------------//\n\nconst EarningCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container justifyContent=\"space-between\">\n                            <Grid item>\n                                <Skeleton variant=\"rect\" width={44} height={44} />\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" width={34} height={34} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Skeleton variant=\"rect\" className={classes.cardHeading} height={40} />\n                    </Grid>\n                    <Grid item>\n                        <Skeleton variant=\"rect\" height={30} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default EarningCard;\n","import React from 'react';\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from './../../../store/constant';\n\n// style constant\nconst useStyles = makeStyles({\n    cardAction: {\n        padding: '10px',\n        display: 'flex',\n        paddingTop: 0,\n        justifyContent: 'center'\n    }\n});\n\n//-----------------------|| SKELETON - POPULAR CARD ||-----------------------//\n\nconst PopularCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                            <Grid item xs zeroMinWidth>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" height={20} width={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rect\" height={150} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardContent className={classes.cardAction}>\n                <Skeleton variant=\"rect\" height={25} width={75} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default PopularCard;\n","import React from 'react';\n\n// material-ui\nimport { Card, CardContent, Grid } from '@material-ui/core';\nimport Skeleton from '@material-ui/core/Skeleton';\n\n// project imports\nimport { gridSpacing } from '../../../store/constant';\n\n//-----------------------|| SKELETON TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst TotalGrowthBarChart = () => {\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                            <Grid item xs zeroMinWidth>\n                                <Grid container spacing={1}>\n                                    <Grid item xs={12}>\n                                        <Skeleton variant=\"text\" />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" height={50} width={80} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rect\" height={530} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalGrowthBarChart;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    content: {\n        padding: '16px !important'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n});\n\n//-----------------------|| SKELETON - TOTAL INCOME DARK/LIGHT Card ||-----------------------//\n\nconst TotalIncomeCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Skeleton variant=\"rect\" width={44} height={44} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={<Skeleton variant=\"rect\" height={20} />}\n                            secondary={<Skeleton variant=\"text\" />}\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomeCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonEarningCard from './../../../ui-component/cards/Skeleton/EarningCard';\n\n// assets\nimport EarningIcon from './../../../assets/images/icons/social-google.svg';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport GetAppTwoToneIcon from '@material-ui/icons/GetAppOutlined';\nimport FileCopyTwoToneIcon from '@material-ui/icons/FileCopyOutlined';\nimport PictureAsPdfTwoToneIcon from '@material-ui/icons/PictureAsPdfOutlined';\nimport ArchiveTwoToneIcon from '@material-ui/icons/ArchiveOutlined';\n\nimport UseFetch from '../../../Utilities/UseFetch';\nimport { useLocation } from \"react-router-dom\";\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        // '&:after': {\n        //     content: '\"\"',\n        //     position: 'absolute',\n        //     width: '210px',\n        //     height: '210px',\n        //     background: theme.palette.secondary[800],\n        //     borderRadius: '50%',\n        //     top: '-85px',\n        //     right: '-95px',\n        //     [theme.breakpoints.down('xs')]: {\n        //         top: '-105px',\n        //         right: '-140px'\n        //     }\n        // },\n        // '&:before': {\n        //     content: '\"\"',\n        //     position: 'absolute',\n        //     width: '210px',\n        //     height: '210px',\n        //     background: theme.palette.secondary[800],\n        //     borderRadius: '50%',\n        //     top: '-125px',\n        //     right: '-15px',\n        //     opacity: 0.5,\n        //     [theme.breakpoints.down('xs')]: {\n        //         top: '-155px',\n        //         right: '-70px'\n        //     }\n        // }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    // avatar: {\n    //     ...theme.typography.commonAvatar,\n    //     ...theme.typography.largeAvatar,\n    //     backgroundColor: theme.palette.secondary[800],\n    //     marginTop: '8px'\n    // },\n    // avatarRight: {\n    //     ...theme.typography.commonAvatar,\n    //     ...theme.typography.mediumAvatar,\n    //     backgroundColor: theme.palette.secondary.dark,\n    //     color: theme.palette.secondary[200],\n    //     zIndex: 1\n    // },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '14px',\n        marginBottom: '6px'\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        color: theme.palette.secondary[200]\n    },\n    // avatarCircle: {\n    //     cursor: 'pointer',\n    //     ...theme.typography.smallAvatar,\n    //     backgroundColor: theme.palette.secondary[200],\n    //     color: theme.palette.secondary.dark\n    // },\n    // circleIcon: {\n    //     transform: 'rotate3d(1, 1, 1, 45deg)'\n    // },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\n//===========================|| DASHBOARD DEFAULT - EARNING CARD ||===========================//\n\nconst NameCard = ({ isLoading, FirstName, MiddleName, LastName, Email_ID }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    // const id = useLocation().pathname.split(\"/\")[3]\n    // console.log(\"id: \"+id)\n    // const { required_data, loading } = UseFetch(\"/student/getOneStudent/\", \"GET\")\n    // let Student_ID, FirstName, MiddleName, LastName, Email_ID;\n    // if(!loading)\n    // {\n    //     // console.log(required_data[\"data\"]);\n    //     Student_ID = required_data[\"data\"][\"Student_ID\"];\n    //     FirstName = required_data[\"data\"][\"FirstName\"];\n    //     MiddleName = required_data[\"data\"][\"MiddleName\"];\n    //     LastName = required_data[\"data\"][\"LastName\"];\n    //     Email_ID = required_data[\"data\"][\"Email_ID\"];\n    // }\n\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <Grid container justifyContent=\"space-between\">\n                                <Grid item>\n                                    {/* <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <img src={EarningIcon} alt=\"Notification\" />\n                                    </Avatar> */}\n                                </Grid>\n                                <Grid item>\n                                    {/* <Avatar\n                                        variant=\"rounded\"\n                                        className={classes.avatarRight}\n                                        aria-controls=\"menu-earning-card\"\n                                        aria-haspopup=\"true\"\n                                        onClick={handleClick}\n                                    >\n                                        <MoreHorizIcon fontSize=\"inherit\" />\n                                    </Avatar> */}\n                                    {/* <Menu\n                                        id=\"menu-earning-card\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={handleClose}\n                                        variant=\"selectedMenu\"\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right'\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right'\n                                        }}\n                                    > */}\n                                    {/* <MenuItem onClick={handleClose}>\n                                            <GetAppTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Import Card\n                                        </MenuItem> */}\n                                    {/* <MenuItem onClick={handleClose}>\n                                            <FileCopyTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Copy Data\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <PictureAsPdfTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Export\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <ArchiveTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Archive File\n                                        </MenuItem> */}\n                                    {/* </Menu> */}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container alignItems=\"center\" minHeight=\"18vh\" minWidth=\"10000vw\">\n                                <Grid item>\n                                    <Typography style={{ \"text-transform\": \"capitalize\" }} className={classes.cardHeading}>{FirstName} {MiddleName} {LastName}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item sx={{ mb: 1.25 }}>\n                            <Typography className={classes.subHeading}>{Email_ID}</Typography>\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nNameCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default NameCard;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './chart-data/bajaj-area-chart';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.light\n    },\n    content: {\n        padding: '0px !important'\n    },\n    contentContainer: {\n        padding: '16px',\n        paddingBottom: 0,\n        color: '#fff'\n    },\n    fontStyle: {\n        fontWeight: 400\n    }\n}));\n\n//===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||===========================//\n\nconst BajajAreaChartCard = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const orangeDark = theme.palette.primary[800];\n\n    React.useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [orangeDark]);\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container className={classes.contentContainer}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"subtitle1\" sx={{ color: theme.palette.primary.dark }}>\n                                    Bajaj Finery\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h4\" sx={{ color: theme.palette.grey[800] }}>\n                                    $1839.00\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.grey[800] }}>\n                            10% Profit\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Chart {...chartData} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default BajajAreaChartCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Chip, Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\n\n// project imports\nimport BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonPopularCard from './../../../ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from './../../../store/constant';\n\n// assets\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@material-ui/icons/KeyboardArrowUpOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    cardAction: {\n        padding: '10px',\n        paddingTop: 0,\n        justifyContent: 'center'\n    },\n    primaryLight: {\n        color: theme.palette.primary[200],\n        cursor: 'pointer'\n    },\n    divider: {\n        marginTop: '12px',\n        marginBottom: '12px'\n    },\n    avatarSuccess: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.success.light,\n        color: theme.palette.success.dark,\n        marginLeft: '15px'\n    },\n    successDark: {\n        color: theme.palette.primary[800]\n    },\n    avatarError: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.orange.light,\n        color: theme.palette.orange.dark,\n        marginLeft: '15px'\n    },\n    errorDark: {\n        color: theme.palette.orange.dark\n    },\n    listChipError: {\n        // color: theme.palette.orange.dark,\n        // backgroundColor: theme.palette.orange.light,\n        color : theme.palette.success.dark,\n        backgroundColor: theme.palette.success.light,\n        // color: theme.palette.success.light,\n        // backgroundColor : theme.palette.success.dark,\n        // color: theme.palette.primary.light,\n        // backgroundColor : theme.palette.primary[800],\n        height: '24px',\n        padding: '0 6px',\n        marginRight: '5px'\n    },\n    listChipWarning: {\n        color: theme.palette.warning.dark,\n        backgroundColor: theme.palette.warning.light,\n        height: '24px',\n        padding: '0 6px'\n    },\n}));\n\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\n\nconst PopularCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Offers</Typography>\n                                    </Grid>\n                                    {/* <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            className={classes.primaryLight}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem>\n                                        </Menu>\n                                    </Grid> */}\n                                </Grid>\n                            </Grid>\n                            {/* <Grid item xs={12} sx={{ pt: '16px !important' }}>\n                                <BajajAreaChartCard />\n                            </Grid> */}\n                            <Grid item xs={12}>\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TCS\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    {/* <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $1839.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid> */}\n                                                    <Button variant=\"outlined\" color=\"primary\">View Offer</Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        {/* <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            Internship\n                                        </Typography> */}\n                                        <Grid item>\n                                            <Chip label=\"Internship\" className={classes.listChipWarning} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Kiatech\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    {/* <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $1839.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid> */}\n                                                    <Button variant=\"outlined\" color=\"primary\">View Offer</Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        {/* <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            Internship\n                                        </Typography> */}\n                                        <Grid item>\n                                            <Chip label=\"Internship\" className={classes.listChipWarning} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Infosys\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    {/* <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $1839.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid> */}\n                                                    <Button variant=\"outlined\" color=\"primary\">View Offer</Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        {/* <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            Internship\n                                        </Typography> */}\n                                        <Grid item>\n                                            <Chip label=\"Placement\" className={classes.listChipError} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Synnotech\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    {/* <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $1839.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid> */}\n                                                    <Button variant=\"outlined\" color=\"primary\">View Offer</Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        {/* <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            Internship\n                                        </Typography> */}\n                                        <Grid item>\n                                            <Chip label=\"Placement\" className={classes.listChipError} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions className={classes.cardAction}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nPopularCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default PopularCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, Grid, Typography } from '@material-ui/core';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from '../../../ui-component/cards/Skeleton/EarningCard';\n\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\n\n// assets\nimport LocalMallOutlinedIcon from '@material-ui/icons/LocalMallOutlined';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport UseFetch from '../../../Utilities/UseFetch';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&>div': {\n            position: 'relative',\n            zIndex: 5\n        },\n        // '&:after': {\n        //     content: '\"\"',\n        //     position: 'absolute',\n        //     width: '210px',\n        //     height: '210px',\n        //     background: theme.palette.primary[800],\n        //     borderRadius: '50%',\n        //     zIndex: 1,\n        //     top: '-85px',\n        //     right: '-95px',\n        //     [theme.breakpoints.down('xs')]: {\n        //         top: '-105px',\n        //         right: '-140px'\n        //     }\n        // },\n        // '&:before': {\n        //     content: '\"\"',\n        //     position: 'absolute',\n        //     zIndex: 1,\n        //     width: '210px',\n        //     height: '210px',\n        //     background: theme.palette.primary[800],\n        //     borderRadius: '50%',\n        //     top: '-125px',\n        //     right: '-15px',\n        //     opacity: 0.5,\n        //     [theme.breakpoints.down('xs')]: {\n        //         top: '-155px',\n        //         right: '-70px'\n        //     }\n        // }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff',\n        marginTop: '8px'\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '14px',\n        marginBottom: '6px'\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        color: theme.palette.primary[200]\n    },\n    avatarCircle: {\n        ...theme.typography.smallAvatar,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary[200],\n        color: theme.palette.primary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||-----------------------//\n\nconst TotalSubscriptionsCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [timeValue, setTimeValue] = React.useState(false);\n    const handleChangeTime = (event, newValue) => {\n        setTimeValue(newValue);\n    };\n\n    const { required_data, loading } = UseFetch(\"/subscribeannouncement/getSubscribedAnnouncements/\", \"GET\")\n\n    let no_of_subscriptions;\n\n    if (!loading) {\n        // console.log(required_data[\"data\"].length)\n\n        no_of_subscriptions = required_data[\"data\"].length\n\n    }\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonTotalOrderCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <Grid container justifyContent=\"space-between\">\n                                <Grid item>\n                                    {/* <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <LocalMallOutlinedIcon fontSize=\"inherit\" />\n                                    </Avatar> */}\n                                </Grid>\n                                {/* <Grid item>\n                                    <Button\n                                        disableElevation\n                                        variant={timeValue ? 'contained' : 'string'}\n                                        size=\"small\"\n                                        onClick={(e) => handleChangeTime(e, true)}\n                                    >\n                                        Month\n                                    </Button>\n                                    <Button\n                                        disableElevation\n                                        variant={!timeValue ? 'contained' : 'string'}\n                                        size=\"small\"\n                                        onClick={(e) => handleChangeTime(e, false)}\n                                    >\n                                        Year\n                                    </Button>\n                                </Grid> */}\n                            </Grid>\n                        </Grid>\n                        <Grid item sx={{ mb: 0.75 }}>\n                            <Grid container alignItems=\"center\">\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" minHeight=\"22vh\" minWidth=\"10000vw\">\n                                        <Grid item>\n                                            {timeValue ? (\n                                                <Typography className={classes.cardHeading}>25</Typography>\n                                            ) : (\n                                                <Typography className={classes.cardHeading}>{loading ? \"\" : no_of_subscriptions}</Typography>\n                                            )}\n                                        </Grid>\n                                        <Grid item>\n                                            {/* <Avatar className={classes.avatarCircle}>\n                                                <ArrowDownwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\n                                            </Avatar> */}\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Typography className={classes.subHeading}>Total Announcements Applied</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                {/* <Grid item xs={6}>\n                                    {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\n                                </Grid> */}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalSubscriptionsCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalSubscriptionsCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography, Grid } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.light,\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, ' + theme.palette.primary[200] + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, ' + theme.palette.primary[200] + ' -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '16px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff'\n    },\n    primary: {\n        color: '#fff'\n    },\n    secondary: {\n        color: theme.palette.primary.light,\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL INCOME DARK CARD ||-----------------------//\n\nconst TotalIncomeDarkCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container minHeight=\"8vh\">\n                        <List className={classes.padding}>\n                            <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                                <ListItemAvatar>\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <TableChartOutlinedIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    className={classes.padding}\n                                    sx={{\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={\n                                        <Typography variant=\"h4\" className={classes.primary}>\n                                            2\n                                        </Typography>\n                                    }\n                                    secondary={\n                                        <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                            Total Offers\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalIncomeDarkCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeDarkCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography, Grid } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, ' + theme.palette.primary.dark + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, ' + theme.palette.primary.dark + ' -14.02%, rgba(144, 202, 249, 0) 70.50%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '16px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary.light,\n        color: theme.palette.primary.dark\n    },\n    secondary: {\n        color: theme.palette.grey[900],\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL INCOME LIGHT CARD ||-----------------------//\n\nconst TotalIncomeLightCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard className={classes.card} contentClass={classes.content}>\n                    <Grid container minHeight=\"8vh\">\n                        <List className={classes.padding}>\n                            <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                                <ListItemAvatar>\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <StorefrontTwoToneIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    className={classes.padding}\n                                    primary={<Typography variant=\"h4\">2</Typography>}\n                                    secondary={\n                                        <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                            Total Internships\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalIncomeLightCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeLightCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { Grid, MenuItem, TextField, Typography, useTheme } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from '../../../ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { gridSpacing } from '../../../store/constant';\nimport \"./studentDataBarChart.css\"\n\n// chart data\n// import chartData from './chart-data/StudentSemCPIBar';\n\n\nconst status = [\n    {\n        value: 'today',\n        label: 'Today'\n    },\n    {\n        value: 'month',\n        label: 'This Month'\n    },\n    {\n        value: 'year',\n        label: 'This Year'\n    }\n];\n\n//-----------------------|| DASHBOARD - TOTAL GROWTH BAR CHART ||-----------------------//\n\n\n\n\n\n\n\n\n// export default chartData;\n\n\n//-----------------------|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst StudentDataBarChart = ({ isLoading, student_spi_list }) => {\n    const chartData = {\n        height: 480,\n        type: 'bar',\n        options: {\n            chart: {\n                id: 'bar-chart',\n                stacked: true,\n                toolbar: {\n                    show: true\n                },\n                zoom: {\n                    enabled: true\n                }\n            },\n            responsive: [\n                {\n                    breakpoint: 480,\n                    options: {\n                        legend: {\n                            position: 'bottom',\n                            offsetX: -10,\n                            offsetY: 0\n                        }\n                    }\n                }\n            ],\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: '50%'\n                }\n            },\n            xaxis: {\n                type: 'category',\n                categories: ['Sem 1', 'Sem 2', 'Sem 3', 'Sem 4', 'Sem 5', 'Sem 6', 'Sem 7', 'Sem 8']\n            },\n            legend: {\n                show: true,\n                fontSize: '14px',\n                fontFamily: `'Roboto', sans-serif`,\n                position: 'bottom',\n                offsetX: 20,\n                labels: {\n                    useSeriesColors: false\n                },\n                markers: {\n                    width: 16,\n                    height: 16,\n                    radius: 5\n                },\n                itemMargin: {\n                    horizontal: 15,\n                    vertical: 8\n                }\n            },\n            fill: {\n                type: 'solid'\n            },\n            dataLabels: {\n                enabled: false\n            },\n            grid: {\n                show: true\n            }\n        },\n        series: [\n            {\n                name: 'SPI',\n                data: []\n            }\n        ]\n    };\n\n\n\n\n\n\n    const [value, setValue] = React.useState('today');\n    const theme = useTheme();\n\n    const primary = theme.palette.text.primary;\n    const grey200 = theme.palette.grey[200];\n\n    const primary200 = theme.palette.primary[200];\n    const primaryDark = theme.palette.primary.dark;\n    const secondaryMain = theme.palette.secondary.main;\n    const secondaryLight = theme.palette.secondary.light;\n    const grey500 = theme.palette.grey[500];\n\n    // add spi into chart data\n    for (let i = 0; i < student_spi_list.length; i++) {\n        chartData[\"series\"][0][\"data\"][i] = (student_spi_list[i])\n\n    }\n\n    console.log(chartData[\"series\"])\n\n    React.useEffect(() => {\n        const newChartData = {\n            ...chartData.options,\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n            xaxis: {\n                labels: {\n                    style: {\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: [primary]\n                    }\n                }\n            },\n            grid: {\n                borderColor: grey200\n            },\n            tooltip: {\n                theme: 'light'\n            },\n            legend: {\n                labels: {\n                    colors: grey500\n                }\n            }\n        };\n\n        // do not load chart when loading\n        if (!isLoading) {\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n        }\n    }, [primary200, primaryDark, secondaryMain, secondaryLight, primary, grey200, isLoading, grey500]);\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonTotalGrowthBarChart />\n            ) : (\n                <MainCard>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                <Grid item>\n                                    {/* <Grid container direction=\"column\" spacing={1}>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle2\">Total Growth</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"h3\">$2,324.00</Typography>\n                                        </Grid>\n                                    </Grid> */}\n                                </Grid>\n                                {/* <Grid item>\n                                    <TextField\n                                        id=\"standard-select-currency\"\n                                        select\n                                        value={value}\n                                        onChange={(e) => setValue(e.target.value)}\n                                    >\n                                        {status.map((option) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid> */}\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Chart {...chartData} />\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nStudentDataBarChart.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default StudentDataBarChart;\n","import React, { useState, useEffect } from 'react'\n\n// material-ui\nimport { Grid, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from '../../../ui-component/cards/MainCard';\n\nimport { Button, Chip } from '@material-ui/core'\n\nimport { styled } from '@mui/material/styles';\n\nimport UsePostFile from '../../../Utilities/UsePostFile'\nimport HandleToast from '../../../Utilities/HandleToast'\nimport { ToastContainer, toast } from 'react-toastify';\nimport responsePipelineHandler from '../../../Utilities/ResponsePipelineHandler';\nimport UseFetch from '../../../Utilities/UseFetch';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { gridSpacing } from '../../../store/constant';\nimport { Modal } from '@material-ui/core';\nimport domainConfig from '../../../Config/domainConfig';\nconst Input = styled('input')({\n    display: 'none',\n});\n\n\n\nexport default function UploadResumeCard({ CV_Upload, fetchStudentDetails }) {\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const [uploadingData, setuploadingData] = useState(undefined)\n    const [data, setData] = useState({\n    });\n    useEffect(() => { }, [data]);\n\n    const changeHandler = (event) => {\n        console.log(event.target.files[0])\n        const file_data = event.target.files[0]\n        const file_name = event.target.files[0][\"name\"]\n        const file_size = parseInt(event.target.files[0][\"size\"])\n\n        if (file_size > 3000000) {\n            toast.error(\"The file size must be less than 3mb.\")\n            event.target.files[0] = undefined\n        }\n        else {\n            document.getElementById(\"fileUploadName2\").innerText = \" \" + file_name\n            let temp = data\n            temp[\"Student_CV_File\"] = file_data\n            setData(temp)\n        }\n    };\n\n    async function handleSubmit() {\n\n        handleOpen()\n        setuploadingData(true)\n        console.log(\"Debug log..\")\n        console.log(JSON.stringify(data) == \"{}\")\n        if (JSON.stringify(data) == \"{}\") {\n            toast.error(\"Please upload a CV file\")\n        }\n        else {\n\n            const res = await UsePostFile(\"/student/addCV\", data, \"POST\")\n            setuploadingData(false)\n            // console.log(res);\n            const params1 = {\n                data: res,\n                HandleToast: {\n                    toast: toast,\n                    flag: false,\n                }\n            }\n            // console.log(\"response from upload cv card: \", res[\"status\"]);\n            if (res[\"status\"]) {\n                // location.reload()\n                fetchStudentDetails()\n            }\n            responsePipelineHandler(params1, 1)\n            // END OF POSTING DATA EXAMPLE\n        }\n        handleClose()\n    }\n\n    return (\n\n        <MainCard title=\"Add Your CV\">\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                style={{ \"border\": \"0px solid white\" }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <CircularProgress style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    bgcolor: 'background.paper',\n                    // boxShadow: 24,\n                    border: \"0px solid white\",\n                    p: 4,\n                    borderWidth: \"0\"\n                }} color=\"primary\" />\n            </Modal>\n            <Grid container spacing={gridSpacing}>\n                <Grid item>\n                    <form enctype=\"multipart/form-data\" id=\"CVForm\">\n                        <label htmlFor=\"contained-button-file\">\n                            <Input\n                                onChange={(e) => changeHandler(e)}\n                                required\n                                accept=\".pdf\"\n                                id=\"contained-button-file\"\n                                multiple type=\"file\"\n                            />\n                            <Button variant=\"outlined\" size=\"large\" component=\"span\">\n                                Browse File\n                            </Button>\n                            <b><label id=\"fileUploadName2\"> </label></b>\n                        </label>\n                        <br />\n                        <br />\n                    </form>\n                </Grid>\n\n                <Grid item>\n                    <Button onClick={handleSubmit} variant=\"contained\" size=\"large\" color=\"primary\">\n                        Submit\n                    </Button>\n                </Grid>\n\n                <Grid item>\n\n                    {CV_Upload === undefined ? \"Wait Loading....\" : <>\n                        {CV_Upload != \"image.png\" ?\n                            <a target='blank'\n                                style={{ \"text-decoration\": \"none\", \"cursor\": \"pointer\" }}\n                                href={\n\n                                    process.env.NODE_ENV == \"production\" ?\n                                        domainConfig.domain +\n                                        // \"http://placement.csiddu.tech\" + \n                                        CV_Upload : \"http://localhost:8000\" + CV_Upload\n                                }\n                            >\n                                <Button variant=\"contained\" size=\"large\" color=\"primary\">\n                                    View CV\n                                </Button>\n                            </a> :\n                            <>\n                                <Chip label=\"No CV Uploaded\" />\n                            </>\n                        }\n\n                    </>\n                    }\n\n                </Grid>\n                {/* {uploadingData === undefined ? \"\" : uploadingData == true ? <Grid item>\n                    <CircularProgress />\n                </Grid> : \"\"} */}\n\n\n\n            </Grid>\n        </MainCard>\n    )\n}","import React, { useState, useEffect } from 'react'\n\n// material-ui\nimport { Grid, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from '../../../ui-component/cards/MainCard';\n\nimport { Button, Chip } from '@material-ui/core'\n\nimport { styled } from '@mui/material/styles';\n\nimport UsePostFile from '../../../Utilities/UsePostFile'\nimport HandleToast from '../../../Utilities/HandleToast'\nimport { ToastContainer, toast } from 'react-toastify';\nimport responsePipelineHandler from '../../../Utilities/ResponsePipelineHandler';\nimport UseFetch from '../../../Utilities/UseFetch';\n\nimport { gridSpacing } from '../../../store/constant';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Modal } from '@material-ui/core';\nimport domainConfig from '../../../Config/domainConfig';\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\n\n\nexport default function UploadPhotoCard({ Student_Photo, fetchStudentDetails }) {\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [uploadingData, setuploadingData] = useState(undefined)\n    const [data, setData] = useState({\n    });\n    useEffect(() => { }, [data]);\n\n    const changeHandler1 = (event) => {\n        console.log(event.target.files[0])\n        const file_data = event.target.files[0]\n        const file_name = event.target.files[0][\"name\"]\n        const file_size = parseInt(event.target.files[0][\"size\"])\n        if (file_size > (2000000 / 4)) {\n            toast.error(\"The file size must be less than 500Kb.\")\n            event.target.files[0] = undefined\n        }\n        else {\n            document.getElementById(\"fileUploadName1\").innerText = \" \" + file_name\n            let temp = data\n            console.log(document.getElementById('fileUploadName1'));\n            temp[\"Student_Photo_File\"] = file_data\n            console.log(temp)\n            setData(temp)\n        }\n    };\n\n    async function handleSubmit() {\n        handleOpen()\n        if (JSON.stringify(data) == \"{}\") {\n            toast.error(\"Please upload photo file\")\n        }\n        else {\n\n            setuploadingData(true)\n            const res = await UsePostFile(\"/student/uploadPhoto\", data, \"POST\")\n            setuploadingData(false)\n            // console.log(res);\n            const params1 = {\n                data: res,\n                HandleToast: {\n                    toast: toast,\n                    flag: false,\n                }\n            }\n            // console.log(\"response from upload photo card: \", res[\"status\"]);\n            if (res[\"status\"]) {\n                fetchStudentDetails()\n            }\n            responsePipelineHandler(params1, 1)\n        }\n        handleClose()\n        // console.log(res);\n        // END OF POSTING DATA EXAMPLE\n    }\n\n    return (\n\n        <MainCard title=\"Add Your Photo\">\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                style={{ \"border\": \"0px solid white\" }}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <CircularProgress style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    bgcolor: 'background.paper',\n                    // boxShadow: 24,\n                    border: \"0px solid white\",\n                    p: 4,\n                    borderWidth: \"0\"\n                }} color=\"primary\" />\n            </Modal>\n\n            <Grid container spacing={gridSpacing}>\n                <Grid item>\n                    <form enctype=\"multipart/form-data\" id=\"PhotoForm\">\n                        <Button\n                            variant=\"outlined\"\n                            size='large'\n                            component=\"label\"\n                        >\n                            Browse File\n                            <input\n                                onChange={(e) => changeHandler1(e)}\n                                required\n                                type=\"file\"\n                                accept=\".JPG\"\n                                hidden\n                            />\n                        </Button>\n                        <b><label id=\"fileUploadName1\"> </label></b>\n                        <br />\n                        <br />\n                    </form>\n                </Grid>\n\n                <Grid item>\n                    <Button\n                        onClick={handleSubmit}\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                    >\n                        Submit\n                    </Button>\n                </Grid>\n\n                <Grid item>\n\n                    {/* <Chip label={\"View Student Photo\"} /> */}\n\n                    {Student_Photo === undefined ? \"Wait Loading....\" : <>\n                        {/* {console.log(Student_Photo)} */}\n                        {Student_Photo != \"image1.png\" || Student_Photo != \"\"\n                            ?\n                            <a target='blank'\n                                style={{ \"text-decoration\": \"none\", \"cursor\": \"pointer\" }}\n                                href={\n                                    process.env.NODE_ENV == \"production\" ?\n                                        domainConfig.domain +\n                                        // \"http://placement.csiddu.tech\" + \n                                        Student_Photo : \"http://localhost:8000\" + Student_Photo\n                                }\n                            >\n                                <Button variant=\"contained\" size=\"large\" color=\"primary\">\n                                    View Photo\n                                </Button>\n                            </a> :\n                            <>\n                                <Chip label=\"No Photo Uploaded!\" />\n                            </>\n                        }\n\n                    </>\n                    }\n\n                </Grid>\n                {/* {uploadingData === undefined ? \"\" : uploadingData == true ? <Grid item>\n                    <CircularProgress />\n                </Grid> : \"\"} */}\n\n\n            </Grid>\n        </MainCard>\n    )\n}","import React, { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid } from '@material-ui/core';\n\n// project imports\nimport NameCard from './NameCard';\nimport PopularCard from './PopularCard';\nimport TotalSubscriptionsCard from './TotalSubscriptionsCard';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\nimport StudentDataBarChart from './StudentDataBarChart';\nimport { gridSpacing } from '../../../store/constant';\nimport UseFetch from '../../../Utilities/UseFetch';\nimport HandleToast from '../../../Utilities/HandleToast';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport responsePipelineHandler from '../../../Utilities/ResponsePipelineHandler';\nimport usePost from '../../../Utilities/UsePost';\nimport UploadCVCard from './UploadCVCard';\nimport UploadPhotoCard from './UploadPhotoCard'\n\n//-----------------------|| DEFAULT DASHBOARD ||-----------------------//\n\nconst Dashboard = () => {\n    const [isLoading, setLoading] = useState(true);\n    useEffect(() => {\n        setLoading(false);\n\n    }, []);\n\n    let Student_ID, FirstName, MiddleName, LastName, Email_ID, CV_Upload, Student_Photo, Sem_1_SPI, Sem_2_SPI, Sem_3_SPI, Sem_4_SPI, Sem_5_SPI, Sem_6_SPI, Sem_7_SPI, Sem_8_SPI;\n\n    const [student_spi, setStudent_spi] = useState(undefined);\n\n\n    const [studentDetails, setStudentDetails] = useState(undefined);\n\n    async function fetchStudentDetails() {\n        const data = await fetch(\"/student/getOneStudent/\", { method: 'GET' })\n\n        let data1 = await data.json();\n\n        let student_spi_list = []\n\n        const required_data = data1\n        console.log(required_data)\n\n        if (required_data) {\n            // console.log(required_data[\"data\"]);\n            Student_ID = required_data[\"data\"][\"Student_ID\"];\n            FirstName = required_data[\"data\"][\"FirstName\"];\n            Email_ID = required_data[\"data\"][\"Email_ID\"];\n            MiddleName = required_data[\"data\"][\"MiddleName\"];\n            LastName = required_data[\"data\"][\"LastName\"];\n            Sem_1_SPI = required_data[\"data\"][\"Sem_1_SPI\"];\n            Sem_2_SPI = required_data[\"data\"][\"Sem_2_SPI\"];\n            Sem_3_SPI = required_data[\"data\"][\"Sem_3_SPI\"];\n            Sem_4_SPI = required_data[\"data\"][\"Sem_4_SPI\"];\n            Sem_5_SPI = required_data[\"data\"][\"Sem_5_SPI\"];\n            Sem_6_SPI = required_data[\"data\"][\"Sem_6_SPI\"];\n            Sem_7_SPI = required_data[\"data\"][\"Sem_7_SPI\"];\n            Sem_8_SPI = required_data[\"data\"][\"Sem_8_SPI\"];\n            console.log()\n            CV_Upload = required_data[\"data\"][\"CV_Upload\"];\n            // console.log(CV_Upload);\n            Student_Photo = required_data[\"data\"][\"Student_Photo\"]\n            // console.log(Student_Photo)\n\n            // push spi into list one by one\n            student_spi_list.push(Sem_1_SPI)\n            student_spi_list.push(Sem_2_SPI)\n            student_spi_list.push(Sem_3_SPI)\n            student_spi_list.push(Sem_4_SPI)\n            student_spi_list.push(Sem_5_SPI)\n            student_spi_list.push(Sem_6_SPI)\n            student_spi_list.push(Sem_7_SPI)\n            student_spi_list.push(Sem_8_SPI)\n\n            console.log(student_spi_list)\n\n            setStudent_spi(student_spi_list)\n            setStudentDetails({ Student_ID, FirstName, MiddleName, LastName, Email_ID, CV_Upload, Student_Photo })\n        }\n    }\n\n    // useEffect(async () => {\n    useEffect(() => {\n\n        // const data = await fetch(\"/student/getOneStudent/\", { method: 'GET' })\n\n        // let data1 = await data.json();\n\n        // let student_spi_list = []\n\n        // const required_data = data1\n        // console.log(required_data)\n\n        // if (required_data) {\n        //     // console.log(required_data[\"data\"]);\n        //     Student_ID = required_data[\"data\"][\"Student_ID\"];\n        //     FirstName = required_data[\"data\"][\"FirstName\"];\n        //     Email_ID = required_data[\"data\"][\"Email_ID\"];\n        //     MiddleName = required_data[\"data\"][\"MiddleName\"];\n        //     LastName = required_data[\"data\"][\"LastName\"];\n        //     Sem_1_SPI = required_data[\"data\"][\"Sem_1_SPI\"];\n        //     Sem_2_SPI = required_data[\"data\"][\"Sem_2_SPI\"];\n        //     Sem_3_SPI = required_data[\"data\"][\"Sem_3_SPI\"];\n        //     Sem_4_SPI = required_data[\"data\"][\"Sem_4_SPI\"];\n        //     Sem_5_SPI = required_data[\"data\"][\"Sem_5_SPI\"];\n        //     Sem_6_SPI = required_data[\"data\"][\"Sem_6_SPI\"];\n        //     Sem_7_SPI = required_data[\"data\"][\"Sem_7_SPI\"];\n        //     Sem_8_SPI = required_data[\"data\"][\"Sem_8_SPI\"];\n        //     console.log()\n        //     CV_Upload = required_data[\"data\"][\"CV_Upload\"];\n        //     // console.log(CV_Upload);\n        //     Student_Photo = required_data[\"data\"][\"Student_Photo\"]\n        //     // console.log(Student_Photo)\n\n        //     // push spi into list one by one\n        //     student_spi_list.push(Sem_1_SPI)\n        //     student_spi_list.push(Sem_2_SPI)\n        //     student_spi_list.push(Sem_3_SPI)\n        //     student_spi_list.push(Sem_4_SPI)\n        //     student_spi_list.push(Sem_5_SPI)\n        //     student_spi_list.push(Sem_6_SPI)\n        //     student_spi_list.push(Sem_7_SPI)\n        //     student_spi_list.push(Sem_8_SPI)\n\n        //     console.log(student_spi_list)\n\n        //     setStudent_spi(student_spi_list)\n        //     setStudentDetails({ Student_ID, FirstName, MiddleName, LastName, Email_ID, CV_Upload, Student_Photo })\n        // }\n\n        fetchStudentDetails()\n\n    }, []);\n\n\n\n    // const { required_data, loading } = UseFetch(\"/student/getOneStudent/\", \"GET\")\n    // let Student_ID, FirstName, MiddleName, LastName, Email_ID, CV_Upload, Sem_1_SPI, Sem_2_SPI, Sem_3_SPI, Sem_4_SPI, Sem_5_SPI, Sem_6_SPI, Sem_7_SPI, Sem_8_SPI;\n\n    // let student_spi_list = []\n\n    // const  {student_data} = fecth(\"/student/getOneStudent/\")\n\n    // if(!loading)\n    // {\n    //     // console.log(required_data[\"data\"]);\n    //     Student_ID = required_data[\"data\"][\"Student_ID\"];\n    //     FirstName = required_data[\"data\"][\"FirstName\"];\n    //     MiddleName = required_data[\"data\"][\"MiddleName\"];\n    //     LastName = required_data[\"data\"][\"LastName\"];\n    //     Sem_1_SPI = required_data[\"data\"][\"Sem_1_SPI\"];\n    //     Sem_2_SPI = required_data[\"data\"][\"Sem_2_SPI\"];\n    //     Sem_3_SPI = required_data[\"data\"][\"Sem_3_SPI\"];\n    //     Sem_4_SPI = required_data[\"data\"][\"Sem_4_SPI\"];\n    //     Sem_5_SPI = required_data[\"data\"][\"Sem_5_SPI\"];\n    //     Sem_6_SPI = required_data[\"data\"][\"Sem_6_SPI\"];\n    //     Sem_7_SPI = required_data[\"data\"][\"Sem_7_SPI\"];\n    //     Sem_8_SPI = required_data[\"data\"][\"Sem_8_SPI\"];\n    //     CV_Upload = \"http://localhost:8000\" + required_data[\"data\"][\"CV_Upload\"].split(\".\")[1] + \".pdf\";\n\n    //     // console.log(CV_Upload);\n\n    //     // push spi into list one by one\n    //     student_spi_list.push(Sem_1_SPI)\n    //     student_spi_list.push(Sem_2_SPI)\n    //     student_spi_list.push(Sem_3_SPI)\n    //     student_spi_list.push(Sem_4_SPI)\n    //     student_spi_list.push(Sem_5_SPI)\n    //     student_spi_list.push(Sem_6_SPI)\n    //     student_spi_list.push(Sem_7_SPI)\n    //     student_spi_list.push(Sem_8_SPI)\n\n    //     console.log(student_spi_list)\n\n    //     setStudent_spi(student_spi_list)\n    // }\n\n\n\n\n    return (\n        <>\n            {student_spi === undefined ? \"\" : <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            {studentDetails === undefined ? \"\" : <NameCard FirstName={studentDetails.FirstName} MiddleName={studentDetails.MiddleName[0]} LastName={studentDetails.LastName} Email_ID={studentDetails.Email_ID} isLoading={isLoading} />\n                            }\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <TotalSubscriptionsCard isLoading={isLoading} />\n                        </Grid>\n                        {/* <Grid item lg={4} md={12} sm={12} xs={12}>\n                            <Grid container spacing={gridSpacing}>\n                                <Grid item sm={6} xs={12} md={6} lg={12}>\n                                    <TotalIncomeDarkCard isLoading={isLoading} />\n                                </Grid>\n                                <Grid item sm={6} xs={12} md={6} lg={12}>\n                                    <TotalIncomeLightCard isLoading={isLoading} />\n                                </Grid>\n\n                            </Grid>\n                        </Grid> */}\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12} md={12}>\n                            {studentDetails === undefined ? \"\" : <UploadCVCard CV_Upload={studentDetails.CV_Upload} fetchStudentDetails={fetchStudentDetails} />}\n\n                        </Grid>\n                        <Grid item xs={12} md={12}>\n                            {studentDetails === undefined ? \"\" : <>\n                                {/* {studentDetails.Student_Photo} */}\n                                <UploadPhotoCard Student_Photo={studentDetails.Student_Photo} fetchStudentDetails={fetchStudentDetails} />\n                            </>}\n\n                        </Grid>\n                        <Grid item xs={12} md={12}>\n                            <StudentDataBarChart isLoading={isLoading}\n                                student_spi_list={student_spi}\n                            // Sem_1_SPI = {Sem_1_SPI}\n                            // Sem_2_SPI = {Sem_2_SPI}\n                            // Sem_3_SPI = {Sem_3_SPI}\n                            // Sem_4_SPI = {Sem_4_SPI}\n                            // Sem_5_SPI = {Sem_5_SPI}\n                            // Sem_6_SPI = {Sem_6_SPI}\n                            // Sem_7_SPI = {Sem_7_SPI}\n                            // Sem_8_SPI = {Sem_8_SPI}\n                            />\n                        </Grid>\n                        {/* <Grid item xs={12} md={4}>\n                            <PopularCard isLoading={isLoading} />\n                        </Grid> */}\n                    </Grid>\n                </Grid>\n            </Grid>\n            }\n        </>\n    );\n};\n\nexport default Dashboard;\n","export default function composeClasses(slots, getUtilityClass, classes) {\n  const output = {};\n  Object.keys(slots).forEach( // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n\n        acc.push(getUtilityClass(key));\n      }\n\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","import ClassNameGenerator from './ClassNameGenerator';\nconst globalStateClassesMapping = {\n  active: 'Mui-active',\n  checked: 'Mui-checked',\n  completed: 'Mui-completed',\n  disabled: 'Mui-disabled',\n  error: 'Mui-error',\n  expanded: 'Mui-expanded',\n  focused: 'Mui-focused',\n  focusVisible: 'Mui-focusVisible',\n  required: 'Mui-required',\n  selected: 'Mui-selected'\n};\nexport default function generateUtilityClass(componentName, slot) {\n  const globalStateClass = globalStateClassesMapping[slot];\n  return globalStateClass || `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots) {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot);\n  });\n  return result;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import { useThemeProps as systemUseThemeProps } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useThemeProps({\n  props,\n  name\n}) {\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme\n  });\n}","import getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme\n}) {\n  const theme = useTheme(defaultTheme);\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}","import { unstable_capitalize as capitalize } from '@mui/utils';\nexport default capitalize;","import { internal_resolveProps as resolveProps } from '@mui/utils';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n\n  return resolveProps(theme.components[name].defaultProps, props);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param {object} defaultProps\n * @param {object} props\n * @returns {object} resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = _extends({}, props);\n\n  Object.keys(defaultProps).forEach(propName => {\n    if (output[propName] === undefined) {\n      output[propName] = defaultProps[propName];\n    }\n  });\n  return output;\n}"],"names":["params","toast","HandleToast","data","flag","customMessage","message","success","error","props","history","useHistory","push","seq_no","executionSequence","RedirectHandler","handleToast","forEach","func","UsePostFile","url","key","method","formData","FormData","all_keys","Object","keys","append","console","log","headers","body","fetch","response","json","res1","toString","useStyles","makeStyles","cardHeading","marginRight","marginTop","marginBottom","classes","container","direction","item","justifyContent","variant","width","height","className","cardAction","padding","display","paddingTop","spacing","gridSpacing","xs","alignItems","zeroMinWidth","content","paddingBottom","disableGutters","primary","secondary","theme","card","backgroundColor","palette","dark","color","overflow","position","fontSize","fontWeight","subHeading","menuItem","isLoading","FirstName","MiddleName","LastName","Email_ID","React","border","contentClass","minHeight","minWidth","style","sx","mb","light","contentContainer","fontStyle","primaryLight","cursor","divider","avatarSuccess","borderRadius","marginLeft","successDark","avatarError","orange","errorDark","listChipError","listChipWarning","warning","zIndex","avatar","typography","commonAvatar","largeAvatar","avatarCircle","smallAvatar","circleIcon","transform","no_of_subscriptions","timeValue","UseFetch","required_data","loading","length","background","top","right","grey","student_spi_list","chartData","type","options","chart","id","stacked","toolbar","show","zoom","enabled","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","horizontal","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","vertical","fill","dataLabels","grid","series","name","useTheme","text","grey200","primary200","primaryDark","secondaryMain","main","secondaryLight","grey500","i","newChartData","colors","yaxis","borderColor","tooltip","ApexCharts","Input","styled","UploadResumeCard","CV_Upload","fetchStudentDetails","open","setOpen","handleOpen","handleClose","useState","undefined","setuploadingData","setData","useEffect","JSON","stringify","res","params1","responsePipelineHandler","title","Modal","onClose","CircularProgress","left","bgcolor","p","borderWidth","enctype","htmlFor","onChange","e","event","target","files","file_data","file_name","parseInt","document","getElementById","innerText","temp","changeHandler","required","accept","multiple","size","component","onClick","href","domainConfig","label","UploadPhotoCard","Student_Photo","changeHandler1","hidden","Student_ID","Sem_1_SPI","Sem_2_SPI","Sem_3_SPI","Sem_4_SPI","Sem_5_SPI","Sem_6_SPI","Sem_7_SPI","Sem_8_SPI","setLoading","student_spi","setStudent_spi","studentDetails","setStudentDetails","data1","lg","md","sm","composeClasses","slots","getUtilityClass","output","slot","reduce","acc","join","globalStateClassesMapping","active","checked","completed","disabled","expanded","focused","focusVisible","selected","generateUtilityClass","componentName","ClassNameGenerator","generateUtilityClasses","result","getCircularProgressUtilityClass","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","overridesResolver","styles","ownerState","root","capitalize","_extends","transition","transitions","create","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","inProps","ref","useThemeProps","thickness","value","other","_objectWithoutPropertiesLoose","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","_jsx","clsx","role","children","viewBox","cx","cy","r","strokeWidth","defaultTheme","getThemeProps","systemUseThemeProps","components","defaultProps","resolveProps","propName"],"sourceRoot":""}