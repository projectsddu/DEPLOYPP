{"version":3,"file":"static/js/6658.e3b5be42.chunk.js","mappings":"gRAOA,SAASA,IACL,OACI,SAAC,MAAD,WACI,SAAC,MAAD,MA6FZ,UAxFA,WACI,IAAMC,GAAaC,EAAAA,EAAAA,eAAcC,SAASC,MAAM,KAAK,GAC/CC,GAAaH,EAAAA,EAAAA,eAAcC,SAASC,MAAM,KAAK,GACrDE,QAAQC,IAAIN,GAEZ,OAA4CO,EAAAA,EAAAA,UAAS,IAArD,eAAuBC,GAAvB,WACA,GAAoDD,EAAAA,EAAAA,UAAS,IAA7D,eAAOE,EAAP,KAA2BC,EAA3B,KACA,GAA4CH,EAAAA,EAAAA,eAASI,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAEMC,GAAUC,EAAAA,EAAAA,eAEhBC,EAAAA,EAAAA,YAAS,iBAAC,+FACFC,OAAWN,EADT,SAEWO,MAAM,iCAAmClB,EAAa,IAAMI,GAFvE,eAIUO,IAFhBM,EAFM,gCAKEE,OAAcR,EALhB,SAMkBM,EAASG,OAN3B,YAOiBT,IADnBQ,EANE,UAQME,EAAOF,EAAW,KAEtBX,EAAkBa,EAAI,cACtBX,EAAsBW,EAAI,cAC1BR,EAAkBQ,EAAI,kBAZxB,4CAeP,IAEH,IACIC,EAAU,GACRC,EAAU,CACZ,CACIC,MAAO,OACPC,WAAY,OACZC,UAAU,EACVC,MAAO,GACPC,2BAA2B,EAC3BC,YAAa,SAACC,GACVR,EAAUQ,EAAOC,IAAIC,YAEzBC,WAAY,SAACC,GACT,OACI,+BACI,SAAC,IAAD,CACIC,MAAM,UACNC,QAAS,WACLtB,EAAQuB,KAAK,iCAAmCf,IAEpD,aAAW,iBACXgB,UAAU,OANd,UAQI,SAAC,IAAD,UAMpB,CAAEd,MAAO,KAAMC,WAAY,KAAMc,MAAM,GACvC,CAAEf,MAAO,aAAcC,WAAY,aAAcE,MAAO,IAAKa,UAAU,GACvE,CAAEhB,MAAO,YAAaC,WAAY,aAAcE,MAAO,IAAKa,UAAU,GACtE,CAAEhB,MAAO,aAAcC,WAAY,cAAeE,MAAO,IAAKa,UAAU,GACxE,CAAEhB,MAAO,WAAYC,WAAY,YAAaE,MAAO,IAAKa,UAAU,GACpE,CAAEhB,MAAO,iBAAkBC,WAAY,iBAAkBE,MAAO,IAAKa,UAAU,GAC/E,CAAEhB,MAAO,iBAAkBC,WAAY,iBAAkBE,MAAO,IAAKa,UAAU,GAC/E,CAAEhB,MAAO,cAAeC,WAAY,cAAeE,MAAO,IAAKa,UAAU,GACzE,CAAEhB,MAAO,WAAYC,WAAY,WAAYE,MAAO,IAAKa,UAAU,GACnE,CAAEhB,MAAO,eAAgBC,WAAY,eAAgBE,MAAO,IAAKa,UAAU,GAC3E,CAAEhB,MAAO,eAAgBC,WAAY,eAAgBE,MAAO,IAAKa,UAAU,IAG/E,OACI,+BACI,SAAC,IAAD,CAAUC,WAA0B9B,IAAnBC,EAA+B,GAAKA,EAAc,aAAmB,MAAQR,EAA9F,UACI,gBAAKsC,MAAO,CAAEC,OAAQ,IAAKhB,MAAO,QAAlC,UACI,SAAC,MAAD,CACIiB,mBAAiB,EACjBC,KAAMpC,EACNc,QAASA,EACTuB,WAAY,CACRC,QAAShD,a,0BC5FjCiD,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,sNACD,cAEJN,EAAQ,EAAUG","sources":["views/Report/SingleCompanyDetails.js","../node_modules/@material-ui/icons/Visibility.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MainCard from '../../ui-component/cards/MainCard';\nimport { useHistory, useLocation } from 'react-router';\nimport { DataGrid, RowsProp, ColDef, GridToolbarContainer, GridToolbarExport } from '@material-ui/data-grid';\nimport { Paper, Typography, Box, Grid, IconButton, Button, ListItem, List } from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nfunction CustomToolbar() {\n    return (\n        <GridToolbarContainer>\n            <GridToolbarExport />\n        </GridToolbarContainer>\n    );\n}\n\nfunction SingleCompanyDetails() {\n    const company_id = useLocation().pathname.split('/')[3];\n    const batch_year = useLocation().pathname.split('/')[4];\n    console.log(company_id);\n\n    const [studentDetails, setStudentDetails] = useState([]);\n    const [studentDetailsCopy, setStudentDetailsCopy] = useState([]);\n    const [companyDetails, setCompanyDetails] = useState(undefined);\n\n    const history = useHistory();\n\n    useEffect(async () => {\n        let response = undefined;\n        response = await fetch('/reports/singleCompanyDetails/' + company_id + '/' + batch_year);\n\n        if (response != undefined) {\n            let studentData = undefined;\n            studentData = await response.json();\n            if (studentData != undefined) {\n                let data = studentData['data'];\n                // console.log(data)\n                setStudentDetails(data['Student_list']);\n                setStudentDetailsCopy(data['Student_list']);\n                setCompanyDetails(data['Company_details']);\n            }\n        }\n    }, []);\n\n    const rows = [];\n    let temp_id = '';\n    const columns = [\n        {\n            field: 'View',\n            headerName: 'View',\n            sortable: false,\n            width: 90,\n            disableClickEventBubbling: true,\n            valueGetter: (params) => {\n                temp_id = params.row.Student_ID;\n            },\n            renderCell: (id) => {\n                return (\n                    <>\n                        <IconButton\n                            color=\"primary\"\n                            onClick={() => {\n                                history.push('/student/view_student_profile/' + temp_id);\n                            }}\n                            aria-label=\"upload picture\"\n                            component=\"span\"\n                        >\n                            <VisibilityIcon />\n                        </IconButton>\n                    </>\n                );\n            }\n        },\n        { field: 'id', headerName: 'ID', hide: true },\n        { field: 'Student_ID', headerName: 'Student ID', width: 150, editable: true },\n        { field: 'FirstName', headerName: 'First Name', width: 155, editable: false },\n        { field: 'MiddleName', headerName: 'Middle Name', width: 168, editable: false },\n        { field: 'LastName', headerName: 'Last Name', width: 155, editable: false },\n        { field: 'SSC_Percentage', headerName: 'SSC Percentage', width: 185, editable: false },\n        { field: 'HSC_Percentage', headerName: 'HSC Percentage', width: 187, editable: false },\n        { field: 'Current_CPI', headerName: 'Current CPI', width: 160, editable: false },\n        { field: 'Email_ID', headerName: 'Email ID', width: 180, editable: false },\n        { field: 'Contact_No_1', headerName: 'Contact No 1', width: 167, editable: false },\n        { field: 'Contact_No_2', headerName: 'Contact No 2', width: 167, editable: false }\n    ];\n\n    return (\n        <>\n            <MainCard title={companyDetails === undefined ? '' : companyDetails['Company_name'] + ' - ' + batch_year}>\n                <div style={{ height: 400, width: '100%' }}>\n                    <DataGrid\n                        checkboxSelection\n                        rows={studentDetailsCopy}\n                        columns={columns}\n                        components={{\n                            Toolbar: CustomToolbar\n                        }}\n                    />\n                </div>\n            </MainCard>\n        </>\n    );\n}\n\nexport default SingleCompanyDetails;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;"],"names":["CustomToolbar","company_id","useLocation","pathname","split","batch_year","console","log","useState","setStudentDetails","studentDetailsCopy","setStudentDetailsCopy","undefined","companyDetails","setCompanyDetails","history","useHistory","useEffect","response","fetch","studentData","json","data","temp_id","columns","field","headerName","sortable","width","disableClickEventBubbling","valueGetter","params","row","Student_ID","renderCell","id","color","onClick","push","component","hide","editable","title","style","height","checkboxSelection","rows","components","Toolbar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}