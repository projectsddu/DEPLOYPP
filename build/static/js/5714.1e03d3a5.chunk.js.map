{"version":3,"file":"static/js/5714.1e03d3a5.chunk.js","mappings":"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","sources":["Utilities/HandleToast.js","Utilities/RedirectHandler.js","Utilities/ResponsePipelineHandler.js","views/Student_Views/Achievements/S_AddInternshipsCard.js","views/Student_Views/Achievements/S_AddInternship.js","../javascript/esm|/Users/jenilgandhi/Home/projects/Placement_Portal_SDP/Client/node_modules/@babel/runtime/helpers/esm/typeof.js","../javascript/esm|/Users/jenilgandhi/Home/projects/Placement_Portal_SDP/Client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../javascript/esm|/Users/jenilgandhi/Home/projects/Placement_Portal_SDP/Client/node_modules/@babel/runtime/helpers/esm/createSuper.js","../javascript/esm|/Users/jenilgandhi/Home/projects/Placement_Portal_SDP/Client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../javascript/esm|/Users/jenilgandhi/Home/projects/Placement_Portal_SDP/Client/node_modules/@babel/runtime/helpers/esm/inherits.js","../javascript/esm|/Users/jenilgandhi/Home/projects/Placement_Portal_SDP/Client/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js"],"sourcesContent":["const handleToast = function (params) {\n\n    const toast = params.HandleToast.toast\n    const data = params.data\n    const flag = params.HandleToast.flag\n    const customMessage = params.HandleToast.customMessage\n    let message = \"not defined\"\n    if (!flag) {\n        message = data[\"data\"]\n    }\n    else {\n        message = customMessage\n    }\n    if (data[\"status\"]) {\n        toast.success(message)\n    }\n    else {\n        toast.error(message)\n    }\n}\nexport default handleToast","import { useHistory } from \"react-router\"\nconst RedirectHandler = function (props) {\n    const history = useHistory()\n    const data = props.data\n    if (data[\"redirect\"]) {\n        history.push(data[\"redirectUrl\"])\n    }\n}\nexport default RedirectHandler","import handleToast from \"./HandleToast\"\nimport RedirectHandler from \"./RedirectHandler\"\nconst responsePipelineHandler = function (data, seq_no = 0) {\n    const executionSequence = [[RedirectHandler, handleToast], [handleToast]]\n    executionSequence[seq_no].forEach((func) => {\n        func(data)\n    })\n}\nexport default responsePipelineHandler\n","import { TextField, Button, Typography } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport Grid from '@mui/material/Grid';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport UsePost from '../../../Utilities/UsePost'\nimport responsePipelineHandler from '../../../Utilities/ResponsePipelineHandler';\nimport HandleToast from '../../../Utilities/HandleToast'\nimport { ToastContainer, toast } from 'react-toastify';\nconst axios = require(\"axios\");\n\nfunction S_AddInternshipsCard(props) {\n    let [studentInternshipStateDetails, setStudentInternshipStateDetails] = useState(props.details);\n\n    // console.log(props.details);\n\n    async function onAddInternship() {\n    //   console.log(\"hello from the add internship\")\n\n      let updated_details = studentInternshipStateDetails;\n        const res = await UsePost('/StudentAchievementsInternships/createStudentAchievementsInternships', updated_details, 'POST');\n        const params1 = {\n            data: res,\n            HandleToast: {\n                toast: toast,\n                flag: false\n            }\n        };\n        console.log(res);\n        responsePipelineHandler(params1, 1);\n        props.onChangeFunc()\n    }\n\n    async function onUpdateInternship() {\n\n        let updated_details = studentInternshipStateDetails;\n        console.log(updated_details)\n        // console.log(updated_details)\n        const res = await UsePost('/StudentAchievementsInternships/updateStudentAchievementsInternships/' + updated_details.id, updated_details, 'POST');\n        const params1 = {\n            data: res,\n            HandleToast: {\n                toast: toast,\n                flag: false\n            }\n        };\n        console.log(res);\n        responsePipelineHandler(params1, 1);\n        props.onChangeFunc()\n    }\n\n    async function onDeleteInternship() \n    {\n        let Resp = await axios({\n            method: 'post',\n            url: \"/StudentAchievementsInternships/deleteStudentAchievementsInternships/\" + studentInternshipStateDetails.id,\n        });\n\n        console.log(Resp)\n        const params1 = {\n            data: Resp.data,\n            HandleToast: {\n                toast: toast,\n                flag: false\n            }\n        };\n        responsePipelineHandler(params1, 1);\n        handleClose()\n        // console.log(props)\n        // props.callerFunc(props.seed, \"delete\")\n        props.onChangeFunc()\n    }\n\n    function onButtonClick(event) {\n        // required fields validations\n        const keys = Object.keys(studentInternshipStateDetails);\n        // console.log(keys)\n        let count = 0;\n        let flag = false;\n        for (let i = 0; i < keys.length; i++) {\n            let key = keys[i];\n            // console.log(studentInternshipStateDetails[key]);\n            if (studentInternshipStateDetails[key] == '' || studentInternshipStateDetails[key] == null) {\n                // alert(\"Please fill all fields.\")\n                // count++;\n                flag = true;\n                break;\n            }\n        }\n        console.log(\"Count: \", count)\n        // if (count != 0 ) {\n        //     toast.error(\"All fields are required in internships!\")\n        // } \n        if(flag)\n        {\n            toast.error(\"All fields are required in internships!\") \n        }\n        else {\n            if (event == 'add') {\n                onAddInternship();\n            } else if (event == 'update') {\n                onUpdateInternship();\n            } else if (event == 'delete') {\n                onDeleteInternship();\n            }\n        }\n    }\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        // border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    return (\n        <>\n            <SubCard>\n                <TextField\n                    fullWidth\n                    // required\n                    label=\"Company Name\"\n                    id=\"company_name\"\n                    helperText=\"Enter the company name\"\n                    value={studentInternshipStateDetails.Company_Name}\n                    onChange={(e) => {\n                        setStudentInternshipStateDetails({ ...studentInternshipStateDetails, Company_Name: e.target.value });\n                    }}\n                />\n                <br />\n                <br />\n\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={6}>\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                label=\"Start Date\"\n                                // required\n                                value={studentInternshipStateDetails.Start_Date}\n                                onChange={(e) => {\n                                    setStudentInternshipStateDetails({ ...studentInternshipStateDetails, Start_Date: e });\n                                }}\n                                renderInput={(params) => <TextField fullWidth {...params} />}\n                            />\n                        </LocalizationProvider>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                label=\"End Date\"\n                                // required\n                                value={studentInternshipStateDetails.End_Date}\n                                onChange={(e) => {\n                                    setStudentInternshipStateDetails({ ...studentInternshipStateDetails, End_Date: e });\n                                }}\n                                renderInput={(params) => <TextField fullWidth {...params} />}\n                            />\n                        </LocalizationProvider>\n                    </Grid>\n                </Grid>\n                <br />\n                <TextField\n                    fullWidth\n                    // required\n                    label=\"Description\"\n                    id=\"Description\"\n                    helperText=\"Enter the brief decription of internship\"\n                    multiline\n                    rows={5}\n                    maxRows={3}\n                    value={studentInternshipStateDetails.Description}\n                    onChange={(e) => {\n                        setStudentInternshipStateDetails({ ...studentInternshipStateDetails, Description: e.target.value });\n                    }}\n                />\n                <br />\n                <br />\n                <TextField\n                    fullWidth\n                    // required\n                    label=\"Company Address\"\n                    id=\"company_address\"\n                    helperText=\"Enter the company address\"\n                    multiline\n                    rows={5}\n                    maxRows={3}\n                    value={studentInternshipStateDetails.Company_Address}\n                    onChange={(e) => {\n                        setStudentInternshipStateDetails({ ...studentInternshipStateDetails, Company_Address: e.target.value });\n                    }}\n                />\n                <br />\n                <br/>\n                <Grid container xs={12} justifyContent=\"flex-end\">\n                    {props.source != 'server'\n                    ? \n                    <>\n                        <Grid item>\n                            <Button\n                                onClick={() => onButtonClick('add')}\n                                variant=\"contained\"\n                                size=\"medium\"\n                                component=\"span\"\n                            >\n                                Add Internship\n                                {/* Submit */}\n                            </Button>\n                        </Grid>\n                    </>\n                    : \n                    <>\n                        <Grid container justifyContent=\"flex-end\" spacing={2}>\n\n                        <Grid item>\n                            <Button\n                                color=\"error\"\n                                variant=\"contained\"\n                                // style={{ 'margin-top': '15%' }}\n                                size=\"medium\"\n                                component=\"span\"\n                                onClick={handleOpen}\n                            >\n                                Delele Internship\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                color=\"warning\"\n                                variant=\"contained\"\n                                style={{ \"color\": \"white\", \"background\": \"#FFC107\" }}\n                                size=\"medium\"\n                                component=\"span\"\n                                onClick={() => onButtonClick(\"update\")}\n                            // onClick={handleOpen}\n                            >\n                                Update Internship\n                            </Button>\n\n                        </Grid>\n                        </Grid>\n                    </>\n                    }\n                    <Modal\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"modal-modal-title\"\n                        aria-describedby=\"modal-modal-description\"\n                    >\n                        <Box sx={style}>\n                            <Typography style={{ \"color\": \"#616161\" }} id=\"modal-modal-title\" variant=\"h3\" component=\"h1\">\n                                Are, you really sure want to delete this internship?\n                            </Typography><br />\n                            <Grid container spacing={2} justifyContent={\"\"}>\n                                <Grid md={6} item>\n                                    <Button fullWidth style={{ color: \"white\", backgroundColor: \"#00C853\" }} variant=\"contained\"\n                                        onClick={() => onButtonClick(\"delete\")}\n                                    >\n                                        Confirm\n                                    </Button>\n                                </Grid>\n                                <Grid md={6} item>\n                                    <Button fullWidth color='error' variant=\"contained\" onClick={handleClose}>\n                                        Cancel\n                                    </Button>\n                                </Grid>\n                            </Grid>\n\n                        </Box>\n                    </Modal>\n                    \n                </Grid>\n            </SubCard>\n            <br />\n            <ToastContainer/>\n        </>\n    );\n}\n\nexport default S_AddInternshipsCard;\n","import React, { useState, useEffect } from 'react';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport S_AddInternshipsCard from './S_AddInternshipsCard';\nimport Grid from '@mui/material/Grid';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { IconCirclePlus } from '@tabler/icons';\n\nfunction S_AddInternship() {\n    const [internshipCard, setInternshipCard] = useState([]);\n\n    const [studentInternships, setStudentInternships] = useState(undefined);\n\n\n\n    function handleClick() {\n        let internship_card_copy = internshipCard;\n        internship_card_copy.push(\n            <S_AddInternshipsCard\n                onChangeFunc={handleInternshipChange}\n                callerFunc={changeStateFromChild}\n                seed={Math.random()}\n                from={'line 19'}\n                details={{\n                    Company_Name: '',\n                    Start_Date: null,\n                    End_Date: null,\n                    Company_Address: '',\n                    Description: ''\n                }}\n            />\n        );\n        setInternshipCard([].concat(internship_card_copy));\n    }\n\n    function changeStateFromChild(seed, operation) {\n        let internship_card_copy = internshipCard;\n        if (operation == 'delete') {\n            // for (let i = 0; i < placementCard.length; i++) {\n            //     let propDetails = placementCard[i].props.seed\n            //     if(seed==propDetails)\n            //     {\n\n            //     }\n            // }\n            let filteredList = internship_card_copy.filter((elem) => {\n                return elem.props.seed != seed;\n            });\n            console.log(filteredList);\n\n            setInternshipCard(filteredList);\n        }\n    }\n\n    useEffect(async () => {\n        await handleChange()\n    }, []);\n\n    async function handleChange()\n    {\n        let response = undefined\n        response = await fetch(\"/StudentAchievementsInternships/getStudentAchievementsInternshipsByStudentID\")\n\n        if(response != undefined)\n        {\n            let jsonData = undefined\n            jsonData = await response.json()\n            setStudentInternships(jsonData)\n            console.log(jsonData)\n\n            let studentInternshipCardCopy = []\n\n            if (jsonData.data != \"Student Internship Record Not Found!\" && jsonData != undefined) {\n                // console.log(jsonData1.data.length)\n\n                for (let i = 0; i < jsonData.data.length; i++) {\n                    console.log(jsonData.data[i])\n                    let x = Math.random();\n                    studentInternshipCardCopy.unshift(\n                        <S_AddInternshipsCard\n                            onChangeFunc={handleInternshipChange}\n                            callerFunc={changeStateFromChild}\n                            source={\"server\"}\n                            seed={x}\n                            from={\"line 86\"}\n                            details={jsonData.data[i]}\n                            idx={i}\n                        />\n                    )\n\n                }\n                setInternshipCard([].concat(studentInternshipCardCopy))\n            }\n        }\n    }\n\n    async function handleInternshipChange()\n    {\n        setInternshipCard([])\n        await handleChange()\n    }\n\n    return (\n        <>\n            <MainCard title=\"Add Internship\">\n                {internshipCard.map((elem) => {\n                    return <>{elem}</>;\n                })}\n                <br />\n                <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n                    <LoadingButton\n                        color=\"primary\"\n                        onClick={handleClick}\n                        loading={false}\n                        loadingPosition=\"start\"\n                        startIcon={<IconCirclePlus />}\n                        variant=\"contained\"\n                    >\n                        Add\n                    </LoadingButton>\n                </Grid>\n            </MainCard>\n        </>\n    );\n}\n\nexport default S_AddInternship;\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}"],"names":["params","toast","HandleToast","data","flag","customMessage","message","success","error","props","history","useHistory","push","seq_no","executionSequence","RedirectHandler","handleToast","forEach","func","axios","require","useState","details","studentInternshipStateDetails","setStudentInternshipStateDetails","updated_details","UsePost","res","params1","console","log","responsePipelineHandler","onChangeFunc","id","method","url","Resp","handleClose","onButtonClick","event","keys","Object","i","length","key","onAddInternship","onUpdateInternship","onDeleteInternship","React","open","setOpen","SubCard","TextField","fullWidth","label","helperText","value","Company_Name","onChange","e","target","Grid","container","spacing","item","xs","md","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","Start_Date","renderInput","End_Date","multiline","rows","maxRows","Description","Company_Address","justifyContent","source","Button","onClick","variant","size","component","color","style","Modal","onClose","Box","sx","position","top","left","transform","width","bgcolor","boxShadow","p","Typography","backgroundColor","internshipCard","setInternshipCard","undefined","setStudentInternships","changeStateFromChild","seed","operation","filteredList","filter","elem","handleChange","response","fetch","jsonData","json","studentInternshipCardCopy","x","Math","random","unshift","handleInternshipChange","callerFunc","from","idx","concat","useEffect","MainCard","title","map","direction","alignItems","LoadingButton","internship_card_copy","loading","loadingPosition","startIcon","_typeof","obj","Symbol","iterator","constructor","prototype","_possibleConstructorReturn","self","call","TypeError","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","getPrototypeOf","NewTarget","this","Reflect","construct","arguments","apply","_getPrototypeOf","o","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","writable","configurable","defineProperty","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf"],"sourceRoot":""}