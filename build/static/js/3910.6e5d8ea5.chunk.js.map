{"version":3,"file":"static/js/3910.6e5d8ea5.chunk.js","mappings":"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","sources":["assets/images/icons/social-google.svg","utils/password-strength.js","views/pages/authentication/firebase-forms/FirebaseRegister.js","views/pages/authentication/authentication3/Register3.js"],"sourcesContent":["var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSocialGoogle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.06129 13.2253L4.31871 15.9975L1.60458 16.0549C0.793457 14.5504 0.333374 12.8292 0.333374 11C0.333374 9.23119 0.763541 7.56319 1.52604 6.09448H1.52662L3.94296 6.53748L5.00146 8.93932C4.77992 9.58519 4.65917 10.2785 4.65917 11C4.65925 11.783 4.80108 12.5332 5.06129 13.2253Z\",\n    fill: \"#FBBB00\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.4804 9.00732C21.6029 9.65257 21.6668 10.3189 21.6668 11C21.6668 11.7637 21.5865 12.5086 21.4335 13.2271C20.9143 15.6722 19.5575 17.8073 17.678 19.3182L17.6774 19.3177L14.6339 19.1624L14.2031 16.4734C15.4503 15.742 16.425 14.5974 16.9384 13.2271H11.2346V9.00732H17.0216H21.4804Z\",\n    fill: \"#518EF8\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.6772 19.3176L17.6777 19.3182C15.8498 20.7875 13.5277 21.6666 11 21.6666C6.93783 21.6666 3.40612 19.3962 1.60449 16.0549L5.0612 13.2253C5.96199 15.6294 8.28112 17.3408 11 17.3408C12.1686 17.3408 13.2634 17.0249 14.2029 16.4734L17.6772 19.3176Z\",\n    fill: \"#28B446\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8085 2.78892L14.353 5.61792C13.3807 5.01017 12.2313 4.65908 11 4.65908C8.21963 4.65908 5.85713 6.44896 5.00146 8.93925L1.52658 6.09442H1.526C3.30125 2.67171 6.8775 0.333252 11 0.333252C13.5881 0.333252 15.9612 1.25517 17.8085 2.78892Z\",\n    fill: \"#F14336\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSocialGoogle);\nexport default __webpack_public_path__ + \"static/media/social-google.9887eb8eb43729cb99f402cfa0de3c44.svg\";\nexport { ForwardRef as ReactComponent };","/**\n * Password validator for login pages\n */\n\nimport value from '../assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (value) => {\n    return new RegExp(/[0-9]/).test(value);\n};\n\n// has mix of small and capitals\nconst hasMixed = (value) => {\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\n};\n\n// has special chars\nconst hasSpecial = (value) => {\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\n};\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n};\n\n// password strength indicator\nexport const strengthIndicator = (value) => {\n    let strengths = 0;\n    if (value.length > 5) strengths++;\n    if (value.length > 7) strengths++;\n    if (hasNumber(value)) strengths++;\n    if (hasSpecial(value)) strengths++;\n    if (hasMixed(value)) strengths++;\n    return strengths;\n};\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@material-ui/core';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Google from './../../../../assets/images/icons/social-google.svg';\nimport AnimateButton from './../../../../ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from '../../../../utils/password-strength';\n\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[700],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//===========================|| FIREBASE - REGISTER ||===========================//\n\nconst FirebaseRegister = ({ ...others }) => {\n    const classes = useStyles();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n    const customization = useSelector((state) => state.customization);\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState('');\n\n    const googleHandler = async () => {\n        console.error('Register');\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth={true}\n                            className={classes.redButton}\n                            onClick={googleHandler}\n                            size=\"large\"\n                            variant=\"contained\"\n                        >\n                            <img src={Google} alt=\"google\" width=\"20px\" sx={{ mr: { xs: 1, sm: 2 } }} className={classes.loginIcon} /> Sign\n                            up with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex'\n                        }}\n                    >\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <AnimateButton>\n                            <Button\n                                variant=\"outlined\"\n                                className={classes.signText}\n                                sx={{ borderRadius: customization.borderRadius + 'px' }}\n                                disableRipple\n                                disabled\n                            >\n                                OR\n                            </Button>\n                        </AnimateButton>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box\n                        sx={{\n                            mb: 2\n                        }}\n                    >\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'info@codedthemes.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    name=\"fname\"\n                                    type=\"text\"\n                                    defaultValue=\"Joseph\"\n                                    className={classes.loginInput}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    name=\"lname\"\n                                    type=\"text\"\n                                    defaultValue=\"Doe\"\n                                    className={classes.loginInput}\n                                />\n                            </Grid>\n                        </Grid>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box\n                                    sx={{\n                                        mb: 2\n                                    }}\n                                >\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box\n                                                backgroundColor={level.color}\n                                                sx={{\n                                                    width: 85,\n                                                    height: 8,\n                                                    borderRadius: '7px'\n                                                }}\n                                            ></Box>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <Typography variant=\"subtitle1\">\n                                            Agree with &nbsp;\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                                                Terms & Condition.\n                                            </Typography>\n                                        </Typography>\n                                    }\n                                />\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box\n                                sx={{\n                                    mt: 3\n                                }}\n                            >\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box\n                            sx={{\n                                mt: 2\n                            }}\n                        >\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseRegister;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from './../AuthWrapper1';\nimport AuthCardWrapper from './../AuthCardWrapper';\nimport Logo from './../../../../ui-component/Logo';\nimport FirebaseRegister from './../firebase-forms/FirebaseRegister';\nimport AuthFooter from './../../../../ui-component/cards/AuthFooter';\n\n// assets\n\n//===============================|| AUTH3 - REGISTER ||===============================//\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <RouterLink to=\"#\">\n                                            <Logo />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FirebaseRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/pages/login/login3\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Register;\n"],"names":["strengthColor","count","label","color","value","strengthIndicator","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","useStyles","makeStyles","theme","redButton","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","loginIcon","marginRight","loginInput","typography","customInput","others","classes","scriptedRef","useScriptRef","matchDownSM","useMediaQuery","customization","useSelector","state","React","showPassword","setShowPassword","checked","setChecked","strength","setStrength","level","setLevel","googleHandler","console","error","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","temp","useEffect","Grid","container","direction","justifyContent","item","xs","AnimateButton","Button","disableElevation","fullWidth","className","onClick","size","variant","src","Google","alt","width","sx","mr","sm","Box","alignItems","display","Divider","orientation","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","current","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","name","type","defaultValue","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","notchedOutline","FormHelperText","e","target","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","height","FormControlLabel","control","Checkbox","component","Link","to","mt","useTheme","AuthWrapper1","minHeight","m","AuthCardWrapper","Logo","Stack","secondary","main","gutterBottom","textAlign","RouterLink","textDecoration","AuthFooter"],"sourceRoot":""}