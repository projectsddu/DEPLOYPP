{"version":3,"file":"static/js/3044.5ffb53bb.chunk.js","mappings":"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","sources":["assets/images/icons/social-google.svg","Utilities/ConvertToLPA.js","Utilities/HandleNull.js","ui-component/cards/GenericCards/ChipCard.js","ui-component/cards/GenericCards/ListCard.js","ui-component/cards/Skeleton/EarningCard.js","ui-component/cards/Skeleton/PopularCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/dashboard/Default/EarningCard.js","views/dashboard/Default/BajajAreaChartCard.js","views/dashboard/Default/PopularCard.js","views/dashboard/Default/TotalOrderLineChartCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","views/dashboard/JSX/EmptyAnnouncement.jsx","views/dashboard/JSX/AddAnnouncement.jsx","views/dashboard/JSX/AddOrUpdatePlacementDetails.jsx","views/dashboard/JSX/AddOrUpdateInternshipDetails.jsx","views/dashboard/JSX/PlacementDetailsCard.jsx","views/dashboard/Default/index.js","../node_modules/@material-ui/styles/getThemeProps/getThemeProps.js","../node_modules/@material-ui/styles/withStyles/withStyles.js"],"sourcesContent":["var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSocialGoogle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.06129 13.2253L4.31871 15.9975L1.60458 16.0549C0.793457 14.5504 0.333374 12.8292 0.333374 11C0.333374 9.23119 0.763541 7.56319 1.52604 6.09448H1.52662L3.94296 6.53748L5.00146 8.93932C4.77992 9.58519 4.65917 10.2785 4.65917 11C4.65925 11.783 4.80108 12.5332 5.06129 13.2253Z\",\n    fill: \"#FBBB00\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.4804 9.00732C21.6029 9.65257 21.6668 10.3189 21.6668 11C21.6668 11.7637 21.5865 12.5086 21.4335 13.2271C20.9143 15.6722 19.5575 17.8073 17.678 19.3182L17.6774 19.3177L14.6339 19.1624L14.2031 16.4734C15.4503 15.742 16.425 14.5974 16.9384 13.2271H11.2346V9.00732H17.0216H21.4804Z\",\n    fill: \"#518EF8\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.6772 19.3176L17.6777 19.3182C15.8498 20.7875 13.5277 21.6666 11 21.6666C6.93783 21.6666 3.40612 19.3962 1.60449 16.0549L5.0612 13.2253C5.96199 15.6294 8.28112 17.3408 11 17.3408C12.1686 17.3408 13.2634 17.0249 14.2029 16.4734L17.6772 19.3176Z\",\n    fill: \"#28B446\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8085 2.78892L14.353 5.61792C13.3807 5.01017 12.2313 4.65908 11 4.65908C8.21963 4.65908 5.85713 6.44896 5.00146 8.93925L1.52658 6.09442H1.526C3.30125 2.67171 6.8775 0.333252 11 0.333252C13.5881 0.333252 15.9612 1.25517 17.8085 2.78892Z\",\n    fill: \"#F14336\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSocialGoogle);\nexport default __webpack_public_path__ + \"static/media/social-google.9887eb8eb43729cb99f402cfa0de3c44.svg\";\nexport { ForwardRef as ReactComponent };","const ConvertToLPA = function (data) {\n    // if (data == 0 || data == undefined || data == null) {\n    //     return 0 + \" LPA\"\n    // }\n    // else {\n        data = data / 100000\n        data = data.toFixed(2)\n        return data + \" LPA\"\n    // }\n}\nexport default ConvertToLPA","const handleNull = function (data) {\n    if (data == \"\" || data == undefined || data == null) {\n        return \"Not Defined!\"\n    }\n    else {\n        return data\n    }\n}\nexport default handleNull","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\n// import MainCard from './../../../ui-component/cards/MainCard';\nimport MainCard from '../MainCard';\n// import TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\nimport TotalIncomeCard from '../Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\n\n\n//-----------------------|| DASHBOARD - TOTAL INCOME DARK CARD ||-----------------------//\n\nconst ChipCard = (props) => {\n    const type = props.type\n    // if (type === undefined) {\n    //     // type = theme.palette.primary.dark\n    // }\n    // else {\n    //     type = \"error\"\n    // }\n    // style constant\n    const useStyles = makeStyles((theme) => ({\n        card: {\n            backgroundColor: props.type === undefined ? theme.palette.primary.main : theme.palette.error.main,\n            color: theme.palette.primary.light,\n            overflow: 'hidden',\n            position: 'relative',\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                width: '210px',\n                height: '210px',\n                background: 'linear-gradient(210.04deg, ' + theme.palette.primary[200] + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n                borderRadius: '50%',\n                top: '-30px',\n                right: '-180px'\n            },\n            '&:before': {\n                content: '\"\"',\n                position: 'absolute',\n                width: '210px',\n                height: '210px',\n                background: 'linear-gradient(140.9deg, ' + theme.palette.primary[200] + ' -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n                borderRadius: '50%',\n                top: '-160px',\n                right: '-130px'\n            }\n        },\n        content: {\n            padding: '16px !important'\n        },\n        avatar: {\n            ...theme.typography.commonAvatar,\n            ...theme.typography.largeAvatar,\n            backgroundColor: theme.palette.primary[800],\n            color: '#fff'\n        },\n        primary: {\n            color: '#fff'\n        },\n        secondary: {\n            color: theme.palette.primary.light,\n            marginTop: '5px'\n        },\n        padding: {\n            paddingTop: 0,\n            paddingBottom: 0\n        }\n    }));\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {props.isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            {props.data}\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nChipCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default ChipCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\n// import MainCard from './../../../ui-component/cards/MainCard';\nimport MainCard from '../MainCard';\n// import TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\nimport TotalIncomeCard from '../Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\n\n\n//-----------------------|| DASHBOARD - TOTAL INCOME DARK CARD ||-----------------------//\n\nconst ListCard = (props) => {\n    const type = props.type\n    // if (type === undefined) {\n    //     // type = theme.palette.primary.dark\n    // }\n    // else {\n    //     type = \"error\"\n    // }\n    // style constant\n    const useStyles = makeStyles((theme) => ({\n        card: {\n            backgroundColor: props.type === undefined ? theme.palette.primary.main : theme.palette.error.main,\n            color: theme.palette.primary.light,\n            overflow: 'hidden',\n            position: 'relative',\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                width: '210px',\n                height: '210px',\n                background: 'linear-gradient(210.04deg, ' + theme.palette.primary[200] + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n                borderRadius: '50%',\n                top: '-30px',\n                right: '-180px'\n            },\n            '&:before': {\n                content: '\"\"',\n                position: 'absolute',\n                width: '210px',\n                height: '210px',\n                background: 'linear-gradient(140.9deg, ' + theme.palette.primary[200] + ' -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n                borderRadius: '50%',\n                top: '-160px',\n                right: '-130px'\n            }\n        },\n        content: {\n            padding: '16px !important'\n        },\n        avatar: {\n            ...theme.typography.commonAvatar,\n            ...theme.typography.largeAvatar,\n            backgroundColor: theme.palette.primary[800],\n            color: '#fff'\n        },\n        primary: {\n            color: '#fff'\n        },\n        secondary: {\n            color: theme.palette.primary.light,\n            marginTop: '5px'\n        },\n        padding: {\n            paddingTop: 0,\n            paddingBottom: 0\n        }\n    }));\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {props.isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            {props.data}\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nListCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default ListCard;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    cardHeading: {\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '14px'\n    }\n});\n\n//-----------------------|| SKELETON EARNING CARD ||-----------------------//\n\nconst EarningCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container justifyContent=\"space-between\">\n                            <Grid item>\n                                <Skeleton variant=\"rect\" width={44} height={44} />\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" width={34} height={34} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Skeleton variant=\"rect\" className={classes.cardHeading} height={40} />\n                    </Grid>\n                    <Grid item>\n                        <Skeleton variant=\"rect\" height={30} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default EarningCard;\n","import React from 'react';\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from './../../../store/constant';\n\n// style constant\nconst useStyles = makeStyles({\n    cardAction: {\n        padding: '10px',\n        display: 'flex',\n        paddingTop: 0,\n        justifyContent: 'center'\n    }\n});\n\n//-----------------------|| SKELETON - POPULAR CARD ||-----------------------//\n\nconst PopularCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                            <Grid item xs zeroMinWidth>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" height={20} width={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rect\" height={150} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardContent className={classes.cardAction}>\n                <Skeleton variant=\"rect\" height={25} width={75} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default PopularCard;\n","import React from 'react';\n\n// material-ui\nimport { Card, CardContent, Grid } from '@material-ui/core';\nimport Skeleton from '@material-ui/core/Skeleton';\n\n// project imports\nimport { gridSpacing } from '../../../store/constant';\n\n//-----------------------|| SKELETON TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst TotalGrowthBarChart = () => {\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                            <Grid item xs zeroMinWidth>\n                                <Grid container spacing={1}>\n                                    <Grid item xs={12}>\n                                        <Skeleton variant=\"text\" />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" height={50} width={80} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rect\" height={530} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalGrowthBarChart;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    content: {\n        padding: '16px !important'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n});\n\n//-----------------------|| SKELETON - TOTAL INCOME DARK/LIGHT Card ||-----------------------//\n\nconst TotalIncomeCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Skeleton variant=\"rect\" width={44} height={44} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={<Skeleton variant=\"rect\" height={20} />}\n                            secondary={<Skeleton variant=\"text\" />}\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomeCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonEarningCard from './../../../ui-component/cards/Skeleton/EarningCard';\n\n// assets\nimport EarningIcon from './../../../assets/images/icons/social-google.svg';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport GetAppTwoToneIcon from '@material-ui/icons/GetAppOutlined';\nimport FileCopyTwoToneIcon from '@material-ui/icons/FileCopyOutlined';\nimport PictureAsPdfTwoToneIcon from '@material-ui/icons/PictureAsPdfOutlined';\nimport ArchiveTwoToneIcon from '@material-ui/icons/ArchiveOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.secondary[800],\n            borderRadius: '50%',\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.secondary[800],\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.5,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.secondary[800],\n        marginTop: '8px'\n    },\n    avatarRight: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.secondary[200],\n        zIndex: 1\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '14px',\n        marginBottom: '6px'\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        color: theme.palette.secondary[200]\n    },\n    avatarCircle: {\n        cursor: 'pointer',\n        ...theme.typography.smallAvatar,\n        backgroundColor: theme.palette.secondary[200],\n        color: theme.palette.secondary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\n//===========================|| DASHBOARD DEFAULT - EARNING CARD ||===========================//\n\nconst EarningCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <Grid container justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <img src={EarningIcon} alt=\"Notification\" />\n                                    </Avatar>\n                                </Grid>\n                                <Grid item>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        className={classes.avatarRight}\n                                        aria-controls=\"menu-earning-card\"\n                                        aria-haspopup=\"true\"\n                                        onClick={handleClick}\n                                    >\n                                        <MoreHorizIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                    <Menu\n                                        id=\"menu-earning-card\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={handleClose}\n                                        variant=\"selectedMenu\"\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right'\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right'\n                                        }}\n                                    >\n                                        <MenuItem onClick={handleClose}>\n                                            <GetAppTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Import Card\n                                        </MenuItem>\n                                        {/* <MenuItem onClick={handleClose}>\n                                            <FileCopyTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Copy Data\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <PictureAsPdfTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Export\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <ArchiveTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Archive File\n                                        </MenuItem> */}\n                                    </Menu>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container alignItems=\"center\">\n                                <Grid item>\n                                    <Typography className={classes.cardHeading}>Jenil J Gandhi</Typography>\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n                        <Grid item sx={{ mb: 1.25 }}>\n                            <Typography className={classes.subHeading}>19ceuon133@ddu.ac.in</Typography>\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nEarningCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default EarningCard;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './chart-data/bajaj-area-chart';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.light\n    },\n    content: {\n        padding: '0px !important'\n    },\n    contentContainer: {\n        padding: '16px',\n        paddingBottom: 0,\n        color: '#fff'\n    },\n    fontStyle: {\n        fontWeight: 400\n    }\n}));\n\n//===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||===========================//\n\nconst BajajAreaChartCard = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const orangeDark = theme.palette.primary[800];\n\n    React.useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [orangeDark]);\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container className={classes.contentContainer}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"subtitle1\" sx={{ color: theme.palette.primary.dark }}>\n                                    Bajaj Finery\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h4\" sx={{ color: theme.palette.grey[800] }}>\n                                    $1839.00\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.grey[800] }}>\n                            10% Profit\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Chart {...chartData} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default BajajAreaChartCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\n\n// project imports\nimport BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonPopularCard from './../../../ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from './../../../store/constant';\n\n// assets\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@material-ui/icons/KeyboardArrowUpOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    cardAction: {\n        padding: '10px',\n        paddingTop: 0,\n        justifyContent: 'center'\n    },\n    primaryLight: {\n        color: theme.palette.primary[200],\n        cursor: 'pointer'\n    },\n    divider: {\n        marginTop: '12px',\n        marginBottom: '12px'\n    },\n    avatarSuccess: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.success.light,\n        color: theme.palette.success.dark,\n        marginLeft: '15px'\n    },\n    successDark: {\n        color: theme.palette.success.dark\n    },\n    avatarError: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.orange.light,\n        color: theme.palette.orange.dark,\n        marginLeft: '15px'\n    },\n    errorDark: {\n        color: theme.palette.orange.dark\n    }\n}));\n\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\n\nconst PopularCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Popular Stocks</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            className={classes.primaryLight}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sx={{ pt: '16px !important' }}>\n                                <BajajAreaChartCard />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Bajaj Finery\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $1839.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $100.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Reliance\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $200.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Stolon\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions className={classes.cardAction}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nPopularCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default PopularCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, Grid, Typography } from '@material-ui/core';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from './../../../ui-component/cards/Skeleton/EarningCard';\n\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\n\n// assets\nimport LocalMallOutlinedIcon from '@material-ui/icons/LocalMallOutlined';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&>div': {\n            position: 'relative',\n            zIndex: 5\n        },\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.primary[800],\n            borderRadius: '50%',\n            zIndex: 1,\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            zIndex: 1,\n            width: '210px',\n            height: '210px',\n            background: theme.palette.primary[800],\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.5,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff',\n        marginTop: '8px'\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '14px',\n        marginBottom: '6px'\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        color: theme.palette.primary[200]\n    },\n    avatarCircle: {\n        ...theme.typography.smallAvatar,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary[200],\n        color: theme.palette.primary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||-----------------------//\n\nconst TotalOrderLineChartCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [timeValue, setTimeValue] = React.useState(false);\n    const handleChangeTime = (event, newValue) => {\n        setTimeValue(newValue);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonTotalOrderCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <Grid container justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <LocalMallOutlinedIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        disableElevation\n                                        variant={timeValue ? 'contained' : 'string'}\n                                        size=\"small\"\n                                        onClick={(e) => handleChangeTime(e, true)}\n                                    >\n                                        Month\n                                    </Button>\n                                    <Button\n                                        disableElevation\n                                        variant={!timeValue ? 'contained' : 'string'}\n                                        size=\"small\"\n                                        onClick={(e) => handleChangeTime(e, false)}\n                                    >\n                                        Year\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item sx={{ mb: 0.75 }}>\n                            <Grid container alignItems=\"center\">\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\">\n                                        <Grid item>\n                                            {timeValue ? (\n                                                <Typography className={classes.cardHeading}>$108</Typography>\n                                            ) : (\n                                                <Typography className={classes.cardHeading}>$961</Typography>\n                                            )}\n                                        </Grid>\n                                        <Grid item>\n                                            <Avatar className={classes.avatarCircle}>\n                                                <ArrowDownwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\n                                            </Avatar>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Typography className={classes.subHeading}>Total Order</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalOrderLineChartCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalOrderLineChartCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.light,\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, ' + theme.palette.primary[200] + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, ' + theme.palette.primary[200] + ' -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '16px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff'\n    },\n    primary: {\n        color: '#fff'\n    },\n    secondary: {\n        color: theme.palette.primary.light,\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL INCOME DARK CARD ||-----------------------//\n\nconst TotalIncomeDarkCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\n                                    <TableChartOutlinedIcon fontSize=\"inherit\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.padding}\n                                sx={{\n                                    mt: 0.45,\n                                    mb: 0.45\n                                }}\n                                primary={\n                                    <Typography variant=\"h4\" className={classes.primary}>\n                                        $203k\n                                    </Typography>\n                                }\n                                secondary={\n                                    <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                        Total Income\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalIncomeDarkCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeDarkCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, ' + theme.palette.primary.dark + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, ' + theme.palette.primary.dark + ' -14.02%, rgba(144, 202, 249, 0) 70.50%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '16px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary.light,\n        color: theme.palette.primary.dark\n    },\n    secondary: {\n        color: theme.palette.grey[500],\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL INCOME LIGHT CARD ||-----------------------//\n\nconst TotalIncomeLightCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\n                                    <StorefrontTwoToneIcon fontSize=\"inherit\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                sx={{\n                                    mt: 0.45,\n                                    mb: 0.45\n                                }}\n                                className={classes.padding}\n                                primary={<Typography variant=\"h4\">$203k</Typography>}\n                                secondary={\n                                    <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                        Total Income\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalIncomeLightCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeLightCard;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { useHistory } from 'react-router';\nimport { Grid, Button } from '@material-ui/core';\nimport { IconCirclePlus } from '@tabler/icons';\nimport { grey, red } from '@mui/material/colors';\nimport { blue, lightBlue } from '@material-ui/core/colors';\n\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\n\n// button color\nconst color = blue[300]\n\nfunction EmptyAnnouncement() {\n    const history = useHistory();\n\n    return (\n        <>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={10}>\n                    <WhiteTextTypography variant=\"h2\">No announcement added yet</WhiteTextTypography>\n                </Grid>\n                {/* <Grid item xs={12} md={2}>\n                    <Button\n                        style={{backgroundColor: color}}\n                        variant=\"contained\"\n                        size=\"large\"\n                        startIcon={<IconCirclePlus />}\n                        // color={color}\n                        onClick={() => {\n                            history.push('/announcement/add_annoucement');\n                        }}\n                    >\n                        {' '}\n                        Add{' '}\n                    </Button>\n                </Grid> */}\n            </Grid>\n        </>\n    );\n}\n\nexport default EmptyAnnouncement;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { useHistory } from 'react-router';\nimport { Grid, Button } from '@material-ui/core';\nimport { IconCirclePlus } from '@tabler/icons';\nimport { grey, red } from '@mui/material/colors';\nimport { blue, lightBlue } from '@material-ui/core/colors';\n\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\n\n// button color\nconst color = blue[300]\n\nfunction AddAnnouncement() {\n    const history = useHistory();\n\n    return (\n        <>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={10}>\n                    <WhiteTextTypography variant=\"h2\">Add announcement</WhiteTextTypography>\n                </Grid>\n                <Grid item xs={12} md={2}>\n                    <Button\n                        style={{backgroundColor: color}}\n                        variant=\"contained\"\n                        size=\"small\"\n                        startIcon={<IconCirclePlus />}\n                        // color={color}\n                        onClick={() => {\n                            history.push('/announcement/add_annoucement');\n                        }}\n                    >\n                        {' '}\n                        Add{' '}\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default AddAnnouncement;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { useHistory } from 'react-router';\nimport { Grid, Button } from '@material-ui/core';\nimport { IconCirclePlus } from '@tabler/icons';\nimport { grey, red } from '@mui/material/colors';\nimport { blue, lightBlue } from '@material-ui/core/colors';\n\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\n\n// button color\nconst color = blue[300]\n\nfunction AddOrUpdatePlacementDetails() {\n    const history = useHistory();\n\n    return (\n        <>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={10}>\n                    <WhiteTextTypography variant=\"h2\">Add / Update Placement Details</WhiteTextTypography>\n                </Grid>\n                <Grid item xs={12} md={2}>\n                    <Button\n                        style={{backgroundColor: color}}\n                        variant=\"contained\"\n                        size=\"small\"\n                        startIcon={<IconCirclePlus />}\n                        // color={color}\n                        onClick={() => {\n                            history.push('/placement/add_placement_via_csv');\n                        }}\n                    >\n                        {' '}\n                        Add{' '}\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default AddOrUpdatePlacementDetails;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { useHistory } from 'react-router';\nimport { Grid, Button } from '@material-ui/core';\nimport { IconCirclePlus } from '@tabler/icons';\nimport { grey, red } from '@mui/material/colors';\nimport { blue, lightBlue } from '@material-ui/core/colors';\n\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\n\n// button color\nconst color = blue[300]\n\nfunction AddOrUpdateInternshipDetails() {\n    const history = useHistory();\n\n    return (\n        <>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={10}>\n                    <WhiteTextTypography variant=\"h2\">Add / Update Internship Details</WhiteTextTypography>\n                </Grid>\n                <Grid item xs={12} md={2}>\n                    <Button\n                        style={{backgroundColor: color}}\n                        variant=\"contained\"\n                        size=\"small\"\n                        startIcon={<IconCirclePlus />}\n                        // color={color}\n                        onClick={() => {\n                            history.push('/internship/add_internship_via_csv');\n                        }}\n                    >\n                        {' '}\n                        Add{' '}\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default AddOrUpdateInternshipDetails;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { useHistory } from 'react-router';\nimport { Grid, Button } from '@material-ui/core';\nimport { IconCirclePlus } from '@tabler/icons';\nimport { grey, red } from '@mui/material/colors';\nimport { blue, lightBlue } from '@material-ui/core/colors';\nimport ConvertToLPA from \"../../../Utilities/ConvertToLPA\"\n\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\n\n// button color\nconst color = blue[300];\n\nfunction PlacementDetailsCard({ placementDetails }) {\n    const history = useHistory();\n\n    console.log(placementDetails)\n\n    return (\n        <>\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={3}>\n                            <WhiteTextTypography variant=\"h4\">Total Placed Students: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={9}>\n                            <WhiteTextTypography variant=\"h5\">\n                                {placementDetails == undefined ? '' : placementDetails['Total_Placed']}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={3}>\n                            <WhiteTextTypography variant=\"h4\">Placement: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={9}>\n                            <WhiteTextTypography variant=\"h5\">\n                                {placementDetails == undefined ? '' : placementDetails['Placement'] == undefined ? 0 : placementDetails['Placement'].toFixed(2)}\n                                {\" \"}{\"%\"}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={3}>\n                            <WhiteTextTypography variant=\"h4\">Male: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={9}>\n                            <WhiteTextTypography variant=\"h5\">\n                                {placementDetails == undefined ? '' : placementDetails['Male']}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={3}>\n                            <WhiteTextTypography variant=\"h4\">Female: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={9}>\n                            <WhiteTextTypography variant=\"h5\">\n                                {placementDetails == undefined ? '' : placementDetails['Female']}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={3}>\n                            <WhiteTextTypography variant=\"h4\">Average Salary: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={9}>\n                            <WhiteTextTypography variant=\"h5\">\n                                {placementDetails == undefined ? '' :  placementDetails['Average_Salary'] == null ? ConvertToLPA(0) : ConvertToLPA(placementDetails['Average_Salary'])}\n                                {/* {\" \"}{ \"LPA\"} */}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={3}>\n                            <WhiteTextTypography variant=\"h4\">Median Salary: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={9}>\n                            <WhiteTextTypography variant=\"h5\">\n                                {placementDetails == undefined ? '' : placementDetails['Median_Salary'] == null ? ConvertToLPA(0) : ConvertToLPA(placementDetails['Median_Salary'])}\n                                {/* {\" \"}{ \"LPA\"} */}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={3}>\n                            <WhiteTextTypography variant=\"h4\">Maximum Salary: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={9}>\n                            <WhiteTextTypography variant=\"h5\">\n                                {placementDetails == undefined ? '' : ConvertToLPA(placementDetails['Max_Salary'])}\n                                {/* {\" \"}{ \"LPA\"} */}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={3}>\n                            <WhiteTextTypography variant=\"h4\">Minimum Salary: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={9}>\n                            <WhiteTextTypography variant=\"h5\">\n                                {placementDetails == undefined\n                                    ? ''\n                                    : placementDetails['Min_Salary'] == 100000000\n                                    ? ConvertToLPA(0)\n                                    : ConvertToLPA(placementDetails['Min_Salary'])}\n                                    {/* {\" \"}{ \"LPA\"} */}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default PlacementDetailsCard;\n","import React, { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid, Typography, Button, TextField } from '@material-ui/core';\n\n// project imports\nimport EarningCard from './EarningCard';\nimport PopularCard from './PopularCard';\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\nimport { gridSpacing } from './../../../store/constant';\nimport UseFetch from '../../../Utilities/UseFetch';\nimport HandleToast from '../../../Utilities/HandleToast';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport responsePipelineHandler from '../../../Utilities/ResponsePipelineHandler';\nimport UsePost from '../../../Utilities/UsePost';\nimport { useHistory } from \"react-router-dom\";\nimport EmptyAnnouncement from '../JSX/EmptyAnnouncement';\nimport AddAnnouncement from '../JSX/AddAnnouncement';\nimport handleNull from '../../../Utilities/HandleNull';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport ParseDate from \"../../../Utilities/ParseDate\"\nimport ChipCard from '../../../ui-component/cards/GenericCards/ChipCard'\nimport AddOrUpdatePlacementDetails from '../JSX/AddOrUpdatePlacementDetails'\nimport AddOrUpdateInternshipDetails from '../JSX/AddOrUpdateInternshipDetails'\nimport PlacementDetailsCard from '../JSX/PlacementDetailsCard'\nimport ListCard from '../../../ui-component/cards/GenericCards/ListCard';\n\n//-----------------------|| DEFAULT DASHBOARD ||-----------------------//\n\n// const Dashboard = () => {\nfunction Dashboard() {\n    // const [isLoading, setLoading] = useState(true);\n    // useEffect(() => {\n    //     setLoading(false);\n\n    // }, []);\n\n    // const { data, loading } = UseFetch(\"/annoucement/getAllAnnoucements\", \"GET\", toast, true)\n    // const params = {\n    //     data: data,\n    //     HandleToast: {\n    //         toast: toast,\n    //         customMessage: \"Hey Hi from handler\",\n    //         flag: false,\n    //     }\n    // }\n\n    // if (!loading) {\n    //     console.log(data)\n    //     responsePipelineHandler(params, 0)\n\n    // }\n\n\n\n    // // POSTING DATA TO SERVER CODE EXAMPLE HERE\n    // const testingResp = {\n    //     status: true,\n    //     data: \"Success posting data to server!!\"\n    // }\n    // const { res, waiting } = usePost(\"/postTest\", testingResp, \"POST\")\n    // const params1 = {\n    //     data: res,\n    //     HandleToast: {\n    //         toast: toast,\n    //         flag: false,\n    //     }\n    // }\n\n    // // To pipeline with params 1\n    // if (!waiting) {\n    //     console.log(res)\n    //     responsePipelineHandler(params1, 0)\n    // }\n\n    // END OF POSTING DATA EXAMPLE\n\n    const [placementDetails, setPlacementDetails] = useState(undefined);\n\n    const [batchYear, setBatchYear] = useState({\n        Passed_out_year: ''\n    });\n\n    const [detailsCard, setDetailsCard] = useState(false);\n\n    async function handleChange(e) {\n        setBatchYear({ ...batchYear, Passed_out_year: e.target.value });\n\n        if (e.target.value.length == 4) {\n\n            // let updated_details = studentPlacementStateDetails;\n            let res = undefined;\n            res = await UsePost('/reports/getPlacementReportByBatchYear', { Passed_out_year: e.target.value }, 'POST');\n\n            if (res != undefined) {\n                // for (let i = 0; i < res['data'][0].length; i++) {\n                //     res['data'][0][i]['row_id'] = i;\n                // }\n                if (res[\"data\"][0].length == 0) {\n                    setPlacementDetails(res[\"data\"][0])\n                    setPlacementDetails(res['data'][1]);\n                    setDetailsCard(true);\n                }\n                else {\n                    // console.log(res['data'][0]);\n                    setPlacementDetails(res['data'][1]);\n                    setDetailsCard(true);\n                }\n\n            }\n            // const params1 = {\n            //     data: res,\n            //     HandleToast: {\n            //         toast: toast,\n            //         flag: false\n            //     }\n            // };\n            // console.log(res);\n            // responsePipelineHandler(params1, 1);\n        }\n    }\n\n\n    const { required_data, loading } = UseFetch(\"/annoucement/getAllAnnoucements/\", \"GET\")\n\n    var annoucements = [];\n    var temp_announcements = [];\n\n    if (!loading) {\n        console.log(\"from line 134\", required_data[\"data\"])\n        annoucements = required_data[\"data\"];\n        if (required_data[\"data\"] != \"No Announcement data!\") {\n            annoucements = required_data['data'];\n        }\n        console.log(\"from line 138\", annoucements.length )\n        if(annoucements.length > 2)\n        {\n            console.log(\"inside if on line 141\")\n            // temp_announcements = annoucements.splice(0, 2);\n            // annoucements = [];\n            // annoucements = temp_announcements\n            annoucements = annoucements.slice(0, 2);\n        }\n        console.log(\"from line 144\", annoucements);\n        \n    }\n\n    let history = useHistory();\n\n    function handleRedirect(id) {\n        history.push('/announcement/view_annoucement/' + id)\n    }\n\n\n    return (\n        <>\n            <MainCard title=\"Dashboard\">\n                <SubCard title=\"Add / View Announcement\">\n                    {/* <h1>Hello Rikin here</h1> */}\n                    <Grid item>\n                        <ChipCard loading={false} data={<AddAnnouncement />} />\n                    </Grid>\n                    <br />\n                    {loading ? \"\" :\n                        typeof annoucements == \"string\" ?\n                            (\n                                <>\n                                    <Grid item>\n                                        <ChipCard loading={false} data={<EmptyAnnouncement />} />\n                                    </Grid>\n                                </>\n                            )\n                            // <h1>No Announcements Data</h1> \n                            :\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 1, md: 1 }}>\n\n                                {annoucements.map((e) => (\n                                    <Grid item xs={12} md={6} id={e.Announcement_ID}>\n                                        <SubCard title={e.Company_details[\"Company_name\"] + \" \" + (e.Passed_out_year == null || e.Passed_out_year == undefined ? e.Job_Role + \" for all batch year\" : \"- \" + e.Job_Role + \" for \" + ParseDate.getYear(e.Passed_out_year) + \" Batch\")}>\n                                            <Typography variant=\"h5\"></Typography>\n                                            <Grid container spacing={1}>\n                                                <Grid item xs={12} md={12}>\n                                                    <Grid container spacing={1}>\n                                                        <Grid item xs={6} md={4}>\n                                                            <Typography variant=\"h4\" style={{ color: \"rgb(97, 97, 97)\" }}>Deadline: </Typography>\n                                                        </Grid>\n                                                        <Grid item xs={6} md={8}>\n                                                            <Typography variant=\"h5\" style={{ color: \"#828282\" }}>\n                                                                {ParseDate.ParseDate(e.Registration_Deadline, true)}\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item xs={12} md={12}>\n                                                    <Grid container spacing={1}>\n                                                        <Grid item xs={6} md={4}>\n                                                            <Typography variant=\"h4\" style={{ color: \"rgb(97, 97, 97)\" }}>Posted On: </Typography>\n                                                        </Grid>\n                                                        <Grid item xs={6} md={8}>\n                                                            <Typography variant=\"h5\" style={{ color: \"#828282\" }}>\n                                                                {ParseDate.ParseDate(e.Date_of_announcement, true)}\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item xs={12} md={12}>\n                                                    <Grid container spacing={1}>\n                                                        <Grid item xs={6} md={4}>\n                                                            <Typography variant=\"h4\" style={{ color: \"rgb(97, 97, 97)\" }}>Visiting On: </Typography>\n                                                        </Grid>\n                                                        <Grid item xs={6} md={8}>\n                                                            <Typography variant=\"h5\" style={{ color: \"#828282\" }}>\n                                                                {handleNull(ParseDate.ParseDate(e.Date_of_Visit))}\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n\n                                                <Grid item xs={12} md={12}>\n                                                    <Grid container spacing={1}>\n                                                        <Grid item xs={6} md={4}>\n                                                            <Typography variant=\"h4\" style={{ color: \"rgb(97, 97, 97)\" }}>Job Location: </Typography>\n                                                        </Grid>\n                                                        <Grid item xs={6} md={8}>\n                                                            <Typography variant=\"h5\" style={{ color: \"#828282\" }}>\n                                                                {handleNull(e.Job_Location)}\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item xs={12} md={12}>\n                                                    <Grid container spacing={1}>\n                                                        <Grid item xs={6} md={4}>\n                                                            <Typography variant=\"h4\" style={{ color: \"rgb(97, 97, 97)\" }}>Job Role: </Typography>\n                                                        </Grid>\n                                                        <Grid item xs={6} md={8}>\n                                                            <Typography variant=\"h5\" style={{ color: \"#828282\" }}>\n                                                                {handleNull(e.Job_Role)}\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n\n                                            <br />\n                                            <Button color=\"primary\" variant=\"contained\" onClick={() => handleRedirect(e.Announcement_ID)} size='large' fullWidth>\n                                                View Full Announcement\n                                            </Button>\n                                        </SubCard>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                    }\n                </SubCard>\n                <br />\n                <SubCard title=\"Add / Update Placement Details\">\n                    <Grid item>\n                        <ChipCard loading={false} data={<AddOrUpdatePlacementDetails />} />\n                    </Grid>\n                </SubCard>\n                <br />\n                <SubCard title=\"Add / Update Internship Details\">\n                    <Grid item>\n                        <ChipCard loading={false} data={<AddOrUpdateInternshipDetails />} />\n                    </Grid>\n                </SubCard>\n                <br />\n                <SubCard title=\"Placement Details\">\n                    <TextField\n                        fullWidth\n                        // required\n                        label=\"Passed Out Year\"\n                        id=\"fullWidth\"\n                        helperText=\"Enter passed out year\"\n                        onInput={(e) => {\n                            handleChange(e);\n                        }}\n                    // value={batchYear['Passed_out_year']}\n                    // onChange={(e) => {\n                    //     setBatchYear({ ...batchYear, Passed_out_year: e.target.value });\n                    // }}\n                    />\n                    <br />\n                    <br />\n                    {!detailsCard ? (\n                        ''\n                    ) : (\n                        <>\n                            <ListCard data={<PlacementDetailsCard placementDetails={placementDetails} />} />\n                            {/* <br />\n                            <div style={{ height: 400, width: '100%' }}>\n                                <DataGrid\n                                    checkboxSelection\n                                    rows={placementTableDetails}\n                                    columns={columns}\n                                    components={{\n                                        Toolbar: CustomToolbar\n                                    }}\n                                />\n                            </div> */}\n                        </>\n                    )}\n                </SubCard>\n            </MainCard>\n        </>\n        // <Grid container spacing={gridSpacing}>\n\n\n        //     {/* <Grid item xs={12}>\n        //         <Grid container spacing={gridSpacing}>\n        //             <Grid item lg={4} md={6} sm={6} xs={12}>\n        //                 <EarningCard isLoading={isLoading} />\n        //             </Grid>\n        //             <Grid item lg={4} md={6} sm={6} xs={12}>\n        //                 <TotalOrderLineChartCard isLoading={isLoading} />\n        //             </Grid>\n        //             <Grid item lg={4} md={12} sm={12} xs={12}>\n        //                 <Grid container spacing={gridSpacing}>\n        //                     <Grid item sm={6} xs={12} md={6} lg={12}>\n        //                         <TotalIncomeDarkCard isLoading={isLoading} />\n        //                     </Grid>\n        //                     <Grid item sm={6} xs={12} md={6} lg={12}>\n        //                         <TotalIncomeLightCard isLoading={isLoading} />\n        //                     </Grid>\n        //                 </Grid>\n        //             </Grid>\n        //         </Grid>\n        //     </Grid>\n        //     <Grid item xs={12}>\n        //         <Grid container spacing={gridSpacing}>\n        //             <Grid item xs={12} md={8}>\n        //                 <TotalGrowthBarChart isLoading={isLoading} />\n        //             </Grid>\n        //             <Grid item xs={12} md={4}>\n        //                 <PopularCard isLoading={isLoading} />\n        //             </Grid>\n        //         </Grid>\n        //     </Grid> */}\n        // </Grid>\n    );\n};\n\nexport default Dashboard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-restricted-syntax */\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n\n  const output = _extends({}, props); // Resolve default props, code borrow from React source.\n  // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221\n\n\n  const defaultProps = theme.components[name].defaultProps;\n  let propName;\n\n  for (propName in defaultProps) {\n    if (output[propName] === undefined) {\n      output[propName] = defaultProps[propName];\n    }\n  }\n\n  return output;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultTheme\", \"withTheme\", \"name\"],\n      _excluded2 = [\"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { getDisplayName } from '@material-ui/utils';\nimport makeStyles from '../makeStyles';\nimport getThemeProps from '../getThemeProps';\nimport useTheme from '../useTheme'; // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst withStyles = (stylesOrCreator, options = {}) => Component => {\n  const {\n    defaultTheme,\n    withTheme = false,\n    name\n  } = options,\n        stylesOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Component === undefined) {\n      throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n  }\n\n  let classNamePrefix = name;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!name) {\n      // Provide a better DX outside production.\n      const displayName = getDisplayName(Component);\n\n      if (displayName !== undefined) {\n        classNamePrefix = displayName;\n      }\n    }\n  }\n\n  const useStyles = makeStyles(stylesOrCreator, _extends({\n    defaultTheme,\n    Component,\n    name: name || Component.displayName,\n    classNamePrefix\n  }, stylesOptions));\n  const WithStyles = /*#__PURE__*/React.forwardRef(function WithStyles(props, ref) {\n    const other = _objectWithoutPropertiesLoose(props, _excluded2); // The wrapper receives only user supplied props, which could be a subset of\n    // the actual props Component might receive due to merging with defaultProps.\n    // So copying it here would give us the same result in the wrapper as well.\n\n\n    const classes = useStyles(_extends({}, Component.defaultProps, props));\n    let theme;\n    let more = other;\n\n    if (typeof name === 'string' || withTheme) {\n      // name and withTheme are invariant in the outer scope\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      theme = useTheme() || defaultTheme;\n\n      if (name) {\n        more = getThemeProps({\n          theme,\n          name,\n          props: other\n        });\n      } // Provide the theme to the wrapped component.\n      // So we don't have to use the `withTheme()` Higher-order Component.\n\n\n      if (withTheme && !more.theme) {\n        more.theme = theme;\n      }\n    }\n\n    return /*#__PURE__*/_jsx(Component, _extends({\n      ref: ref,\n      classes: classes\n    }, more));\n  });\n  process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\n    /**\n     * Override or extend the styles applied to the component.\n     */\n    classes: PropTypes.object\n  } : void 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    WithStyles.displayName = `WithStyles(${getDisplayName(Component)})`;\n  }\n\n  hoistNonReactStatics(WithStyles, Component);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Exposed for test purposes.\n    WithStyles.Naked = Component;\n    WithStyles.options = options;\n    WithStyles.useStyles = useStyles;\n  }\n\n  return WithStyles;\n};\n\nexport default withStyles;"],"names":["data","toFixed","undefined","props","type","classes","makeStyles","theme","card","backgroundColor","palette","primary","main","error","color","light","overflow","position","content","width","height","background","borderRadius","top","right","padding","avatar","typography","commonAvatar","largeAvatar","secondary","marginTop","paddingTop","paddingBottom","useStyles","isLoading","border","className","contentClass","alignItems","disableGutters","cardHeading","marginRight","marginBottom","container","direction","item","justifyContent","variant","cardAction","display","spacing","gridSpacing","xs","zeroMinWidth","dark","breakpoints","down","opacity","avatarRight","mediumAvatar","zIndex","fontSize","fontWeight","subHeading","avatarCircle","cursor","smallAvatar","circleIcon","transform","menuItem","contentContainer","fontStyle","primaryLight","divider","avatarSuccess","success","marginLeft","successDark","avatarError","orange","errorDark","grey","WhiteTextTypography","withStyles","root","Typography","blue","useHistory","md","history","style","size","startIcon","onClick","push","placementDetails","console","log","ConvertToLPA","useState","setPlacementDetails","Passed_out_year","batchYear","setBatchYear","detailsCard","setDetailsCard","e","target","value","length","res","UsePost","UseFetch","required_data","loading","annoucements","slice","title","SubCard","ChipCard","rowSpacing","columnSpacing","sm","map","id","Announcement_ID","Company_details","Job_Role","ParseDate","Registration_Deadline","Date_of_announcement","handleNull","Date_of_Visit","Job_Location","fullWidth","label","helperText","onInput","handleChange","ListCard","getThemeProps","params","name","components","defaultProps","propName","output","_extends","_excluded","_excluded2","stylesOrCreator","options","Component","defaultTheme","withTheme","stylesOptions","_objectWithoutPropertiesLoose","classNamePrefix","displayName","WithStyles","React","ref","other","more","useTheme","_jsx","hoistNonReactStatics"],"sourceRoot":""}