{"version":3,"file":"static/js/4390.850102af.chunk.js","mappings":"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","sources":["utils/password-strength.js","views/pages/authentication/register/RestRegister.js","views/pages/authentication/register/index.js"],"sourcesContent":["/**\n * Password validator for login pages\n */\n\nimport value from '../assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (value) => {\n    return new RegExp(/[0-9]/).test(value);\n};\n\n// has mix of small and capitals\nconst hasMixed = (value) => {\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\n};\n\n// has special chars\nconst hasSpecial = (value) => {\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\n};\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n};\n\n// password strength indicator\nexport const strengthIndicator = (value) => {\n    let strengths = 0;\n    if (value.length > 5) strengths++;\n    if (value.length > 7) strengths++;\n    if (hasNumber(value)) strengths++;\n    if (hasSpecial(value)) strengths++;\n    if (hasMixed(value)) strengths++;\n    return strengths;\n};\n","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport configData from '../../../../config';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@material-ui/core';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\n\n// project imports\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport AnimateButton from './../../../../ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from '../../../../utils/password-strength';\n\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[700],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//===========================|| API JWT - REGISTER ||===========================//\n\nconst RestRegister = ({ ...others }) => {\n    const classes = useStyles();\n    let history = useHistory();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState('');\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={{\n                    username: '',\n                    email: '',\n                    password: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    username: Yup.string().required('Username is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        axios\n                            .post( configData.API_SERVER + 'users/register', {\n                                username: values.username,\n                                password: values.password,\n                                email: values.email\n                            })\n                            .then(function (response) {\n                                if (response.data.success) {\n                                    history.push('/login');\n                                } else {\n                                    setStatus({ success: false });\n                                    setErrors({ submit: response.data.msg });\n                                    setSubmitting(false);\n                                }\n                            })\n                            .catch(function (error) {\n                                setStatus({ success: false });\n                                setErrors({ submit: error.response.data.msg });\n                                setSubmitting(false);\n                            });\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Username\"\n                                    margin=\"normal\"\n                                    name=\"username\"\n                                    id=\"username\"\n                                    type=\"text\"\n                                    value={values.username}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    className={classes.loginInput}\n                                    error={touched.username && Boolean(errors.username)}\n                                />\n                                {touched.username && errors.username && (\n                                    <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                        {errors.username}\n                                    </FormHelperText>\n                                )}\n                            </Grid>\n                        </Grid>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box\n                                    sx={{\n                                        mb: 2\n                                    }}\n                                >\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box\n                                                backgroundColor={level.color}\n                                                sx={{\n                                                    width: 85,\n                                                    height: 8,\n                                                    borderRadius: '7px'\n                                                }}\n                                            ></Box>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <Typography variant=\"subtitle1\">\n                                            Agree with &nbsp;\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                                                Terms & Condition.\n                                            </Typography>\n                                        </Typography>\n                                    }\n                                />\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box\n                                sx={{\n                                    mt: 3\n                                }}\n                            >\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box\n                            sx={{\n                                mt: 2\n                            }}\n                        >\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign UP\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default RestRegister;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from './../AuthWrapper1';\nimport AuthCardWrapper from './../AuthCardWrapper';\nimport Logo from './../../../../ui-component/Logo';\nimport RestRegister from './RestRegister';\nimport AuthFooter from './../../../../ui-component/cards/AuthFooter';\n\n// assets\n\n//===============================|| AUTH3 - REGISTER ||===============================//\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <RouterLink to=\"#\">\n                                            <Logo />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <RestRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/login\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Register;\n"],"names":["strengthColor","count","label","color","value","strengthIndicator","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","useStyles","makeStyles","theme","redButton","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","loginIcon","marginRight","loginInput","typography","customInput","others","classes","history","useHistory","scriptedRef","useScriptRef","matchDownSM","useMediaQuery","React","showPassword","setShowPassword","checked","setChecked","strength","setStrength","level","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","temp","useEffect","initialValues","username","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","axios","configData","then","response","data","success","push","msg","catch","error","err","console","current","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","Grid","container","item","xs","TextField","fullWidth","name","id","type","onBlur","onChange","className","Boolean","FormHelperText","FormControl","InputLabel","htmlFor","OutlinedInput","inputProps","notchedOutline","e","target","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","Visibility","VisibilityOff","Box","sx","mb","alignItems","width","height","borderRadius","Typography","variant","justifyContent","FormControlLabel","control","Checkbox","component","Link","to","mt","AnimateButton","Button","disableElevation","disabled","size","useTheme","AuthWrapper1","direction","minHeight","m","sm","AuthCardWrapper","Logo","Stack","secondary","main","gutterBottom","textAlign","Divider","RouterLink","textDecoration","AuthFooter"],"sourceRoot":""}