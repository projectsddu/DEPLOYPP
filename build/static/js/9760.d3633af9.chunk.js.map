{"version":3,"file":"static/js/9760.d3633af9.chunk.js","mappings":"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","sources":["Config/ViewConfig.js","Config/domainConfig.js","views/Student_Views/Comment/S_SingleComment.js","views/Student_Views/Comment/S_ViewComment.js","views/Student_Views/Comment/JSX/NoComment.jsx","views/Student_Views/Comment/S_AddComment.js","views/Student_Views/Profile/S_ProfilePhoto.js","views/Student_Views/Profile/S_PlacementCard.js","views/Student_Views/Profile/JSX/EmptyPlacement.jsx","views/Student_Views/Profile/S_InternshipCard.js","views/Student_Views/Profile/JSX/EmptyInternship.jsx","views/Student_Views/Profile/S_ViewProfile.js","../node_modules/@material-ui/core/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/Checkbox/checkboxClasses.js","../node_modules/@material-ui/core/Checkbox/Checkbox.js","../node_modules/@material-ui/styles/getThemeProps/getThemeProps.js"],"sourcesContent":["const ViewConfig = {\n    \"admin\": {\n        \"student\": {\n            \"add_student\": {\n                \"browse_file\": \"Browse File\",\n                \"add_student\": \"Add Student Details\"\n            },\n            \"edit_student\": {\n                \"header\": \"Edit Student\",\n                \"update\": \"update\",\n                \"update_placement\": \"Update Placement\",\n                \"update_internship\": \"Update Internship\"\n            },\n            \"batch_update\":{\n                \"header\": \"Update Student Details\",\n                \"browse_file\": \"Browse File\",\n                \"update_student_btn\": \"Submit\"\n            },\n            \"view_student\":{\n                \"title\": \"View Student Details\",\n                \"delete_message\": \"Are, you really sure want to delete this student?\"\n            },\n            \"student_passwords\": {\n                \"title\": \"Student First Time Passwords\",\n                \"btn_send_passwords\": \"Send Passwords\",\n                \"note\": \"Note: Sending passwords might take a while!\"\n            },\n            \"student_profile\": {\n                \"header\": \"Student Profile\",\n                \"view_cv\": \"View CV\",\n                \"view_photo\": \"View Photo\",\n                \"student_skills\": {\n                    \"header\": \"Student Skills\",\n                    \"no_skill_message\": {\n                        \"message\": \"No student skills added yet\",\n                        \"variant\": \"h2\"\n                    }\n                },\n                \"internships\": {\n                    \"header\": \"Internships\",\n                    \"no_internship_message\": {\n                        \"message\": \"No student internships added yet\",\n                        \"variant\": \"h2\"\n                    }\n                },\n                \"projects\": {\n                    \"header\": \"Projects\",\n                    \"no_projects_message\": {\n                        \"message\": \"No student projects added yet\",\n                        \"variant\": \"h2\"\n                    }\n                }\n            }\n        },\n        \"company\": {\n            \"view_company\": {\n                \"header\": \"View Company\",\n                \"edit_company\": \"Edit Company\"\n            },\n            \"edit_company\": {\n                \"header\": \"Edit Company\",\n                \"update_button\": \"update\"\n            },\n            \"add_company\": {\n                \"header\": \"Add Company\",\n                \"add_button\": \"Add Company\"\n            }\n\n            // TBC after sessional 3\n        }\n    },\n    \"student\": {\n        \"Profile\": {\n            \"placements\": {\n                \"Header\": \"Placements from college\",\n                \"no_placements_message\": {\n                    \"message\": \"No student placements added yet\",\n                    \"variant\": \"h2\"\n                }\n            },\n            \"internships\": {\n                \"Header\": \"Internships from college\",\n                \"no_internships_message\": {\n                    \"message\": \"No student internships added yet\",\n                    \"variant\": \"h2\"\n                }\n            }\n        }\n    }\n}\n\nexport default ViewConfig","const domainConfig = {\n    // \"domain\": process.env.React_App_DOMAIN\n    \"domain\": \"http://placement.ceddu.in\"\n}\n\nexport default domainConfig","import React from 'react';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { Chip } from '@mui/material';\nimport { Avatar } from '@material-ui/core';\nimport ParseDate from \"../../../Utilities/ParseDate\"\n\n\n\n\nfunction S_SingleComment(props) {\n\n\n    function formatDate(date) {\n        var new_date = new Date(date);\n        var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        return new_date.toLocaleDateString(\"en-US\", options);\n\n    }\n\n\n    return (\n        <>\n            <SubCard>\n                <Grid container spacing={2}>\n                    <Grid item xs={3} md={1}>\n                        <Avatar>{props.name[0]}</Avatar>\n                    </Grid>\n                    <Grid item xs={9} md={11}>\n\n                        <Grid item xs={6} md={4}>\n                            {/* <b>keval</b> */}\n                            <Typography variant='h4'>{props.name}</Typography>\n                        </Grid>\n                        <Grid item xs={6} md={4}>\n                            {ParseDate.dateWithDay(props.date)}\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n                {/* <hr/> */}\n                <br />\n                <Typography variant='h5'>{props.comment_msg}</Typography>\n                {/* <Grid>\n                <Grid item xs={12} justifyContent=\"space-between\" md={12}>\n                    <Avatar>A</Avatar>\n                </Grid>\n                <hr/>\n                <Grid item xs={12} md={12}>\n                    gadnevia\n                </Grid>\n            </Grid> */}\n            </SubCard>\n            <br />\n        </>\n    );\n}\n\nexport default S_SingleComment;\n","import { Button, Grid, Typography } from '@material-ui/core';\nimport React from 'react';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { Chip } from '@mui/material';\nimport { Avatar } from '@material-ui/core';\nimport UseFetch from '../../../Utilities/UseFetch';\nimport SingleComment from './S_SingleComment';\nimport { useLocation } from \"react-router-dom\";\n\n\n\nfunction S_ViewComment(props) {\n\n  // const location = useLocation().pathname;\n  //   const id = location.split(\"/\")[3]\n\n  // const { required_data, loading } = UseFetch(\"/annoucement/getAllComments/\" + id, \"GET\")\n\n  // let comments;\n\n  // if (!loading) {\n  //   comments = required_data[\"data\"];\n  //   comments.sort(function (a, b) {\n  //     return new Date(b.Comment_Date) - new Date(a.Comment_Date);\n  //   })\n  //   // console.log(\"comments: \", comments);\n  // }\n\n  let comments = props.data;\n\n  return (\n    <>\n      {comments.map((e) => (\n        <SingleComment name={e.Comment_Publisher} date={e.Comment_Date} comment_msg={e.Comment_text} />\n      ))}\n    </>\n  );\n}\n\nexport default S_ViewComment","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { useHistory } from 'react-router';\nimport { Grid, Button } from '@material-ui/core';\nimport { IconCirclePlus } from '@tabler/icons';\nimport { grey, red } from '@mui/material/colors';\nimport { blue, lightBlue } from '@material-ui/core/colors';\n\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\n\n// button color\nconst color = blue[300]\n\nfunction NoComment() {\n    const history = useHistory();\n\n    return (\n        <>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={10}>\n                    <WhiteTextTypography variant=\"h3\">No comments yet!</WhiteTextTypography>\n                </Grid>\n\n            </Grid>\n        </>\n    );\n}\n\nexport default NoComment;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport $ from 'jquery';\n// assets\nimport {\n    Avatar,\n    Card,\n    CardContent,\n    Chip,\n    Divider,\n    Grid,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Stack\n} from '@material-ui/core';\n// import { makeStyles } from '@material-ui/styles';\n// import { IconBrandTelegram, IconBuildingStore, IconMailbox, IconPhoto } from '@tabler/icons';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { useState, useEffect } from 'react';\n// import { Typography } from '@mui/material'\n// import UseFetch from '../../Utilities/UseFetch';\nimport { useLocation } from 'react-router-dom';\nimport TableHead from '@mui/material/TableHead';\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\n// import TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n// import ParseDate from '../../Utilities/ParseDate';\n// import SearchSection from '../../layout/MainLayout/Header/SearchSection';\nimport TextField from '@mui/material/TextField';\n// import { useHistory } from \"react-router-dom\";\nimport UsePost from '../../../Utilities/UsePost';\n// import HandleToast from '../../Utilities/HandleToast'\nimport { ToastContainer, toast } from 'react-toastify';\nimport responsePipelineHandler from '../../../Utilities/ResponsePipelineHandler';\nimport ViewComment from './S_ViewComment';\nimport ChipCard from '../../../ui-component/cards/GenericCards/ChipCard';\nimport NoComment from './JSX/NoComment';\n\nfunction S_AddComment(props) {\n    const [commentData, setcommentData] = useState({\n        Comment_text: ''\n    });\n    useEffect(() => {}, [commentData]);\n\n    const location = useLocation().pathname;\n    const id = location.split('/')[4];\n\n    const [allComments, setallComments] = useState(undefined);\n    useEffect(async () => {\n        const response = await fetch('/annoucement/getAllComments/' + id, { method: 'GET' });\n        let data1 = await response.json();\n        data1 = data1['data'];\n        console.log('from addcomment: ', data1);\n        data1.sort(function (a, b) {\n            return new Date(b.Comment_Date) - new Date(a.Comment_Date);\n        });\n\n        setallComments(data1);\n    }, []);\n    // useEffect\n\n    // const { required_data, loading } = UseFetch(\"/annoucement/getAllComments/\" + id, \"GET\")\n\n    // let comments;\n\n    // if (!loading) {\n    //     comments = required_data[\"data\"];\n    //     comments.sort(function (a, b) {\n    //         return new Date(b.Comment_Date) - new Date(a.Comment_Date);\n    //     })\n    //     // setcommentData(comments)\n    //     // console.log(\"comments: \", comments);\n    // }\n\n    async function handleComment(id) {\n        const keys = Object.keys(commentData);\n        // console.log(keys)\n        let count = 0;\n        let flag = false;\n        for (let i = 0; i < keys.length; i++) {\n            let key = keys[i];\n            // console.log(studentInternshipStateDetails[key]);\n            if (commentData[key] == '' || commentData[key] == null) {\n                // alert(\"Please fill all fields.\")\n                // count++;\n                flag = true;\n                break;\n            }\n        }\n        // console.log(\"Count: \", count)\n        // if (count != 0 ) {\n        //     toast.error(\"All fields are required in internships!\")\n        // }\n        if (flag) {\n            // console.log(\"inside the error!!\")\n            toast.error('Comment text required!');\n        } \n        else {\n            // console.log(\"clicked \" + id);\n            const res = await UsePost('/annoucement/addComment/' + id, commentData, 'POST');\n            const params1 = {\n                data: res,\n                HandleToast: {\n                    toast: toast,\n                    flag: false\n                }\n            };\n            // console.log(res);\n            responsePipelineHandler(params1, 1);\n\n            setcommentData({ Comment_text: '' });\n\n            // ajax call\n            $.ajax({\n                url: '/annoucement/getAllComments/' + id,\n                type: 'GET',\n                success: function (data) {\n                    console.log(data);\n\n                    let data1 = data['data'];\n\n                    data1.sort(function (a, b) {\n                        return new Date(b.Comment_Date) - new Date(a.Comment_Date);\n                    });\n\n                    setallComments(data1);\n                    // const redirect_url = \"http://localhost:3000/announcement/view_annoucement/\" + id;\n                    // $.post(redirect_url, data)\n                }\n            });\n        }\n    }\n\n    return (\n        <>\n            <MainCard title=\"Comments\">\n                <form>\n                    <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\n                        <Grid item xs={9} md={11}>\n                            <TextField\n                                id=\"comment_text\"\n                                label=\"Enter the comment\"\n                                multiline\n                                fullWidth\n                                maxRows={7}\n                                value={commentData['Comment_text']}\n                                onChange={(e) => {\n                                    setcommentData({ ...commentData, Comment_text: e.target.value });\n                                }}\n                            />\n                        </Grid>\n                        {/* <br /><br /> */}\n                        <Grid item xs={3} md={1}>\n                            <Button onClick={() => handleComment(props.id)} variant=\"contained\" size=\"large\" color=\"primary\">\n                                Post\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <TableContainer component={Paper}></TableContainer>\n\n                    {/* <Button onClick={handleComment} fullWidth variant='contained' size='large' color=\"primary\">Post Comment</Button> */}\n                </form>\n                <br />\n                <br />\n                {allComments === undefined ? (\n                    <>\n                        <ChipCard data={<NoComment />} isLoading={false} />\n                    </>\n                ) : (\n                    <ViewComment data={allComments} />\n                )}\n                {/* {allComments === undefined ? <h1>No Comments yet!!!</h1> : <ViewComment data={allComments} />} */}\n            </MainCard>\n        </>\n    );\n}\n\nexport default S_AddComment;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport { Theme } from '@material-ui/core';\nimport { Grid } from '@mui/material';\nimport domainConfig from '../../../Config/domainConfig';\n\nexport default function S_ProfilePhoto(props) {\n    const useStyles = makeStyles({\n        logo: {\n            maxWidth: 160\n        }\n    });\n    const classes = useStyles();\n    return (\n        // <AppBar color=\"inherit\">\n        // <Toolbar>\n        <>\n            <Grid container justifyContent=\"center\">\n                <Grid item>\n                    <img\n                        style={{ \"object-fit\": \"cover\", aspectRatio: \"1/1\", \"max-width\": '200px', \"max-height\": '200px', borderRadius: '50%', border: \"1px solid grey\" }}\n                        src={\n\n                            process.env.NODE_ENV == \"production\" ?\n                                // \"http://csiddu.tech\" + \n                                domainConfig.domain + \n                                props.student_photo : \"http://localhost:8000\" + props.student_photo\n\n                        }\n                        alt=\"logo\"\n                        className={classes.logo}\n                    />\n                </Grid>\n            </Grid>\n        </>\n        // </Toolbar>\n        // </AppBar>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { withStyles } from '@material-ui/styles';\nimport { TextField, Typography, MenuItem, Button, Checkbox, Chip } from '@material-ui/core';\nimport Grid from '@mui/material/Grid';\nimport { red, blue } from '@mui/material/colors';\nimport domainConfig from '../../../Config/domainConfig';\n\nconst btn_color = blue[300];\n\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\n\nfunction S_PlacementCard(props) {\n    let [studentPlacementStateDetails, setstudentPlacementStateDetails] = useState(props.details);\n\n    useEffect(() => {\n        // console.log(props)\n        setstudentPlacementStateDetails(props.details);\n    }, []);\n\n    // console.log(\"from line 25\",studentPlacementStateDetails[\"Offer_Letter\"])\n\n    return (\n        <>\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={2}>\n                            <WhiteTextTypography variant=\"h4\">Company: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={10}>\n                            <WhiteTextTypography variant=\"h5\">\n                            {studentPlacementStateDetails.Company_details.Company_name}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={2}>\n                            <WhiteTextTypography variant=\"h4\">Designation: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={10}>\n                            <WhiteTextTypography variant=\"h5\">\n                            {studentPlacementStateDetails.Designation}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={2}>\n                            <WhiteTextTypography variant=\"h4\">Salary: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={10}>\n                            <WhiteTextTypography variant=\"h5\">\n                            {studentPlacementStateDetails.Salary}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <br/>\n                {/* <br/> */}\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid style={{\"padding-top\" : \"1.5%\"}} item xs={6} md={2}>\n                        {studentPlacementStateDetails[\"Offer_Letter\"] != \"no_offer_letter.pdf\" ?\n                            <a\n                                target=\"_blank\"\n                                href={\n                                    process.env.NODE_ENV == 'production'\n                                        ? \n                                        // 'http://csiddu.tech' + \n                                        domainConfig.domain + \n                                        studentPlacementStateDetails.Offer_Letter\n                                        : 'http://localhost:8000' + studentPlacementStateDetails.Offer_Letter\n                                }\n                                style={{ 'text-decoration': 'none' }}\n                            >\n                                <Button size='small'\n                                    style={{backgroundColor: btn_color}}\n                                variant=\"contained\">View File</Button>\n                            </a> :\n                            <>\n                            <Chip style={{ color:'white', fontWeight:'bold' }} variant=\"outlined\" label=\"No Offer Letter\" />\n                        </>\n                    }\n                        </Grid>\n                        <Grid  item xs={6} md={10}>\n                            <label>Final</label>{' '}\n                            <Checkbox\n                            color='default'\n                                checked={studentPlacementStateDetails.IsFinal == 1 ? true : false}\n                                value={studentPlacementStateDetails.IsFinal}\n                                // onChange={(e) => handleCheckBox(e)}\n                            />\n                            \n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {/* <SubCard>\n                \n                <Grid style={{ 'padding-top': '1%' }} container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\n                    <Grid item md={2} xs={6} style={{ 'padding-top': '1%' }}>\n                        <a\n                            target=\"_blank\"\n                            href={\n                                process.env.NODE_ENV == 'production'\n                                    ? 'http://csiddu.tech' + studentPlacementStateDetails.Offer_Letter\n                                    : 'http://localhost:8000' + studentPlacementStateDetails.Offer_Letter\n                            }\n                            style={{ 'text-decoration': 'none' }}\n                        >\n                            <Button variant=\"contained\">View File</Button>\n                        </a>\n                    </Grid>\n                    \n                    <Grid item md={2} xs={6}>\n                        <Checkbox\n                            checked={studentPlacementStateDetails.IsFinal == 1 ? true : false}\n                            value={studentPlacementStateDetails.IsFinal}\n                            // onChange={(e) => handleCheckBox(e)}\n                        />{' '}\n                        <label>Final</label>\n                    </Grid>\n                </Grid>\n            </SubCard>\n            <br /> */}\n        </>\n    );\n}\n\nexport default S_PlacementCard;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { useHistory } from 'react-router';\nimport { Grid, Button } from '@material-ui/core';\nimport { IconCirclePlus } from '@tabler/icons';\nimport { grey, red } from '@mui/material/colors';\nimport { blue, lightBlue } from '@material-ui/core/colors';\nimport ViewConfig from \"../../../../Config/ViewConfig\"\n\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\n\n// button color\nconst color = blue[300]\n\nfunction EmptyPlacement() {\n    const history = useHistory();\n\n    return (\n        <>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={10}>\n                    <WhiteTextTypography variant={ViewConfig.student.Profile.placements.no_placements_message.variant}>{ViewConfig.student.Profile.placements.no_placements_message.message}</WhiteTextTypography>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default EmptyPlacement;\n","import React, { useState, useEffect } from 'react';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { TextField, Typography } from '@material-ui/core';\nimport Grid from '@mui/material/Grid';\nimport { withStyles } from '@material-ui/styles';\n\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\n\n\nfunction S_InternshipCard(props) {\n    let [studentInternshipStateDetails, setStudentInternshipStateDetails] = useState(props.details);\n\n    useEffect(() => {\n        // console.log(props);\n        setStudentInternshipStateDetails(props.details);\n    }, []);\n\n    return (\n        <>\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={4}>\n                            <WhiteTextTypography variant=\"h4\">Company: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={8}>\n                            <WhiteTextTypography variant=\"h5\">\n                            {studentInternshipStateDetails.Company_details.Company_name}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={4}>\n                            <WhiteTextTypography variant=\"h4\">Project Title: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={8}>\n                            <WhiteTextTypography variant=\"h5\">\n                            {studentInternshipStateDetails.Project_Title}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={4}>\n                            <WhiteTextTypography variant=\"h4\">Stipend: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={8}>\n                            <WhiteTextTypography variant=\"h5\">\n                            {studentInternshipStateDetails.Stipend}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={4}>\n                            <WhiteTextTypography variant=\"h4\">Internal Guide Name: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={8}>\n                            <WhiteTextTypography variant=\"h5\">\n                            {studentInternshipStateDetails.Internal_Guide_ID}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={4}>\n                            <WhiteTextTypography variant=\"h4\">External Guide Name: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={8}>\n                            <WhiteTextTypography variant=\"h5\">\n                            {studentInternshipStateDetails.External_Guide_Name}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={4}>\n                            <WhiteTextTypography variant=\"h4\">External Guide Mobile Number: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={8}>\n                            <WhiteTextTypography variant=\"h5\">\n                            {studentInternshipStateDetails.External_Guide_Mobile_Number}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={6} md={4}>\n                            <WhiteTextTypography variant=\"h4\">External Guide Email ID: </WhiteTextTypography>\n                        </Grid>\n                        <Grid item xs={6} md={8}>\n                            <WhiteTextTypography variant=\"h5\">\n                            {studentInternshipStateDetails.External_Guide_Email_ID}\n                            </WhiteTextTypography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n\n            {/* <SubCard>\n                <TextField value={studentInternshipStateDetails.Company_details.Company_name} disabled fullWidth></TextField>\n                <br />\n                <br />\n                <TextField\n                    fullWidth\n                    required\n                    label=\"Project Title\"\n                    id=\"project_title\"\n                    helperText=\"Enter the project title\"\n                    value={studentInternshipStateDetails.Project_Title}\n                    onChange={(e) => {\n                        setStudentInternshipStateDetails({ ...studentInternshipStateDetails, Project_Title: e.target.value });\n                    }}\n                />\n                <br />\n                <br />\n                <Grid container spacing={2}>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            fullWidth\n                            required\n                            label=\"Stipend\"\n                            id=\"stipend\"\n                            helperText=\"Enter Stipend\"\n                            value={studentInternshipStateDetails.Stipend}\n                            onChange={(e) => {\n                                setStudentInternshipStateDetails({ ...studentInternshipStateDetails, Stipend: e.target.value });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            fullWidth\n                            required\n                            label=\"Internal Guide Name\"\n                            id=\"internal_guide_id\"\n                            helperText=\"Enter the internal guide id\"\n                            value={studentInternshipStateDetails.Internal_Guide_ID}\n                            onChange={(e) => {\n                                setStudentInternshipStateDetails({ ...studentInternshipStateDetails, Internal_Guide_ID: e.target.value });\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <br />\n                <TextField\n                    fullWidth\n                    required\n                    label=\"External Guide Name\"\n                    id=\"external_guide_name\"\n                    helperText=\"Enter the external guide name\"\n                    value={studentInternshipStateDetails.External_Guide_Name}\n                    onChange={(e) => {\n                        setStudentInternshipStateDetails({ ...studentInternshipStateDetails, External_Guide_Name: e.target.value });\n                    }}\n                />\n                <br />\n                <br />\n                <Grid container spacing={2}>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            fullWidth\n                            required\n                            label=\"External Guide Mobile Name\"\n                            id=\"external_guide_mobile_number\"\n                            helperText=\"Enter the external guide mobile name\"\n                            value={studentInternshipStateDetails.External_Guide_Mobile_Number}\n                            onChange={(e) => {\n                                setStudentInternshipStateDetails({\n                                    ...studentInternshipStateDetails,\n                                    External_Guide_Mobile_Number: e.target.value\n                                });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            fullWidth\n                            required\n                            label=\"External Guide Email ID\"\n                            id=\"external_guide_email_id\"\n                            helperText=\"Enter the external guide email-id\"\n                            value={studentInternshipStateDetails.External_Guide_Email_ID}\n                            onChange={(e) => {\n                                setStudentInternshipStateDetails({\n                                    ...studentInternshipStateDetails,\n                                    External_Guide_Email_ID: e.target.value\n                                });\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </SubCard>\n            <br /> */}\n        </>\n    );\n}\n\nexport default S_InternshipCard;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { useHistory } from 'react-router';\nimport { Grid, Button } from '@material-ui/core';\nimport { IconCirclePlus } from '@tabler/icons';\nimport { grey, red } from '@mui/material/colors';\nimport { blue, lightBlue } from '@material-ui/core/colors';\nimport ViewConfig from \"../../../../Config/ViewConfig\"\n\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\n\n// button color\nconst color = blue[300]\n\nfunction EmptyInternship() {\n    const history = useHistory();\n\n    return (\n        <>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={10}>\n                    <WhiteTextTypography variant={ViewConfig.student.Profile.internships.no_internships_message.variant}>{ViewConfig.student.Profile.internships.no_internships_message.message}</WhiteTextTypography>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default EmptyInternship;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n// assets\nimport {\n    Avatar,\n    Card,\n    CardContent,\n    Chip,\n    Divider,\n    Grid,\n    Box,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Stack\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { IconBrandTelegram, IconBuildingStore, IconMailbox, IconPhoto } from '@tabler/icons';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { useState, useEffect } from 'react';\nimport { Typography } from '@mui/material';\nimport UseFetch from '../../../Utilities/UseFetch';\nimport { useLocation } from 'react-router-dom';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport { IconInfoCircle, IconX, IconPlus } from '@tabler/icons';\n\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { ParseDate, getYear } from '../../../Utilities/ParseDate';\n// import DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport SearchSection from '../../../layout/MainLayout/Header/SearchSection';\nimport TextField from '@mui/material/TextField';\nimport { useHistory } from 'react-router-dom';\nimport UsePost from '../../../Utilities/UsePost';\nimport HandleToast from '../../../Utilities/HandleToast';\nimport { ToastContainer, toast } from 'react-toastify';\nimport responsePipelineHandler from '../../../Utilities/ResponsePipelineHandler';\nimport AddComment from '../Comment/S_AddComment';\n// import Fetch\nimport ProfilePhoto from './S_ProfilePhoto';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport ChipCard from '../../../ui-component/cards/GenericCards/ChipCard';\n// import ChipInput from 'material-ui-chip-input'\nimport Modal from '@mui/material/Modal';\nimport S_AddProject from '../Project/S_AddProject';\nimport S_PlacementCard from './S_PlacementCard';\nimport EmptyPlacement from './JSX/EmptyPlacement';\nimport ViewConfig from '../../../Config/ViewConfig';\nimport S_InternshipCard from './S_InternshipCard';\nimport EmptyInternship from './JSX/EmptyInternship';\nimport domainConfig from '../../../Config/domainConfig';\n\nexport default function S_ViewProfile() {\n    const useStyles = makeStyles((theme) => ({\n        navContainer: {\n            width: '100%',\n            maxWidth: '330px',\n            paddingTop: 0,\n            paddingBottom: 0,\n            borderRadius: '10px',\n            [theme.breakpoints.down('sm')]: {\n                maxWidth: '300px'\n            }\n        },\n        listAction: {\n            top: '22px'\n        },\n        actionColor: {\n            color: theme.palette.grey[500]\n        },\n\n        listItem: {\n            padding: 0\n        },\n        sendIcon: {\n            marginLeft: '8px',\n            marginTop: '-3px'\n        },\n        listDivider: {\n            marginTop: 0,\n            marginBottom: 0\n        },\n        listChipError: {\n            color: theme.palette.orange.dark,\n            backgroundColor: theme.palette.orange.light,\n            height: '24px',\n            padding: '0 6px',\n            marginRight: '5px'\n        },\n        listChipWarning: {\n            color: theme.palette.warning.dark,\n            backgroundColor: theme.palette.warning.light,\n            height: '24px',\n            padding: '0 6px'\n        },\n        listChipSuccess: {\n            color: theme.palette.success.dark,\n            backgroundColor: theme.palette.success.light,\n            height: '24px',\n            padding: '0 6px'\n        },\n        listAvatarSuccess: {\n            color: theme.palette.success.dark,\n            backgroundColor: theme.palette.success.light,\n            border: 'none',\n            borderColor: theme.palette.success.main\n        },\n        listAvatarPrimary: {\n            color: theme.palette.primary.dark,\n            backgroundColor: theme.palette.primary.light,\n            border: 'none',\n            borderColor: theme.palette.primary.main\n        },\n        listContainer: {\n            paddingLeft: '56px'\n        },\n        uploadCard: {\n            backgroundColor: theme.palette.secondary.light\n        },\n        paddingBottom: {\n            paddingBottom: '16px'\n        },\n        itemAction: {\n            cursor: 'pointer',\n            padding: '16px',\n            '&:hover': {\n                background: theme.palette.primary.light\n            }\n        }\n    }));\n    const classes = useStyles();\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        boxShadow: 24,\n        borderRadius: '2%',\n        p: 4\n    };\n\n    function createData(key, value) {\n        if (value == undefined) {\n            value = 'Not Defined!';\n        }\n        return { key, value };\n    }\n\n    let history = useHistory();\n\n    const { required_data, loading } = UseFetch('/student/getOneStudent/', 'GET');\n\n    const [skill, setSkill] = useState(['C++', 'Python', 'MatLab']);\n\n    let student_details, rows;\n\n    let student_id = '';\n\n    if (!loading) {\n        student_details = required_data['data'];\n        student_id = student_details['Student_ID'];\n        console.log(student_details[\"DOB\"])\n        // student_details[\"DOB\"] = ParseDate(student_details[\"DOB\"])\n        student_details[\"Enrollment_year\"] = getYear(student_details[\"Enrollment_year\"])\n        student_details['Passed_out_year'] = getYear(student_details['Passed_out_year'])\n        // console.log(\"Student Id: \", student_id)\n        // console.log(student_details)\n        rows = [\n            createData('Student ID', student_details['Student_ID']),\n            createData('FirstName', student_details['FirstName']),\n            createData('MiddleName', student_details['MiddleName']),\n            createData('LastName', student_details['LastName']),\n            createData('Admission type', student_details['Admission_type']),\n            createData('Cast category', student_details['Cast_category']),\n            createData('Gender', student_details['Gender']),\n            createData('DOB', ParseDate(student_details['DOB'])),\n            createData('SSC Percentage', student_details['SSC_Percentage']),\n            createData('SSC Percentile', student_details['SSC_Percentile']),\n            createData('SSC Board', student_details['SSC_Board']),\n            createData('SSC School', student_details['SSC_School']),\n            createData('HSC Percentage', student_details['HSC_Percentage']),\n            createData('HSC Percentile', student_details['HSC_Percentile']),\n            createData('HSC Board', student_details['HSC_Board']),\n            createData('HSC School', student_details['HSC_School']),\n            createData('IsD2D', student_details['IsD2D']),\n            createData('Diploma Result CPI', student_details['Diploma_Result_CPI']),\n            createData('Diploma Result Percentage', student_details['Diploma_Result_Percentage']),\n            createData('Diploma College Name', student_details['Diploma_College_Name']),\n            createData('Diploma University', student_details['Diploma_University']),\n            createData('Sem 1 SPI', student_details['Sem_1_SPI']),\n            createData('Sem 2 SPI', student_details['Sem_2_SPI']),\n            createData('Sem 3 SPI', student_details['Sem_3_SPI']),\n            createData('Sem 4 SPI', student_details['Sem_4_SPI']),\n            createData('Sem 5 SPI', student_details['Sem_5_SPI']),\n            createData('Sem 6 SPI', student_details['Sem_6_SPI']),\n            createData('Sem 7 SPI', student_details['Sem_7_SPI']),\n            createData('Sem 8 SPI', student_details['Sem_8_SPI']),\n            createData('Current CPI', student_details['Current_CPI']),\n            createData('Enrollment year', student_details['Enrollment_year']),\n            createData('Passed out year', student_details['Passed_out_year']),\n            createData('Email ID', student_details['Email_ID']),\n            createData('Contact No 1', student_details['Contact_No_1']),\n            createData('Contact No 2', student_details['Contact_No_2']),\n            createData('Address', student_details['Address']),\n            createData('City', student_details['City']),\n            createData('Pin Code', student_details['Pin_Code']),\n            createData('Current semester', student_details['Current_semester']),\n            createData('Career Preference', student_details['Career_Preference']),\n            // createData(\"CV Upload\", student_details[\"CV_Upload\"]),\n            // createData(\"Student Photo\", student_details[\"Student_Photo\"]),\n            createData('Branch Id', student_details['Branch_Id'])\n        ];\n    }\n\n    const [skillDetails, setSkillDetails] = useState(undefined);\n    const [skillExist, setSkillExist] = useState(false);\n\n    // const [placementCard, setPlacementCard] = useState([]);\n    // const [internshipCard, setInternshipCard] = useState([]);\n\n    const [placementDetails, setPlacementDetails] = useState(undefined);\n    const [internshipDetails, setInternshipDetails] = useState(undefined);\n\n    useEffect(async () => {\n        let response = undefined;\n        response = await fetch('/skillsandachievements/getSkillsAndAchievements/', { method: 'GET' });\n\n        let data = undefined;\n        if (response != undefined) {\n            data = await response.json();\n            if (data != undefined) {\n                data = data['data'];\n                if (data == 'No Student Skills And Achievements Record found') {\n                    // not exist\n                    setSkillExist(false);\n                    setSkillDetails({\n                        Skills: '',\n                        Competitive_Coding_Achievements: '',\n                        Other_Achievements: '',\n                        GRE_Score: '',\n                        TOEFL_Score: '',\n                        IELTS_Score: '',\n                        GATE_Score: ''\n                    });\n                } else {\n                    // exist\n                    setSkillDetails(data[0]);\n                    setSkillExist(true);\n\n\n                }\n                console.log(data[0]);\n\n                let response1 = undefined\n                response1 = await fetch(\"/studentplacement/getStudentPlacementInStudent/\")\n                if (response1 != undefined) {\n                    let placementData = undefined\n                    placementData = await response1.json()\n                    // let studentPlacementCardCopy = placementCard\n                    if (placementData != undefined) {\n                        if (placementData[\"data\"] == \"Student Placement Record Not Found!\") {\n                            setPlacementDetails(undefined)\n                        }\n                        else {\n                            setPlacementDetails(placementData[\"data\"])\n                        }\n                    }\n                    // if(placementData != undefined && placementData[\"data\"] != \"Student Placement Record Not Found!\")\n                    // {\n                    //     // console.log(placementData[\"data\"])\n                    //     for(let i = 0; i < placementData[\"data\"].length; i++)\n                    //     {\n                    //         console.log(placementData[\"data\"][i])\n                    //         studentPlacementCardCopy.unshift(\n                    //             <S_PlacementCard details={placementData[\"data\"][i]}/>\n                    //         )\n                    //     }\n                    //     setPlacementCard([].concat(studentPlacementCardCopy))\n                    // }\n                    // console.log(placementData)\n\n                    let response2 = undefined\n                    response2 = await fetch(\"/studentinternship/getStudentInternshipInStudent/\")\n\n                    if (response2 != undefined) {\n                        let internshipsData = undefined\n                        internshipsData = await response2.json()\n                        // let internshipCardCopy = internshipCard\n                        console.log(internshipsData[\"data\"])\n                        if (internshipsData != undefined) {\n                            if (internshipsData[\"data\"] == \"Student Internship Record Not Found!\") {\n                                setInternshipDetails(undefined)\n                            }\n                            else {\n                                setInternshipDetails(internshipsData[\"data\"])\n                            }\n                        }\n                        // if(internshipsData != undefined && internshipsData[\"data\"] != \"Student Internship Record Not Found!\")\n                        // {\n                        //     for(let i = 0; i < internshipsData[\"data\"].length; i++)\n                        //     {\n                        //         console.log(internshipsData[\"data\"][i])\n                        //         internshipCardCopy.unshift(\n                        //             <S_InternshipCard details={internshipsData[\"data\"][i]}/>\n                        //         )\n                        //     }\n                        //     setInternshipCard([].concat(internshipCardCopy))\n                        // }\n                    }\n                }\n            }\n        }\n\n        console.log(response);\n    }, []);\n\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [searchData, setSearchData] = useState('');\n\n    async function handleSkillAdd() {\n        // if (searchData != \"\") {\n        //     const skillCopy = [].concat(skill)\n        //     skillCopy.push(searchData)\n        //     setSkill(skillCopy)\n        //     console.log(skillCopy)\n        //     handleClose()\n        // }\n\n        // check whether skills are exist or not\n\n        if (searchData != \"\") {\n            const skill_details_copy = JSON.parse(JSON.stringify(skillDetails));\n\n            if (skill_details_copy[\"Skills\"] == \"\") {\n                skill_details_copy[\"Skills\"] = searchData\n                setSkillDetails(skill_details_copy)\n                setSkillExist(true)\n            }\n            else {\n                skill_details_copy[\"Skills\"] += (\",\" + searchData)\n                setSkillDetails(skill_details_copy)\n            }\n\n            if (skillExist) {\n\n                // update\n                const res = await UsePost('/skillsandachievements/updateSkillsAndAchievements/', skill_details_copy, 'POST');\n                const params1 = {\n                    data: res,\n                    HandleToast: {\n                        toast: toast,\n                        flag: false\n                    }\n                };\n                console.log(res);\n                responsePipelineHandler(params1, 1);\n            }\n            else {\n                // create\n                const res = await UsePost('/skillsandachievements/addSkillsAndAchievements/', skill_details_copy, 'POST');\n                const params1 = {\n                    data: res,\n                    HandleToast: {\n                        toast: toast,\n                        flag: false\n                    }\n                };\n                console.log(res);\n                responsePipelineHandler(params1, 1);\n            }\n        }\n        setSearchData(\"\")\n        handleClose()\n    }\n    async function handleDelete(idx) {\n        // let skillCopy = skill\n        // let i;\n        // let res = skillCopy.filter((elem) => {\n        //     return (idx != elem)\n        // })\n        // setSkill(res)\n\n        let skillCopy = skillDetails['Skills'].split(',');\n        let res1 = skillCopy.filter((elem) => {\n            return idx != elem;\n        });\n        let skills = '';\n        for (let i = 0; i < res1.length; i++) {\n            skills += res1[i];\n            if (i != res1.length - 1) {\n                skills += ', ';\n            }\n        }\n        console.log(skills);\n\n        const skill_details_copy = JSON.parse(JSON.stringify(skillDetails));\n        skill_details_copy['Skills'] = '' + skills;\n        setSkillDetails(skill_details_copy);\n\n        const res = await UsePost('/skillsandachievements/updateSkillsAndAchievements/', skill_details_copy, 'POST');\n        const params1 = {\n            data: res,\n            HandleToast: {\n                toast: toast,\n                flag: false\n            }\n        };\n        console.log(res);\n        responsePipelineHandler(params1, 1);\n        // console.log(skillDetails)\n    }\n    return (\n        <>\n            <MainCard title=\"Details\">\n                {loading ? (\n                    ''\n                ) : (\n                    <>\n                        <SubCard>\n                            <Grid container justifyContent={'flex-start'} spacing={3}>\n                                <Grid item md={3} xs={12}>\n                                    <ProfilePhoto student_photo={loading ? '' : student_details['Student_Photo']} />\n                                </Grid>\n                                <Grid md={9} xs={12} item style={{ 'padding-left': '6%' }}>\n                                    {/* <h1>SKILLS</h1> */}\n                                    <Button onClick={handleOpen} variant=\"contained\" borderRadius=\"50%\">\n                                        Add Skill\n                                    </Button>\n                                    <Modal\n                                        open={open}\n                                        onClose={handleClose}\n                                        aria-labelledby=\"modal-modal-title\"\n                                        aria-describedby=\"modal-modal-description\"\n                                    >\n                                        <Box sx={style}>\n                                            <Grid spacing={2} container justifyContent={'space-between'}>\n                                                <Grid item>\n                                                    <TextField\n                                                        onChange={(e) => {\n                                                            setSearchData(e.target.value);\n                                                        }}\n                                                        value={searchData}\n                                                        size=\"small\"\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <Button\n                                                        size=\"medium\"\n                                                        onClick={() => {\n                                                            handleSkillAdd();\n                                                        }}\n                                                        variant=\"contained\"\n                                                        startIcon={<IconPlus />}\n                                                    >\n                                                        Add Skill\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                    </Modal>\n                                    <br />\n                                    <br />\n                                    <Grid direction=\"row\" spacing={1}>\n                                        {skillDetails == undefined\n                                            ? ''\n                                            : skillDetails['Skills'] == \"\" ? \"\" : skillDetails['Skills'].split(',').map((elem) => {\n                                                return (\n                                                    <Chip\n                                                        style={{ margin: '1%' }}\n                                                        icon={IconInfoCircle}\n                                                        variant=\"outlined\"\n                                                        color=\"primary\"\n                                                        onDelete={() => handleDelete(elem)}\n                                                        label={elem}\n                                                    />\n                                                );\n                                            })}\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </SubCard>\n\n                        {/* <SubCard> */}\n                        {/* <S_AddProject /> */}\n                        {/* </SubCard> */}\n\n                        {/* <TableContainer component={Paper}>\n                            <Table sx={{ minWidth: 200 }} aria-label=\"simple table\">\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>\n                                            <ProfilePhoto student_photo={loading ? \"\" : student_details[\"Student_Photo\"]} />\n                                        </TableCell>\n\n                                        <TableCell>\n                                            <h1>SKILLS</h1>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer> */}\n\n                        <br /><br />\n                        {/* <SubCard> */}\n                        <TableContainer component={Paper}\n                            style={{ width: \"100%\" }}\n                        // md={{minWidth: \"50%\"}}\n                        // sx={{ minWidth: 500 }}\n                        >\n                            <Table\n                                // sx={{ minWidth: 500 }} \n                                aria-label=\"simple table\"\n                                width=\"100%\"\n                            // style={{ width: \"100%\" }}\n                            >\n\n                                <TableBody>\n                                    {rows.map((row) => (\n                                        <TableRow\n                                            key={row.name}\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                        >\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                <Typography variant=\"h5\">\n                                                    {row.key}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.value}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                    <TableRow\n                                        key=\"CV_Upload\"\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            <Typography variant=\"h5\">\n                                                CV Upload\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {student_details === undefined ? \"Wait Loading....\" : <>\n                                                {student_details[\"CV_Upload\"] != \"image.png\" ?\n                                                    <a target='blank'\n                                                        style={{ \"text-decoration\": \"none\", \"cursor\": \"pointer\" }}\n                                                        href={\n\n                                                            process.env.NODE_ENV == \"production\" ?\n                                                                // \"http://placement.csiddu.tech\" + \n                                                                domainConfig.domain +\n                                                                student_details[\"CV_Upload\"] : \"http://localhost:8000\" + student_details[\"CV_Upload\"]\n                                                        }>\n\n                                                        {student_details === undefined ? \"Wait Loading....\" : <>\n                                                            <Chip\n                                                                label={\"View CV\"}\n                                                                // variant=\"outlined\"\n                                                                color='primary'\n                                                                clickable\n                                                            />\n\n                                                        </>\n                                                        }\n\n                                                    </a> :\n                                                    <>\n                                                        <Chip label=\"No CV Uploaded\" />\n                                                    </>\n                                                }\n\n                                            </>}\n\n                                        </TableCell>\n                                    </TableRow>\n                                    <TableRow\n                                        key=\"Student_Photo\"\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            <Typography variant=\"h5\">\n                                                Student Photo\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {student_details === undefined ? \"Wait Loading....\" : <>\n                                                <a target='blank'\n                                                    style={{ \"text-decoration\": \"none\", \"cursor\": \"pointer\" }}\n                                                    href={\n                                                        process.env.NODE_ENV == \"production\" ?\n                                                            // \"http://placement.csiddu.tech\" + \n                                                            domainConfig.domain +\n                                                            student_details[\"Student_Photo\"] : \"http://localhost:8000\" + student_details[\"Student_Photo\"]\n\n\n                                                    }>\n\n                                                    {student_details === undefined ? \"Wait Loading....\" : <>\n                                                        <Chip\n                                                            label={\"View Photo\"}\n                                                            // variant=\"outlined\"\n                                                            color='primary'\n                                                            clickable\n                                                        />\n                                                    </>\n                                                    }\n\n                                                </a>\n                                            </>}\n\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <br />\n                        <br />\n                        <MainCard title={ViewConfig.student.Profile.placements.Header}>\n                            {\n                                placementDetails == undefined ?\n                                    <>\n                                        <ChipCard loading={false} data={<EmptyPlacement />} />\n                                    </>\n                                    :\n                                    placementDetails.map((e) => {\n                                        return (<>\n                                            {/* {e} */}\n                                            <ChipCard data={<S_PlacementCard details={e} />} />\n                                            <br />\n                                        </>)\n                                    })\n                            }\n                        </MainCard>\n                        <br />\n                        <MainCard title={ViewConfig.student.Profile.internships.Header}>\n                            {\n                                internshipDetails == undefined ?\n                                    <>\n                                        <ChipCard loading={false} data={<EmptyInternship />} />\n                                    </>\n                                    :\n                                    internshipDetails.map((e) => {\n                                        return (<>\n                                            <ChipCard data={<S_InternshipCard details={e} />} />\n                                            <br />\n                                        </>)\n                                    })\n                            }\n                        </MainCard>\n\n                        {/* </SubCard> */}\n\n\n                        {/* <br />\n                        <br /> */}\n                        {/* <TableContainer component={Paper}>\n                            <Table sx={{ minWidth: 200 }} aria-label=\"simple table\">\n                                <TableBody>\n                                    {rows.map((row) => (\n                                        <TableRow key={row.name} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                <Typography variant=\"h5\">{row.key}</Typography>\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.value}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                    <TableRow key=\"CV_Upload\" sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            <Typography variant=\"h5\">CV Upload</Typography>\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {student_details === undefined ? (\n                                                'Wait Loading....'\n                                            ) : (\n                                                <>\n                                                    <a\n                                                        target=\"blank\"\n                                                        style={{ 'text-decoration': 'none', cursor: 'pointer' }}\n                                                        href={\n                                                            'http://localhost:8000' +\n                                                            student_details['CV_Upload'].split('.')[1] +\n                                                            '.' +\n                                                            student_details['CV_Upload'].split('.')[2]\n                                                        }\n                                                    >\n                                                        {student_details === undefined ? (\n                                                            'Wait Loading....'\n                                                        ) : (\n                                                            <>\n                                                                <Chip\n                                                                    label={'View CV'}\n                                                                    // variant=\"outlined\"\n                                                                    color=\"primary\"\n                                                                    clickable\n                                                                />\n                                                            </>\n                                                        )}\n                                                    </a>\n                                                </>\n                                            )}\n                                        </TableCell>\n                                    </TableRow>\n                                    <TableRow key=\"Student_Photo\" sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            <Typography variant=\"h5\">Student Photo</Typography>\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {student_details === undefined ? (\n                                                'Wait Loading....'\n                                            ) : (\n                                                <>\n                                                    <a\n                                                        target=\"blank\"\n                                                        style={{ 'text-decoration': 'none', cursor: 'pointer' }}\n                                                        href={\n                                                            'http://localhost:8000' +\n                                                            student_details['Student_Photo'].split('.')[1] +\n                                                            '.' +\n                                                            student_details['Student_Photo'].split('.')[2]\n                                                        }\n                                                    >\n                                                        {student_details === undefined ? (\n                                                            'Wait Loading....'\n                                                        ) : (\n                                                            <>\n                                                                <Chip\n                                                                    label={'View Photo'}\n                                                                    // variant=\"outlined\"\n                                                                    color=\"primary\"\n                                                                    clickable\n                                                                />\n                                                            </>\n                                                        )}\n                                                    </a>\n                                                </>\n                                            )}\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer> */}\n\n                    </>\n                )}\n            </MainCard>\n        </>\n    );\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = styleProps;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [styles.root, styleProps.indeterminate && styles.indeterminate, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]];\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  color: theme.palette.text.secondary,\n  '&:hover': {\n    backgroundColor: alpha(styleProps.color === 'default' ? theme.palette.action.active : theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, styleProps.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[styleProps.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const styleProps = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size !== 'medium' ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size !== 'medium' ? size : indeterminateIcon.props.fontSize\n    }),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'succes', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-restricted-syntax */\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n\n  const output = _extends({}, props); // Resolve default props, code borrow from React source.\n  // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221\n\n\n  const defaultProps = theme.components[name].defaultProps;\n  let propName;\n\n  for (propName in defaultProps) {\n    if (output[propName] === undefined) {\n      output[propName] = defaultProps[propName];\n    }\n  }\n\n  return output;\n}"],"names":["props","SubCard","Grid","container","spacing","item","xs","md","Avatar","name","Typography","variant","ParseDate","date","comment_msg","comments","data","map","e","Comment_Publisher","Comment_Date","Comment_text","WhiteTextTypography","withStyles","root","color","blue","useHistory","useState","commentData","setcommentData","useEffect","id","useLocation","pathname","split","undefined","allComments","setallComments","keys","Object","flag","i","length","key","toast","UsePost","res","params1","HandleToast","responsePipelineHandler","$","url","type","success","console","log","data1","sort","a","b","Date","fetch","method","response","json","MainCard","title","direction","justifyContent","alignItems","TextField","label","multiline","fullWidth","maxRows","value","onChange","target","Button","onClick","handleComment","size","TableContainer","component","Paper","ChipCard","isLoading","S_ProfilePhoto","classes","makeStyles","logo","maxWidth","useStyles","style","aspectRatio","borderRadius","border","src","domainConfig","student_photo","alt","className","btn_color","details","studentPlacementStateDetails","setstudentPlacementStateDetails","Company_details","Company_name","Designation","Salary","href","Offer_Letter","backgroundColor","Chip","fontWeight","Checkbox","checked","IsFinal","ViewConfig","studentInternshipStateDetails","setStudentInternshipStateDetails","Project_Title","Stipend","Internal_Guide_ID","External_Guide_Name","External_Guide_Mobile_Number","External_Guide_Email_ID","S_ViewProfile","theme","navContainer","width","paddingTop","paddingBottom","breakpoints","down","listAction","top","actionColor","palette","grey","listItem","padding","sendIcon","marginLeft","marginTop","listDivider","marginBottom","listChipError","orange","dark","light","height","marginRight","listChipWarning","warning","listChipSuccess","listAvatarSuccess","borderColor","main","listAvatarPrimary","primary","listContainer","paddingLeft","uploadCard","secondary","itemAction","cursor","background","createData","student_details","rows","UseFetch","required_data","loading","getYear","skillDetails","setSkillDetails","skillExist","setSkillExist","placementDetails","setPlacementDetails","internshipDetails","setInternshipDetails","Skills","Competitive_Coding_Achievements","Other_Achievements","GRE_Score","TOEFL_Score","IELTS_Score","GATE_Score","response1","placementData","response2","internshipsData","React","open","setOpen","handleClose","searchData","setSearchData","skill_details_copy","JSON","parse","stringify","idx","skillCopy","res1","filter","elem","skills","Modal","onClose","Box","sx","position","left","transform","bgcolor","boxShadow","p","handleSkillAdd","startIcon","margin","icon","IconInfoCircle","onDelete","handleDelete","Table","TableBody","row","TableRow","TableCell","scope","align","clickable","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","styleProps","indeterminate","capitalize","_extends","text","alpha","action","active","hoverOpacity","checkboxClasses","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","ref","useThemeProps","checkedIcon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","other","_objectWithoutPropertiesLoose","slots","composedClasses","composeClasses","useUtilityClasses","fontSize","getThemeProps","params","components","defaultProps","propName","output"],"sourceRoot":""}