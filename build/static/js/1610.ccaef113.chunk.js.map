{"version":3,"file":"static/js/1610.ccaef113.chunk.js","mappings":"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","sources":["Utilities/HandleToast.js","Utilities/RedirectHandler.js","Utilities/ResponsePipelineHandler.js","Utilities/UsePostFile.js","ui-component/cards/GenericCards/ChipCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/Internship/CompanyInternshipCard.js","views/Internship/AddInternship.js","views/Placement/JSX/NoStudent.jsx","views/Placement/JSX/Student_details.jsx"],"sourcesContent":["const handleToast = function (params) {\n\n    const toast = params.HandleToast.toast\n    const data = params.data\n    const flag = params.HandleToast.flag\n    const customMessage = params.HandleToast.customMessage\n    let message = \"not defined\"\n    if (!flag) {\n        message = data[\"data\"]\n    }\n    else {\n        message = customMessage\n    }\n    if (data[\"status\"]) {\n        toast.success(message)\n    }\n    else {\n        toast.error(message)\n    }\n}\nexport default handleToast","import { useHistory } from \"react-router\"\nconst RedirectHandler = function (props) {\n    const history = useHistory()\n    const data = props.data\n    if (data[\"redirect\"]) {\n        history.push(data[\"redirectUrl\"])\n    }\n}\nexport default RedirectHandler","import handleToast from \"./HandleToast\"\nimport RedirectHandler from \"./RedirectHandler\"\nconst responsePipelineHandler = function (data, seq_no = 0) {\n    const executionSequence = [[RedirectHandler, handleToast], [handleToast]]\n    executionSequence[seq_no].forEach((func) => {\n        func(data)\n    })\n}\nexport default responsePipelineHandler\n","import { useState, useEffect } from 'react'\n\nconst UsePostFile = async (url, data, method = \"POST\") => {\n    try {\n        const formData = new FormData();\n        let all_keys = Object.keys(data)\n        for (let key in all_keys) {\n            // console.log(all_keys[key])\n            // formData[all_keys[key]] = data[all_keys[key]]\n            formData.append(all_keys[key], data[all_keys[key]])\n        }\n        // console.log(formData)\n        // formData.append('File', selectedFile);\n        console.log({\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                // 'Content-Type': 'multipart/form-data'\n            },\n            body: formData\n        })\n        let response = await fetch(\n            url,\n            {\n                method: method,\n                headers: {\n                    'Accept': 'application/json',\n                    // 'Content-Type': 'multipart/form-data'\n                },\n                body: formData\n            }\n        );\n        let res1 = await response.json();\n        return res1;\n    }\n\n    catch (err) {\n        console.log(err.toString())\n    }\n}\n\nexport default UsePostFile","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\n// import MainCard from './../../../ui-component/cards/MainCard';\nimport MainCard from '../MainCard';\n// import TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\nimport TotalIncomeCard from '../Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\n\n\n//-----------------------|| DASHBOARD - TOTAL INCOME DARK CARD ||-----------------------//\n\nconst ChipCard = (props) => {\n    const type = props.type\n    // if (type === undefined) {\n    //     // type = theme.palette.primary.dark\n    // }\n    // else {\n    //     type = \"error\"\n    // }\n    // style constant\n    const useStyles = makeStyles((theme) => ({\n        card: {\n            backgroundColor: props.type === undefined ? theme.palette.primary.main : theme.palette.error.main,\n            color: theme.palette.primary.light,\n            overflow: 'hidden',\n            position: 'relative',\n            '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                width: '210px',\n                height: '210px',\n                background: 'linear-gradient(210.04deg, ' + theme.palette.primary[200] + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n                borderRadius: '50%',\n                top: '-30px',\n                right: '-180px'\n            },\n            '&:before': {\n                content: '\"\"',\n                position: 'absolute',\n                width: '210px',\n                height: '210px',\n                background: 'linear-gradient(140.9deg, ' + theme.palette.primary[200] + ' -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n                borderRadius: '50%',\n                top: '-160px',\n                right: '-130px'\n            }\n        },\n        content: {\n            padding: '16px !important'\n        },\n        avatar: {\n            ...theme.typography.commonAvatar,\n            ...theme.typography.largeAvatar,\n            backgroundColor: theme.palette.primary[800],\n            color: '#fff'\n        },\n        primary: {\n            color: '#fff'\n        },\n        secondary: {\n            color: theme.palette.primary.light,\n            marginTop: '5px'\n        },\n        padding: {\n            paddingTop: 0,\n            paddingBottom: 0\n        }\n    }));\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {props.isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            {props.data}\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nChipCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default ChipCard;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    content: {\n        padding: '16px !important'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n});\n\n//-----------------------|| SKELETON - TOTAL INCOME DARK/LIGHT Card ||-----------------------//\n\nconst TotalIncomeCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Skeleton variant=\"rect\" width={44} height={44} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={<Skeleton variant=\"rect\" height={20} />}\n                            secondary={<Skeleton variant=\"text\" />}\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomeCard;\n","import { Typography, MenuItem, Button, Checkbox } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport SubCard from '../../ui-component/cards/SubCard';\nimport { TextField } from '@material-ui/core';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport UseFetch from '../../Utilities/UseFetch';\nimport { Select } from '@mui/material';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport UsePostFile from '../../Utilities/UsePostFile';\nimport UsePost from \"../../Utilities/UsePost\"\nimport responsePipelineHandler from '../../Utilities/ResponsePipelineHandler';\nimport HandleToast from '../../Utilities/HandleToast';\nimport { ToastContainer, toast } from 'react-toastify';\n// import structuredClone from '@ungap/structured-clone';\n\nconst axios = require(\"axios\")\nconst Input = styled('input')({\n    display: 'none'\n});\n\nfunction CompanyInternshipCard(props) {\n\n\n    // let [studentPlacementDetails, setstudentPlacementDetails] = useState({\n    //     // Designation: props.details.Designation,\n    //     // Salary: props.details.Salary,\n    //     // Offer_Letter: props.details.Offer_Letter,\n    //     // Passed_out_year: props.details.Passed_out_year,\n    //     // IsFinal: props.details.IsFinal,\n    //     // Company_Name: props.details.Company_name,\n    //     // Company_ID: 1,\n    //     Designation: \"\",\n    //     Salary: \"\",\n    //     Offer_Letter: \"\",\n    //     Passed_out_year: \"\",\n    //     IsFinal: \"\",\n    //     Company_Name: \"\",\n    //     Company_ID: 1,\n    // });\n\n    let [studentPlacementStateDetails, setstudentPlacementStateDetails] = useState(\n        props.details\n    );\n    const [selectedFile, setSelectedFile] = useState();\n    const [isFilePicked, setIsFilePicked] = useState(false);\n\n\n\n    async function onAddPlacement() {\n        let updated_details = studentPlacementStateDetails;\n        const res = await UsePost('/studentinternship/addStudentInternship', updated_details, 'POST');\n        const params1 = {\n            data: res,\n            HandleToast: {\n                toast: toast,\n                flag: false\n            }\n        };\n        console.log(res);\n        responsePipelineHandler(params1, 1);\n        props.onAddFunc()\n    }\n\n    async function onUpdatePlacement() {\n        let updated_details = studentPlacementStateDetails;\n        // updated_details[\"Company_details\"] = \"\"\n        delete (updated_details.Company_details)\n        console.log(updated_details)\n        const res = await UsePost('/studentinternship/updateStudentInternship/' + updated_details.id, studentPlacementStateDetails, 'POST');\n        const params1 = {\n            data: res,\n            HandleToast: {\n                toast: toast,\n                flag: false\n            }\n        };\n        console.log(res);\n        responsePipelineHandler(params1, 1);\n        props.onAddFunc()\n    }\n\n    async function onDeletePlacement() {\n\n        let Resp = await axios({\n            method: 'post',\n            url: \"/studentinternship/deleteStudentInternship/\" + studentPlacementStateDetails.id,\n        });\n\n        console.log(Resp)\n        const params1 = {\n            data: Resp.data,\n            HandleToast: {\n                toast: toast,\n                flag: false\n            }\n        };\n        responsePipelineHandler(params1, 1);\n        handleClose()\n        console.log(props)\n        // props.callerFunc(props.seed, \"delete\")\n        props.onAddFunc()\n\n    }\n\n    function onButtonClick(event) {\n\n        // Updations Here\n\n        if (event == \"add\") {\n            onAddPlacement()\n        }\n        else if (event == \"update\") {\n            onUpdatePlacement()\n        }\n        else if (event == \"delete\") {\n            onDeletePlacement()\n        }\n    }\n\n\n\n\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        // border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const changeHandler = (event) => {\n        console.log(props)\n        console.log(event.target.files[0]['name']);\n        document.getElementById(\"fileUploadName\" + parseInt(props.seed * 10000)).innerText = ' ' + event.target.files[0]['name'];\n        console.log(document.getElementById(\"fileUploadName\" + parseInt(props.seed * 10000)))\n        const file_data = event.target.files[0];\n        let temp = studentPlacementStateDetails;\n        temp['Job_Description_File'] = file_data;\n        setstudentPlacementStateDetails(temp);\n        console.log(studentPlacementStateDetails)\n\n    };\n\n\n\n    let companies = [];\n    for (let i = 0; i < props.allCompanies.length; i++) {\n        var obj = {};\n        obj['value'] = props.allCompanies[i]['Company_ID'];\n        obj['label'] = props.allCompanies[i]['Company_name'];\n        companies.push(obj);\n    }\n\n    useEffect(() => {\n\n        console.log(props)\n        setstudentPlacementStateDetails(props.details)\n    }, [])\n\n\n    function handleCheckBox(e) {\n        const copy = JSON.parse(JSON.stringify(studentPlacementStateDetails))\n        if (copy[\"IsFinal\"] == 1) {\n            copy[\"IsFinal\"] = 0\n        }\n        else {\n            copy[\"IsFinal\"] = 1\n        }\n        console.log(e.target, studentPlacementStateDetails)\n        setstudentPlacementStateDetails(copy)\n    }\n    // const [open, setOpen] = React.useState(false);\n    // const handleOpen = () => setOpen(true);\n    // const handleClose = () => setOpen(false);\n    return (\n        <>\n\n            <SubCard>\n                {/* <Button onClick={() => {\n                    console.log(studentPlacementStateDetails)\n                }} >View State</Button> */}\n\n                {studentPlacementStateDetails.Company_details === undefined ? <TextField\n                    fullWidth\n                    id=\"companies\"\n                    onChange={(e) => { setstudentPlacementStateDetails({ ...studentPlacementStateDetails, Company_ID: e.target.value }) }}\n                    select\n                    label=\"Select Company\"\n                >\n                    {companies.map((option) => (\n                        <MenuItem\n                            onSelect={(e) => { console.log(e) }}\n                            key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField> :\n                    <>\n                        <TextField label=\"company name\" value={studentPlacementStateDetails.Company_details.Company_name} disabled fullWidth></TextField>\n\n\n                    </>\n                }\n\n\n                <br />\n\n                <br />\n\n                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\n\n                    <Grid item md={12} xs={12}>\n\n                        <TextField\n                            fullWidth\n                            label=\"Project Title\"\n                            id=\"project_title\"\n                            value={studentPlacementStateDetails.Project_Title}\n                            onChange={(e) => {\n                                setstudentPlacementStateDetails({ ...studentPlacementStateDetails, Project_Title: e.target.value });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            label=\"Stipend\"\n                            value={studentPlacementStateDetails.Stipend}\n                            onChange={(e) => {\n                                setstudentPlacementStateDetails({ ...studentPlacementStateDetails, Stipend: e.target.value });\n                            }}\n                            fullWidth></TextField>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            label=\"Internal Guide Name\"\n                            // onChange={(e) => handleKeyChange(e, \"Salary\")}\n                            onChange={(e) => {\n                                setstudentPlacementStateDetails({ ...studentPlacementStateDetails, Internal_Guide_ID: e.target.value });\n                            }}\n                            value={studentPlacementStateDetails.Internal_Guide_ID}\n                            fullWidth ></TextField>\n                    </Grid>\n\n                    <Grid item md={12} xs={12}>\n\n                        <TextField\n                            fullWidth\n                            // required\n                            label=\"External Guide Name\"\n                            id=\"external_guide_name\"\n                            // helperText=\"Enter the external guide name\"\n                            value={studentPlacementStateDetails.External_Guide_Name}\n                            onChange={(e) => {\n                                setstudentPlacementStateDetails({ ...studentPlacementStateDetails, External_Guide_Name: e.target.value });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            label=\"External Guide Mobile Name\"\n                            id=\"external_guide_mobile_number\"\n                            value={studentPlacementStateDetails.External_Guide_Mobile_Number}\n                            onChange={(e) => {\n                                setstudentPlacementStateDetails({ ...studentPlacementStateDetails, External_Guide_Mobile_Number: e.target.value });\n                            }}\n                            fullWidth></TextField>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                        <TextField\n                            label=\"External Guide Email ID\"\n                            id=\"external_guide_email_id\"\n                            // onChange={(e) => handleKeyChange(e, \"Salary\")}\n                            onChange={(e) => {\n                                setstudentPlacementStateDetails({ ...studentPlacementStateDetails, External_Guide_Email_ID: e.target.value });\n                            }}\n                            value={studentPlacementStateDetails.External_Guide_Email_ID}\n                            fullWidth ></TextField>\n                    </Grid>\n                    {/* <Grid md={6} xs={12}>\n                        <TextField\n                            fullWidth\n                            // required\n                            label=\"Stipend\"\n                            id=\"stipend\"\n                            helperText=\"Enter Stipend\"\n                            value={studentPlacementStateDetails.Stipend}\n                            onChange={(e) => {\n                                setstudentPlacementStateDetails({ ...studentPlacementStateDetails, Stipend: e.target.value });\n                            }}\n                        />\n                    </Grid> */}\n\n                </Grid>\n                <br />\n                <br />\n                <Grid style={{ \"padding-top\": \"1%\" }} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\" spacing={2}>\n\n\n                    <Grid container md={5} xs={12} justifyContent=\"flex-end\">\n                        {studentPlacementStateDetails.Company_details === undefined ? (\n                            <Grid item>\n                                <Button\n                                    onClick={() => onButtonClick(\"add\")}\n                                    variant=\"contained\" style={{ 'margin-top': '15%' }} size=\"medium\" component=\"span\">\n                                    {/* Add Placement */}\n                                    Add Internship\n                                </Button>\n                            </Grid>\n                        ) : (\n                            <Grid container justifyContent=\"flex-end\" spacing={2}>\n\n                                <Grid item>\n                                    <Button\n                                        color=\"error\"\n                                        variant=\"contained\"\n                                        style={{ 'margin-top': '15%' }}\n                                        size=\"medium\"\n                                        component=\"span\"\n                                        onClick={handleOpen}\n                                    >\n                                        Delele Internship\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        color=\"warning\"\n                                        variant=\"contained\"\n                                        style={{ 'margin-top': '15%', \"color\": \"white\", \"background\": \"#FFC107\" }}\n                                        size=\"medium\"\n                                        component=\"span\"\n                                        onClick={() => onButtonClick(\"update\")}\n                                    // onClick={handleOpen}\n                                    >\n                                        Update Internship\n                                    </Button>\n\n                                </Grid>\n                            </Grid>\n                        )}\n                        {/* <Button onClick={handleOpen}>Open modal</Button> */}\n                        <Modal\n                            open={open}\n                            onClose={handleClose}\n                            aria-labelledby=\"modal-modal-title\"\n                            aria-describedby=\"modal-modal-description\"\n                        >\n                            <Box sx={style}>\n                                <Typography style={{ \"color\": \"#616161\" }} id=\"modal-modal-title\" variant=\"h3\" component=\"h1\">\n                                    Are, you really sure want to delete this Internship?\n                                </Typography><br />\n                                <Grid container spacing={2} justifyContent={\"\"}>\n                                    <Grid md={6} item>\n                                        <Button fullWidth style={{ color: \"white\", backgroundColor: \"#00C853\" }} variant=\"contained\"\n                                            onClick={() => onButtonClick(\"delete\")}\n                                        >\n                                            Confirm\n                                        </Button>\n                                    </Grid>\n                                    <Grid md={6} item>\n                                        <Button fullWidth color='error' variant=\"contained\" onClick={handleClose}>\n                                            Cancel\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n\n                            </Box>\n                        </Modal>\n\n                    </Grid>\n                </Grid>\n            </SubCard>\n            <br />\n        </>\n    );\n}\n\nexport default CompanyInternshipCard;\n","import React, { useState, useEffect } from 'react';\nimport MainCard from '../../ui-component/cards/MainCard';\nimport { TextField } from '@material-ui/core';\nimport CompanyPlacementCard from './CompanyInternshipCard';\nimport { ToastContainer, toast } from 'react-toastify';\nimport UseFetch from '../../Utilities/UseFetch';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { IconCirclePlus } from '@tabler/icons';\nimport Grid from '@mui/material/Grid';\nimport SubCard from '../../ui-component/cards/SubCard';\nimport { Typography } from '@material-ui/core';\nimport { ParseDate } from '../../Utilities/ParseDate';\nimport Modal from '@mui/material/Modal';\nimport ChipCard from \"../../ui-component/cards/GenericCards/ChipCard\"\nimport Student_details from '../Placement/JSX/Student_details';\nimport NoStudent from \"../Placement/JSX/NoStudent\"\nimport CircularProgress from '@mui/material/CircularProgress';\nimport responsePipelineHandler from '../../Utilities/ResponsePipelineHandler';\nimport UsePost from '../../Utilities/UsePost';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Card, CardContent, Divider, Button } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\nimport { useLocation, useHistory } from 'react-router';\n\n// import ParseDate from \"../../Utilities/ParseDate\"\n\n\n\nfunction AddPlacement() {\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        bgcolor: 'background.paper',\n        // boxShadow: 24,\n        p: 4,\n        border: \"0px solid white\"\n    };\n    const [studentData, setStudentData] = useState('');\n    const [StudentDetails, setStudentDetails] = useState(undefined);\n    const [studentPlacement, setStudentPlacement] = useState(undefined)\n    const [allCompanies, setallCompanies] = useState([])\n    // const [checkedStatus, setcheckedStatus] = useState([])\n    const [placementData, setplacementData] = useState([])\n\n    const [placementCard, setPlacementCard] = useState([]);\n    const [studentDetailsState, setstudentDetailsState] = useState(\"\")\n\n    async function handleAddPlacementChange() {\n        // Just rerender the view.\n        // StudentDetails has got the student ID\n        console.log(\"Here in add placement changes\")\n        console.log(studentDetailsState)\n        console.log(StudentDetails)\n        let idx\n\n        const studId = location.pathname.split(\"/\")\n        const lastElem = studId.slice(\"-1\")[0]\n        idx = lastElem\n        const payLoad = {\n            target: {\n                value: idx\n            }\n        }\n        setPlacementCard([])\n        await handleChange(payLoad)\n    }\n\n\n    useEffect(async () => {\n        let response = await fetch(\"/company/getCompany\")\n        if (response) {\n            let data = await response.json()\n            if (data) {\n                console.log(data[\"data\"])\n                setallCompanies([].concat(data[\"data\"]))\n\n            }\n        }\n    }, [])\n    function changeStateFromChild(seed, operation) {\n        let placement_card_copy = placementCard\n        if (operation == \"delete\") {\n            let filteredList = placement_card_copy.filter((elem) => {\n                return elem.props.seed != seed\n            })\n            console.log(filteredList)\n\n            setPlacementCard(filteredList)\n        }\n    }\n\n    // const [jsonData, setjsonData] = useState(undefined)\n\n    async function handleChange(e) {\n        setStudentData(e.target.value)\n\n        if (e.target.value.length === 10) {\n            setPlacementCard([].concat([]))\n\n            handleOpen()\n            let response = undefined\n            response = await fetch(\"/student/getOneStudentInAdmin/\" + e.target.value.toUpperCase(), { method: \"GET\" })\n\n            if (response != undefined) {\n                let jsonData = undefined\n                jsonData = await response.json()\n                if (jsonData != undefined) {\n                    console.log(jsonData);\n                    if (jsonData[\"data\"] == \"Error Fetching Student data !!!\") {\n                        console.log(\"Here in ese\")\n                        setStudentDetails(\"No student found!\")\n                    }\n                    else {\n\n                        setStudentDetails(jsonData[\"data\"])\n                        const student_Id = jsonData[\"data\"][\"Student_ID\"]\n                        setstudentDetailsState(jsonData[\"data\"][\"Student_ID\"])\n                        console.log(student_Id)\n                        let response1 = undefined\n                        response1 = await fetch(\"/studentinternship/getStudentInternship/\" + student_Id, { method: \"GET\" })\n\n                        if (response1 != undefined) {\n                            console.log(placementCard)\n                            let jsonData1 = undefined\n                            jsonData1 = await response1.json()\n                            console.log(jsonData1)\n                            setStudentPlacement(jsonData1)\n                            let studentPlacementCardCopy = []\n                            console.log(jsonData1.data)\n\n                            if (jsonData1.data != \"Student Internship Record Not Found!\" && jsonData1 != undefined) {\n                                for (let i = 0; i < jsonData1.data.length; i++) {\n                                    console.log(jsonData1.data[i])\n                                    let x = Math.random();\n                                    studentPlacementCardCopy.unshift(\n                                        <CompanyPlacementCard\n                                            onAddFunc={handleAddPlacementChange}\n                                            callerFunc={changeStateFromChild}\n                                            seed={x}\n                                            from={\"line 86\"}\n                                            allCompanies={allCompanies}\n                                            details={jsonData1.data[i]}\n                                            idx={i}\n                                        />\n                                    )\n\n                                }\n                                setPlacementCard([].concat(studentPlacementCardCopy))\n                            }\n                            // console.log(placementCard)\n                        }\n                    }\n                }\n\n            }\n\n\n\n\n        }\n        else if (e.target.value === 0) {\n            setStudentDetails(undefined)\n            console.log(\"Here\")\n        }\n        handleClose()\n\n    }\n\n\n\n    function handleClick() {\n        // console.log(\"keval\")\n        let placement_card_copy = placementCard;\n        placement_card_copy.push(<CompanyPlacementCard\n            onAddFunc={handleAddPlacementChange}\n            callerFunc={changeStateFromChild}\n            seed={Math.random()}\n            from={\"line 123\"}\n            details={{\n                Designation: \"\",\n                Salary: \"\",\n                Offer_Letter: \"\",\n                Passed_out_year: \"\",\n                IsFinal: false,\n                Company_ID: \"\",\n                companyName: \"\",\n                Student_ID: studentData.toUpperCase()\n            }}\n            allCompanies={allCompanies} />);\n        setPlacementCard([].concat(placement_card_copy));\n    }\n\n    const [first, setfirst] = useState(\"\")\n    useEffect(() => {\n        console.log(first)\n    }, [first])\n\n    let oppo = 9000\n    function checkMe(str1) {\n        setfirst(str1 + oppo + \"From GHere\")\n    }\n\n    const [searchName, setsearchName] = useState(\"\")\n    const [namesResult, setNamesResult] = useState(\"jenil\")\n\n    function changeResult(data) {\n        const recievedData = data\n        setNamesResult(recievedData)\n    }\n\n    const handleNamesChange = async (e) => {\n        try {\n            setsearchName(e.target.value)\n            if (e.target.value.length > 2) {\n                const url = \"/student/searchStudent/\" + e.target.value\n                const status = await UsePost(url, {}, \"POST\")\n                console.log(status)\n                changeResult(status.data)\n                // setNamesResult(status.data)\n                console.log(namesResult)\n            }\n            else {\n                console.log(\"Enter more\")\n            }\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n    const useStyles = makeStyles((theme) => ({\n        card: {\n            backgroundColor: theme.palette.primary.light\n        },\n        content: {\n            padding: '0px !important'\n        },\n        contentContainer: {\n            padding: '16px',\n            paddingBottom: 0,\n            color: '#fff'\n        },\n        fontStyle: {\n            fontWeight: 400\n        },\n        divider: {\n            marginTop: '2%',\n            // marginBottom: '12px'\n        },\n    }));\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const orangeDark = theme.palette.primary[800];\n\n    // React.useEffect(() => {\n    //     const newSupportChart = {\n    //         ...chartData.options,\n    //         colors: [orangeDark],\n    //         tooltip: {\n    //             theme: 'light'\n    //         }\n    //     };\n    //     ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    // }, [orangeDark]);\n    const location = useLocation()\n    useEffect(async () => {\n        const studId = location.pathname.split(\"/\")\n        const lastElem = studId.slice(\"-1\")\n        console.log(lastElem)\n        if (!isNaN(parseInt(lastElem[0] + lastElem[1]))) {\n            const payLoad = {\n                target: {\n                    value: lastElem[0]\n                }\n            }\n            setstudentDetailsState(lastElem[0])\n            await handleChange(payLoad)\n        }\n\n    }, [])\n\n    const history = useHistory()\n    async function selectName(id) {\n        try {\n            const payLoad = {\n                target: {\n                    value: id\n                }\n            }\n            history.push(\"/internship/add_internship/\" + id)\n            await handleChange(payLoad)\n            setNamesResult(\"jenil\")\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <>\n            {/* {namesResult.toString()} */}\n            <MainCard title=\"View / Add Student Internship\">\n                <Modal\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <CircularProgress style={style} color=\"primary\" />\n                </Modal>\n                <TextField\n                    type='text'\n                    fullWidth\n                    label=\"Student Name or ID\"\n                    value={searchName}\n                    onInput={(e) => {\n                        handleNamesChange(e)\n                    }}\n                    id=\"fullWidth\"\n                />\n                <br /><br />\n\n\n                {namesResult == \"jenil\" || namesResult.length == 0 ? \"\" :\n                    <>\n                        <Grid style={{ \"padding\": \"1%\", \"box-shadow\": \"rgb(213 213 213 / 72%) 0px 0px 2px 2px\", \"borderRadius\": \"8px\" }}>\n\n\n                            {namesResult.map((e) => {\n                                return (<>\n\n                                    <Grid item xs={12} style={{ \"padding\": \"1%\" }} container>\n                                        <Grid xs={9} md={9}>\n\n                                            {e.Student_ID + \" \" + e.FirstName + \" \" + e.LastName}\n\n                                        </Grid>\n                                        <Grid xs={3} md={3} justifyContent={\"flex-end\"}>\n                                            <div style={{ \"display\": \"flex\", \"justifyContent\": \"center\" }}>\n                                                {/* <Grid > */}\n                                                <Button\n                                                    onClick={() => { selectName(e.Student_ID) }}\n                                                    variant=\"contained\"\n                                                    size=\"small\"\n                                                >Select</Button>\n                                                {/* </Grid> */}\n                                            </div>\n                                        </Grid>\n                                        <Divider className={classes.divider} />\n                                        {/* <Grid container direction=\"column\">\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item xs={9} md={9}>\n                                                        <p>\n                                                            {e.Student_ID + \" \" + e.FirstName + \" \" + e.LastName}\n                                                        </p>\n\n                                                    </Grid>\n                                                    <Grid item xs={2} md={2}>\n                                                        <Grid container alignItems=\"center\" justifyContent=\"center\">\n                                                            <Grid item>\n                                                                <Button\n                                                                    onClick={() => { selectName(e.Student_ID) }}\n                                                                    variant=\"contained\"\n                                                                    size=\"small\"\n                                                                >Select</Button>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid> */}\n                                    </Grid>\n                                    {/* <Divider\n                                        className={classes.divider}\n                                    /> */}\n                                </>)\n                            })}\n                        </Grid>\n                    </>\n                }\n\n                <br />\n                {/* <TextField\n                    fullWidth\n                    // required\n                    label=\"Student ID\"\n                    onInput={(e) => {\n                        handleChange(e)\n                    }}\n                    value={studentData}\n                    id=\"fullWidth\"\n                    helperText=\"Enter Student ID\"\n                /> */}\n                {/* <br /> */}\n                {/* <br /> */}\n                {StudentDetails === undefined ? \"\" :\n                    StudentDetails == \"No student found!\" ?\n                        <ChipCard data={\n                            <NoStudent ID={studentData} />} loading={false} type={\"error\"} /> :\n                        <>\n                            <ChipCard loading={false} data={<Student_details details={StudentDetails} />}>\n                            </ChipCard>\n                            <br />\n                        </>\n\n                }\n\n                {/* {placementCard.map((e) => {\n                    return e;\n                })} */}\n                {placementCard.map((elem) => {\n                    return (<>\n                        {elem}\n                    </>)\n                })}\n\n                <br />\n                <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n                    <LoadingButton\n                        color=\"primary\"\n                        onClick={handleClick}\n                        loading={false}\n                        loadingPosition=\"start\"\n                        startIcon={<IconCirclePlus />}\n                        variant=\"contained\"\n                    >\n                        Add\n                    </LoadingButton>\n                </Grid>\n            </MainCard>\n        </>\n    );\n}\n\nexport default AddPlacement;\n","import React from 'react'\nimport { Grid } from '@mui/material'\nimport { Typography } from '@material-ui/core'\nimport { withStyles } from '@material-ui/styles';\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\nexport default function NoStudent(props) {\n    return (\n        <Grid container justifyContent={\"center\"} spacing={2}>\n            <Grid item>\n\n                <WhiteTextTypography variant=\"h2\">\n                    No student found with ID: {props.ID.toUpperCase()}\n                </WhiteTextTypography>\n            </Grid>\n\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Grid } from '@mui/material'\nimport { Typography } from '@material-ui/core'\nimport { withStyles } from '@material-ui/styles';\nconst WhiteTextTypography = withStyles({\n    root: {\n        color: '#FFFFFF'\n    }\n})(Typography);\nexport default function Student_details(props) {\n    return (\n        <Grid container justifyContent={\"flex-start\"} spacing={2}>\n            <Grid item md={4} xs={12}>\n                <WhiteTextTypography variant=\"h3\">\n                    Student ID\n                </WhiteTextTypography>\n                {props.details.Student_ID}\n            </Grid>\n            <Grid item md={4} xs={12}>\n                <WhiteTextTypography variant=\"h3\">\n                    Name\n                </WhiteTextTypography>\n                {props.details.FirstName + \" \" + props.details.MiddleName + \" \" + props.details.LastName}\n            </Grid>\n            <Grid item md={4} xs={12}>\n                <WhiteTextTypography variant=\"h3\">\n                    CPI\n                </WhiteTextTypography>\n                {props.details.Current_CPI}\n            </Grid>\n            <Grid item md={4} xs={12}>\n\n            </Grid>\n        </Grid>\n    )\n}\n"],"names":["params","toast","HandleToast","data","flag","customMessage","message","success","error","props","history","useHistory","push","seq_no","executionSequence","RedirectHandler","handleToast","forEach","func","UsePostFile","url","key","method","formData","FormData","all_keys","Object","keys","append","console","log","headers","body","fetch","response","json","res1","toString","type","classes","makeStyles","theme","card","backgroundColor","undefined","palette","primary","main","color","light","overflow","position","content","width","height","background","borderRadius","top","right","padding","avatar","typography","commonAvatar","largeAvatar","secondary","marginTop","paddingTop","paddingBottom","useStyles","isLoading","border","className","contentClass","alignItems","disableGutters","variant","axios","require","styled","display","useState","details","studentPlacementStateDetails","setstudentPlacementStateDetails","updated_details","UsePost","res","params1","responsePipelineHandler","onAddFunc","Company_details","id","Resp","handleClose","onButtonClick","event","onAddPlacement","onUpdatePlacement","onDeletePlacement","React","open","setOpen","companies","i","allCompanies","length","obj","useEffect","SubCard","TextField","fullWidth","onChange","e","Company_ID","target","value","select","label","map","option","MenuItem","onSelect","Company_name","disabled","Grid","container","direction","justifyContent","spacing","item","md","xs","Project_Title","Stipend","Internal_Guide_ID","External_Guide_Name","External_Guide_Mobile_Number","External_Guide_Email_ID","style","Button","onClick","size","component","Modal","onClose","Box","sx","left","transform","bgcolor","boxShadow","p","Typography","handleOpen","studentData","setStudentData","StudentDetails","setStudentDetails","setStudentPlacement","setallCompanies","placementCard","setPlacementCard","studentDetailsState","setstudentDetailsState","handleAddPlacementChange","studId","location","pathname","split","lastElem","slice","payLoad","handleChange","changeStateFromChild","seed","operation","filteredList","filter","elem","concat","toUpperCase","jsonData","student_Id","response1","jsonData1","studentPlacementCardCopy","x","Math","random","unshift","callerFunc","from","idx","first","searchName","setsearchName","namesResult","setNamesResult","handleNamesChange","status","contentContainer","fontStyle","fontWeight","divider","useTheme","useLocation","isNaN","parseInt","MainCard","title","CircularProgress","onInput","Student_ID","FirstName","LastName","selectName","Divider","ChipCard","NoStudent","ID","loading","Student_details","LoadingButton","placement_card_copy","Designation","Salary","Offer_Letter","Passed_out_year","IsFinal","companyName","loadingPosition","startIcon","WhiteTextTypography","withStyles","root","MiddleName","Current_CPI"],"sourceRoot":""}