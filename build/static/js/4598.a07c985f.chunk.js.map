{"version":3,"file":"static/js/4598.a07c985f.chunk.js","mappings":"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","sources":["Utilities/HandleToast.js","Utilities/RedirectHandler.js","Utilities/ResponsePipelineHandler.js","hooks/useScriptRef.js","views/Login/AuthWrapper1.js","views/Login/AuthCardWrapper.js","Utilities/HandleCookie/SetClientAdminCookies.js","views/Login/RestLogin.js","views/Login/AdminLogin.js"],"sourcesContent":["const handleToast = function (params) {\n\n    const toast = params.HandleToast.toast\n    const data = params.data\n    const flag = params.HandleToast.flag\n    const customMessage = params.HandleToast.customMessage\n    let message = \"not defined\"\n    if (!flag) {\n        message = data[\"data\"]\n    }\n    else {\n        message = customMessage\n    }\n    if (data[\"status\"]) {\n        toast.success(message)\n    }\n    else {\n        toast.error(message)\n    }\n}\nexport default handleToast","import { useHistory } from \"react-router\"\nconst RedirectHandler = function (props) {\n    const history = useHistory()\n    const data = props.data\n    if (data[\"redirect\"]) {\n        history.push(data[\"redirectUrl\"])\n    }\n}\nexport default RedirectHandler","import handleToast from \"./HandleToast\"\nimport RedirectHandler from \"./RedirectHandler\"\nconst responsePipelineHandler = function (data, seq_no = 0) {\n    const executionSequence = [[RedirectHandler, handleToast], [handleToast]]\n    executionSequence[seq_no].forEach((func) => {\n        func(data)\n    })\n}\nexport default responsePipelineHandler\n","import { useEffect, useRef } from 'react';\n\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","// material-ui\nimport { styled } from '@material-ui/styles';\n\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\n\n// project import\nimport MainCard from './../../ui-component/cards/MainCard';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: '475px',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: '20px'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        }\n    },\n    content: {\n        padding: theme.spacing(5) + ' !important',\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3) + ' !important'\n        }\n    }\n}));\n\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\n\nconst AuthCardWrapper = ({ children, ...other }) => {\n    const classes = useStyles();\n\n    return (\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\n            {children}\n        </MainCard>\n    );\n};\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","var CryptoJS = require(\"crypto-js\")\nvar AES = require(\"crypto-js/aes\");\n\nconst SetClientAdminCookies = async function (adminId, expiryTime) {\n    try {\n        let exp = new Date(expiryTime)\n        let aid = AES.encrypt(adminId, process.env.React_App_Encryption_Key).toString().toString()\n        localStorage.setItem(\"AdminAuthentication\", JSON.stringify({ \"adminId\": aid, \"expiry\": exp }))\n        console.log(\"helr\")\n\n    }\n    catch (err) {\n        console.log(err)\n        console.log(\"Error setting admin client cookies\")\n    }\n}\nexport default SetClientAdminCookies","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport configData from '../../config';\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography\n} from '@material-ui/core';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\n\n// project imports\nimport useScriptRef from '../../hooks/useScriptRef';\nimport AnimateButton from '../../ui-component/extended/AnimateButton';\nimport { ACCOUNT_INITIALIZE } from './../../store/actions';\n\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport UsePost from '../../Utilities/UsePost';\nimport { ToastContainer, toast } from 'react-toastify';\nimport responsePipelineHandler from '../../Utilities/ResponsePipelineHandler';\nimport { useHistory } from \"react-router-dom\";\n// import HandleCookies from \"../../Utilities/HandleCookies\"\nimport SetClientAdminCookies from \"../../Utilities/HandleCookie/SetClientAdminCookies\"\nimport VerifyAdminCookies from \"../../Utilities/HandleCookie/VerifyAdminCookie\"\n\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[700],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//============================|| API JWT - LOGIN ||============================//\n\nconst RestLogin = (props, { ...others }) => {\n    const classes = useStyles();\n    const dispatcher = useDispatch();\n\n    const scriptedRef = useScriptRef();\n    const [checked, setChecked] = React.useState(true);\n\n    const [showPassword, setShowPassword] = React.useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const [data, setData] = useState({\n        adminName: \"\",\n        adminPassword: \"\"\n    });\n\n    const history = useHistory()\n\n    useEffect(() => {\n        const verificationStatus = VerifyAdminCookies()\n        console.log(verificationStatus)\n        if (verificationStatus) {\n            history.push(\"/dashboard/default\")\n        }\n    }, [])\n\n\n    async function handleSubmit(event) {\n\n        event.preventDefault();\n        console.log(data);\n        const res = await UsePost(\"/adminLogin/login/\", data, \"POST\")\n        const params1 = {\n            data: res,\n            HandleToast: {\n                toast: toast,\n                flag: false,\n            }\n        }\n        console.log(res)\n        if (res) {\n            if (res.status) {\n                let a = new Date(new Date().getTime() + 2089200000);\n                await SetClientAdminCookies(data.adminName, a)\n                history.push(\"/dashboard/default\")\n                console.log(res);\n            }\n            responsePipelineHandler(params1, 1)\n        }\n\n\n    };\n\n    return (\n        <React.Fragment>\n            <FormControl fullWidth\n                // error={Boolean(touched.email && errors.email)} \n                className={classes.loginInput}>\n                <InputLabel htmlFor=\"outlined-adornment-email-login\">Admin Name</InputLabel>\n                <OutlinedInput\n                    // id=\"outlined-adornment-email-logi\n                    id=\"admin_name\"\n                    label=\"Admin Name\"\n                    name=\"admin_name\"\n                    type=\"text\"\n                    value={data['adminName']}\n                    // onBlur={handleBlur}\n                    onKeyPress={(e) => {\n                        if (e.key === \"Enter\") {\n                            handleSubmit(e)\n                        }\n                    }}\n                    onChange={(e) => {\n                        setData({ ...data, adminName: e.target.value });\n                    }}\n                    inputProps={{\n                        classes: {\n                            notchedOutline: classes.notchedOutline\n                        }\n                    }}\n                />\n            </FormControl>\n\n            <FormControl fullWidth\n                // error={Boolean(touched.password && errors.password)} \n                className={classes.loginInput}>\n                <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                <OutlinedInput\n                    // id=\"outlined-adornment-password-login\"\n                    id=\"admin_password\"\n                    name=\"admin_password\"\n                    label=\"Admin Password\"\n                    type={showPassword ? 'text' : 'password'}\n                    value={data['adminPassword']}\n                    onKeyPress={(e) => {\n                        if (e.key === \"Enter\") {\n                            handleSubmit(e)\n                        }\n                    }}\n                    // onBlur={handleBlur}\n                    onChange={(e) => {\n                        setData({ ...data, adminPassword: e.target.value });\n                    }}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                            >\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                    inputProps={{\n                        classes: {\n                            notchedOutline: classes.notchedOutline\n                        }\n                    }}\n                />\n\n            </FormControl>\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                {/* <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={checked}\n                            onChange={(event) => setChecked(event.target.checked)}\n                            name=\"checked\"\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Remember me\"\n                /> */}\n                {/* <br /> */}\n                {/* <Typography\n                    variant=\"subtitle1\"\n                    component={Link}\n                    to={props.login ? '/pages/forgot-password/forgot-password' + props.login : '#'}\n                    color=\"secondary\"\n                    sx={{ textDecoration: 'none' }}\n                >\n                    Forgot Password?\n                </Typography> */}\n                <br />\n            </Stack>\n            {/* {errors.submit && (\n                            <Box\n                                sx={{\n                                    mt: 3\n                                }}\n                            >\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )} */}\n\n            <Box\n                sx={{\n                    mt: 2\n                }}\n            >\n                <AnimateButton>\n                    <Button\n                        disableElevation\n                        // disabled={isSubmitting}\n                        fullWidth\n                        size=\"large\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleSubmit}\n                    >\n                        SIGN IN\n                    </Button>\n                </AnimateButton>\n            </Box>\n        </React.Fragment>\n    );\n};\n\nexport default RestLogin;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from './AuthWrapper1';\nimport Logo from './../../layout/MainLayout/LogoSection/index';\nimport AuthCardWrapper from './AuthCardWrapper';\nimport RestLogin from './RestLogin';\n\n// assets\n\n//================================|| LOGIN MAIN ||================================//\n\nconst AdminLogin = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '95vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid  style={{ marginLeft: \"-8%\" }} item sx={{ mb: 3 }} >\n                                        <RouterLink to=\"#\">\n                                            <Logo />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.grey}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Dharmsinh Desai University\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Enter <u><b>admin</b></u> credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <RestLogin />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    {/* <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/register\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Don't have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid> */}\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                {/* <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid> */}\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default AdminLogin;\n"],"names":["params","toast","HandleToast","data","flag","customMessage","message","success","error","props","history","useHistory","push","seq_no","executionSequence","RedirectHandler","handleToast","forEach","func","scripted","useRef","useEffect","current","styled","backgroundColor","theme","palette","primary","light","minHeight","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","children","other","classes","MainCard","className","contentClass","AES","require","SetClientAdminCookies","adminId","expiryTime","exp","Date","aid","encrypt","process","toString","localStorage","setItem","JSON","stringify","console","log","err","redButton","fontSize","fontWeight","grey","border","borderColor","color","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","useDispatch","useScriptRef","React","showPassword","setShowPassword","useState","adminName","adminPassword","setData","handleSubmit","event","a","preventDefault","UsePost","res","params1","status","getTime","responsePipelineHandler","verificationStatus","VerifyAdminCookies","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","id","label","name","type","value","onKeyPress","e","key","onChange","target","inputProps","notchedOutline","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","Visibility","VisibilityOff","Stack","direction","alignItems","justifyContent","Box","sx","mt","AnimateButton","Button","disableElevation","size","variant","useTheme","matchDownSM","useMediaQuery","Grid","container","item","xs","m","sm","mb","style","marginLeft","to","Typography","gutterBottom","textAlign","Divider"],"sourceRoot":""}